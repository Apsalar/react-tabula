{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///dist/react-tabula.min.js","webpack:///webpack/bootstrap a63273a21c31ac1b470b","webpack:///./src/index.js","webpack:///./src/ConfigureTable.js","webpack:///./src/ExportButton.js","webpack:///./src/DataMixin.js","webpack:///./src/DataTable.js","webpack:///./src/PageItems.js","webpack:///./src/PageSize.js","webpack:///./src/Pagination.js","webpack:///./src/SearchField.js","webpack:///./src/Table.js","webpack:///./src/utils.js","webpack:///external {\"root\":\"React\",\"amd\":\"react\",\"commonjs\":\"react\",\"commonjs2\":\"react\"}","webpack:///./~/lodash/index.js","webpack:///./~/numeral/numeral.js","webpack:///./~/superagent/lib/client.js","webpack:///(webpack)/buildin/module.js","webpack:///./~/superagent/~/component-emitter/index.js","webpack:///./~/superagent/~/reduce-component/index.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_11__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","ConfigureTable","ExportButton","DataMixin","DataTable","PageItems","PageSize","Pagination","SearchField","Table","utils","onChangeQuickConfig","bind","handleChangeLeaf","React","_","Object","defineProperty","prototype","writable","configurable","value","e","preventDefault","title","target","textContent","props","current","currentTarget","parent","dataset","section","leaf","onChangeConfigLeaf","enabled","$__0","columns","columnsPossible","configGroup","config","configPrimary","isEmpty","children","isActive","isActivePane","toKey","key","toLowerCase","replace","toId","isChecked","obj","selected","isDisabled","disabled","possible","length","shortCutColumns","map","col","group","filter","shortCutConfigs","createElement","className","onClick","href","onClickPrimary","tabHeaders","conf","data-toggle","tabPanes","sectChildren","sect","leaves","o","type","defaultChecked","onChange","data-parent","prop","data-section","data-leaf","push","counter","sections","data-target","aria-expanded","role","tabIndex","onConfigCancel","aria-labelledby","configHeader","aria-hidden","hidden","data-dismiss","onConfigSave","sort","superagent","containsIgnoreCase","a","b","trim","indexOf","objectExists","getInitialState","data","initialData","slice","sortBy","initialSortBy","filterValues","currentPage","pageSize","initialPageSize","configBackup","cloneDeep","getDefaultProps","configUrl","configBaseRequest","configSuccessCallback","configErrorCallback","enableConfig","enableExport","keys","pageSizeMax","pageSizeOptions","filters","globalSearch","componentWillMount","state","setState","onSort","onFilter","filterName","filterValue","$__1","newData","buildPage","start","end","endIndex","dataSize","startIndex","totalPages","Math","ceil","onChangePage","pageNumber","onPageSizeChange","newPageSize","newPage","floor","clearModalAlert","backup","showModalAlert","text","$","show","hide","saveConfig","baseRequest","payload","merge","configuration","url","postCallback","configPostCallback","post","send","set","err","reply","ok","modal","stopPropagation","forEach","child","callback","msg","console","log","findNode","list","findLeaf","parentProp","sectionProp","leafProp","branch","match","checked","MAX","counts","selectedSize","reduce","createClass","displayName","mixins","render","page","aria-label","placeholder","dataArray","label","max","options","prettyInt","num","numeral","format","self","size","mappedOpts","PropTypes","nextProps","showPages","event","diff","min","btnEvent","isCurrent","buttons","i","firstHandler","prevHandler","isNotFirst","nextHandler","lastHandler","isNotLast","aria-disabled","propTypes","func","isRequired","number","defaultProps","describedby","buildSortProps","order","nextOrder","sortEvent","onKeyDown","keyCode","onMouseDown","aria-sort","$Table_headers","simpleGet","keyGetter","undefined","getCellValue","row","defaultContent","getCellClass","header","thDom","findDOMNode","style","width","offsetWidth","buildRowOptions","headers","idx","sortProps","sortable","__spread","ref","scope","getKeys","Array","isArray","rows","aria-live","colSpan","oneOfType","arrayOf","string","shape","bool","array","object","oneOf","some","pred","sortedData","sortByFunc","reverse","filterPass","filterDef","partial","each","filterFunc","__WEBPACK_AMD_DEFINE_RESULT__","global","baseCompareAscending","other","valIsReflexive","othIsReflexive","baseFindIndex","predicate","fromRight","index","baseIndexOf","fromIndex","indexOfNaN","baseIsFunction","baseToString","charAtCallback","charCodeAt","charsLeftIndex","chars","charAt","charsRightIndex","compareAscending","criteria","compareMultiple","orders","objCriteria","othCriteria","ordersLength","result","deburrLetter","letter","deburredLetters","escapeHtmlChar","chr","htmlEscapes","escapeStringChar","stringEscapes","isObjectLike","isSpace","charCode","replaceHolders","resIndex","PLACEHOLDER","sortedUniq","iteratee","seen","computed","trimmedLeftIndex","trimmedRightIndex","unescapeHtmlChar","htmlUnescapes","runInContext","context","lodash","LazyWrapper","LodashWrapper","hasOwnProperty","wrapperClone","baseLodash","chainAll","actions","__wrapped__","__actions__","__chain__","__dir__","__dropCount__","__filtered__","__iteratees__","__takeCount__","POSITIVE_INFINITY","__views__","lazyClone","iteratees","views","arrayCopy","lazyReverse","clone","lazyValue","baseWrapperValue","dir","isRight","view","getView","takeCount","nativeMin","iterLength","outer","iterIndex","LAZY_DROP_WHILE_FLAG","done","count","limit","LAZY_MAP_FLAG","LAZY_FILTER_FLAG","MapCache","__data__","mapDelete","has","mapGet","mapHas","mapSet","SetCache","values","hash","nativeCreate","Set","cacheIndexOf","cache","isObject","cachePush","add","source","arrayEach","arrayEachRight","arrayEvery","arrayFilter","arrayMap","arrayMax","NEGATIVE_INFINITY","arrayMin","arrayReduce","accumulator","initFromArray","arrayReduceRight","arraySome","arraySum","assignDefaults","objectValue","sourceValue","assignOwnDefaults","assignWith","customizer","apply","getSymbols","baseAt","collection","isArr","isLength","propsLength","isIndex","baseCopy","baseCallback","thisArg","argCount","bindCallback","identity","baseMatches","property","baseMatchesProperty","baseClone","isDeep","stackA","stackB","initCloneArray","tag","objToString","isFunc","funcTag","objectTag","argsTag","cloneableTags","initCloneByTag","initCloneObject","baseAssign","baseForOwn","subValue","baseDelay","wait","args","TypeError","FUNC_ERROR_TEXT","setTimeout","baseDifference","getIndexOf","isCommon","createCache","valuesLength","valuesIndex","baseEvery","baseEach","baseFill","baseFilter","baseFind","eachFunc","retKey","baseFlatten","isStrict","isArguments","valIndex","valLength","baseForIn","baseFor","keysIn","baseForOwnRight","baseForRight","baseFunctions","isFunction","baseGet","path","pathKey","toObject","baseIsEqual","isLoose","valType","othType","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","isTypedArray","objIsObj","othIsObj","isSameTag","equalByTag","valWrapped","othWrapped","equalArrays","equalObjects","pop","baseIsMatch","strictCompareFlags","noCustomizer","objValue","srcValue","baseMap","getLength","constant","isStrictComparable","isKey","toPath","baseSlice","last","baseMerge","isSrcArr","baseMergeDeep","mergeFunc","isPlainObject","toPlainObject","baseProperty","basePropertyDeep","basePullAt","indexes","parseFloat","previous","splice","baseRandom","nativeRandom","baseReduce","initFromCollection","baseSome","baseSortBy","comparer","baseSortByOrder","getCallback","baseSum","baseUniq","isLarge","seenIndex","baseValues","baseWhile","isDrop","action","binaryIndex","retHighest","low","high","HALF_MAX_ARRAY_LENGTH","mid","binaryIndexBy","valIsNaN","valIsUndef","isReflexive","setLow","MAX_ARRAY_INDEX","arguments","bufferClone","buffer","bufferSlice","composeArgs","partials","holders","holdersLength","argsIndex","argsLength","nativeMax","leftIndex","leftLength","composeArgsRight","holdersIndex","rightIndex","rightLength","pad","createAggregator","setter","initializer","createAssigner","assigner","restParam","sources","guard","isIterateeCall","createBaseEach","iterable","createBaseFor","keysFunc","createBindWrapper","wrapper","fn","Ctor","createCtorWrapper","createCompounder","words","deburr","thisBinding","baseCreate","createCurry","flag","curryFunc","arity","createWrapper","createExtremum","arrayFunc","isMin","noIteratee","isString","toIterable","extremumBy","createFind","createFindIndex","createFindKey","objectFunc","createFlow","funcs","funcName","getFuncName","getData","isLaziable","thru","plant","createForEach","createForIn","createForOwn","createPadDir","createPadding","createPartial","partialFunc","createReduce","createHybridWrapper","bitmask","partialsRight","holdersRight","argPos","ary","isCurry","isCurryRight","argsHolders","newArgPos","newArity","newsHolders","newHoldersRight","newPartials","newPartialsRight","PARTIAL_FLAG","PARTIAL_RIGHT_FLAG","isCurryBound","BIND_FLAG","BIND_KEY_FLAG","setData","isBind","isBindKey","reorder","isAry","ARY_FLAG","CURRY_FLAG","CURRY_BOUND_FLAG","CURRY_RIGHT_FLAG","strLength","nativeIsFinite","padLength","repeat","createPartialWrapper","createSortedIndex","mergeData","baseSetData","arrLength","othLength","arrValue","othValue","othIndex","boolTag","dateTag","errorTag","name","message","numberTag","regexpTag","stringTag","objProps","objLength","othProps","skipCtor","objCtor","constructor","othCtor","exValue","transforms","input","arrayBufferTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","byteOffset","reFlags","exec","lastIndex","invokePath","MAX_SAFE_INTEGER","prereq","reIsPlainProp","test","reIsDeepProp","srcBitmask","newBitmask","isCombo","REARG_FLAG","pickByArray","pickByCallback","oldArray","shimIsPlainObject","support","shimKeys","allowIndexes","nonEnumArgs","rePropName","quote","reEscapeChar","chunk","compact","drop","n","dropRight","dropRightWhile","dropWhile","fill","first","flatten","flattenDeep","initial","intersection","caches","lastIndexOf","pull","remove","rest","take","takeRight","takeRightWhile","takeWhile","uniq","isSorted","unzip","xor","concat","zipObject","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperPlant","wrapperReverse","wrapperToString","wrapperValue","every","findWhere","find","includes","pluck","reject","sample","shuffle","rand","sortByOrder","where","after","temp","before","debounce","cancel","timeoutId","clearTimeout","maxTimeoutId","trailingCall","delayed","remaining","now","stamp","isCalled","lastCalled","maxDelayed","trailing","maxWait","debounced","leading","leadingCall","memoize","resolver","memoized","get","Cache","negate","once","otherArgs","spread","throttle","debounceOptions","wrap","isBoolean","isDate","isElement","nodeType","isEqual","isError","isMatch","isNaN","isNumber","isNative","reIsNative","fnToString","reIsHostCtor","isNull","isRegExp","typedArrayTags","isUndefined","toArray","create","properties","functions","defaultValue","invert","multiValue","isProto","skipIndexes","mapValues","pairs","nested","transform","valuesIn","inRange","random","floating","noMin","noMax","capitalize","toUpperCase","reLatin1","reComboMark","endsWith","position","escape","reHasUnescapedHtml","reUnescapedHtml","escapeRegExp","reHasRegExpChars","reRegExpChars","parseInt","radix","nativeParseInt","startsWith","template","otherOptions","settings","templateSettings","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reNoMatch","reDelimiters","RegExp","reInterpolate","reEsTemplate","evaluate","sourceURL","templateCounter","escapeValue","interpolateValue","esTemplateValue","evaluateValue","offset","reUnescapedString","variable","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","attempt","Function","trimLeft","trimRight","trunc","DEFAULT_TRUNC_LENGTH","omission","DEFAULT_TRUNC_OMISSION","separator","search","newEnd","substring","unescape","reHasEscapedHtml","reEscapedHtml","pattern","reWords","matches","matchesProperty","mixin","isObj","methodNames","methodName","noConflict","oldDash","noop","propertyOf","range","step","times","MAX_ARRAY_LENGTH","uniqueId","prefix","idCounter","augend","addend","sum","defaults","pick","contextProps","Date","Error","Number","String","arrayProto","objectProto","stringProto","document","window","toString","ArrayBuffer","getOwnPropertySymbols","getPrototypeOf","preventExtensions","propertyIsEnumerable","Uint8Array","WeakMap","Float64Array","nativeAssign","1","assign","nativeIsArray","isFinite","nativeKeys","nativeNow","nativeNumIsFinite","pow","FLOAT64_BYTES_PER_ELEMENT","BYTES_PER_ELEMENT","metaMap","realNames","x","valueOf","y","funcDecomp","funcNames","dom","createDocumentFragment","reEscape","reEvaluate","baseEachRight","byteLength","floatLength","otherFunc","HOT_SPAN","HOT_COUNT","difference","findIndex","findLastIndex","pullAt","sortedIndex","sortedLastIndex","union","arrays","without","zip","at","countBy","findLast","forEachRight","groupBy","indexBy","invoke","isProp","partition","reduceRight","sortByAll","getTime","bindAll","bindKey","curry","curryRight","defer","delay","flow","flowRight","partialRight","rearg","objProto","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","omit","camelCase","word","kebabCase","padLeft","padRight","whitespace","reHasHexPrefix","snakeCase","startCase","method","methodOf","backflow","collect","compose","eachRight","extend","methods","select","tail","unique","all","any","contains","detect","foldl","foldr","head","include","inject","VERSION","isFilter","isDropWhile","filtered","whileName","takeName","dropName","operationName","createCallback","lodashFunc","checkIteratee","retUnwrapped","isHybrid","isLazy","useLazy","onlyLazy","chainName","names","commit","run","toJSON","mapTag","setTag","weakMapTag","upper","lower","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","&","<",">","\"","'","`","&amp;","&lt;","&gt;","&quot;","&#39;","&#96;","objectTypes","function","\\","\n","\r"," "," ","freeExports","freeModule","freeGlobal","freeSelf","freeWindow","__WEBPACK_AMD_DEFINE_ARRAY__","Numeral","_value","toFixed","precision","roundingFunction","optionals","optionalsRegExp","output","power","formatNumeral","formatCurrency","formatPercentage","formatTime","formatNumber","unformatNumeral","thousandRegExp","millionRegExp","billionRegExp","trillionRegExp","stringOriginal","suffixes","bytesMultiplier","unformatTime","zeroFormat","languages","currentLanguage","delimiters","decimal","abbreviations","thousand","currency","symbol","million","billion","trillion","split","spliceIndex","symbolIndex","openParenIndex","minusSignIndex","space","join","hours","minutes","seconds","round","timeArray","w","thousands","negP","signed","optDec","abbr","abbrK","abbrM","abbrB","abbrT","abbrForce","bytes","ord","abs","d","neg","ordinal","loadLanguage","multiplier","parts","correctionFactor","prev","next","mp","mn","Infinity","defaultFormat","hasModule","isNumeral","unformat","version","language","languageData","opt_initialValue","isValueSet","inputString","cback","accum","curr","currI","O","corrFactor","subtract","multiply","divide","ender","isHost","str","serialize","encodeURIComponent","parseString","pair","len","decodeURIComponent","parseHeader","line","field","val","lines","fields","shift","params","Response","req","xhr","responseType","responseText","statusText","setStatusProperties","status","getAllResponseHeaders","getResponseHeader","setHeaderProperties","body","parseBody","response","Request","Emitter","_query","_header","on","res","parse","original","emit","new_err","request","getXHR","XMLHttpRequest","location","protocol","ActiveXObject","s","serializeObject","types","html","json","xml","urlencoded","form","form-data","application/x-www-form-urlencoded","application/json","JSON","stringify","ct","statusType","info","clientError","serverError","error","toError","accepted","noContent","badRequest","unauthorized","notAcceptable","notFound","forbidden","use","timeout","ms","_timeout","_timer","abort","aborted","unset","getHeader","accept","auth","user","pass","btoa","query","_formData","FormData","append","attach","file","filename","_data","_callback","crossDomainError","crossDomain","timeoutError","withCredentials","_withCredentials","onreadystatechange","readyState","timedout","handleProgress","total","percent","hasListeners","onprogress","upload","open","setRequestHeader","del","patch","put","webpackPolyfill","deprecate","paths","addEventListener","_callbacks","off","removeListener","removeAllListeners","removeEventListener","callbacks","cb","listeners","arr"],"mappings":"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","file":"dist/react-tabula.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactTabula\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ReactTabula\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_11__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactTabula\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ReactTabula\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_11__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports.ConfigureTable = __webpack_require__(1);\n\texports.ExportButton = __webpack_require__(2);\n\texports.DataMixin = __webpack_require__(3);\n\texports.DataTable = __webpack_require__(4);\n\texports.PageItems = __webpack_require__(5);\n\texports.PageSize = __webpack_require__(6);\n\texports.Pagination = __webpack_require__(7);\n\texports.SearchField = __webpack_require__(8);\n\texports.Table = __webpack_require__(9);\n\texports.utils = __webpack_require__(10);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar React = __webpack_require__(11);\n\tvar _ = __webpack_require__(12);\n\t\n\t\n\t  function ConfigureTable() {\n\t    this.onChangeQuickConfig = this.onChangeQuickConfig.bind(this);\n\t    this.handleChangeLeaf = this.handleChangeLeaf.bind(this);\n\t  }\n\t\n\t  Object.defineProperty(ConfigureTable.prototype,\"onChangeQuickConfig\",{writable:true,configurable:true,value:function(e) {\n\t    e.preventDefault();\n\t    var title = e.target.textContent;\n\t    this.props.onChangeQuickConfig(title);\n\t  }});\n\t\n\t  Object.defineProperty(ConfigureTable.prototype,\"handleChangeLeaf\",{writable:true,configurable:true,value:function(e) {\n\t    var current = e.currentTarget;\n\t    var parent = current.dataset.parent;\n\t    var section = current.dataset.section;\n\t    var leaf = current.dataset.leaf;\n\t\n\t    this.props.onChangeConfigLeaf(current, parent, section, leaf);\n\t    return e;\n\t  }});\n\t\n\t  Object.defineProperty(ConfigureTable.prototype,\"render\",{writable:true,configurable:true,value:function() {\n\t    if (!this.props.enabled) {\n\t      return null;\n\t    }\n\t\n\t    var $__0=     this.props,columns=$__0.columns,columnsPossible=$__0.columnsPossible,configGroup=$__0.configGroup,config=$__0.config;\n\t    var configPrimary = this.props.configPrimary;\n\t\n\t    if (_.isEmpty(config) || _.isEmpty(config.children)) {\n\t      return null;\n\t    }\n\t\n\t    var isActive = function(title)  {\n\t      return title === configPrimary ? 'active' : '';\n\t    };\n\t\n\t    var isActivePane = function(title)  {\n\t      return title === configPrimary ? 'tab-pane active' : 'tab-pane';\n\t    };\n\t\n\t    var toKey = function(key)  { return key.toLowerCase().replace(' ', '_'); };\n\t    var toId = function(key)  { return \"#\" + toKey(key); };\n\t    var isChecked = function(obj)  { return obj.selected ? \"checked\" : \"\"; };\n\t    var isDisabled = function(obj)  { return obj.disabled ? \"disabled\" : \"\"; };\n\t\n\t    var makeRef = function(conf, sect, leaf)  { return [conf.prop, sect.prop, leaf.prop].join(':'); }\n\t\n\t    var possible = columnsPossible && columnsPossible.length ?\n\t      columnsPossible : columns;\n\t\n\t    // TODO move shortCutConfigs to separate component class\n\t    var shortCutColumns = possible.map(function(col)  {\n\t      return col.group === configGroup ? col : null;\n\t    }).filter(function(col)  { return col; });\n\t\n\t    var shortCutConfigs = shortCutColumns.map(function(col)  {\n\t      return (\n\t        React.createElement(\"li\", {className: isActive(col.title), onClick: this.onChangeQuickConfig}, \n\t          React.createElement(\"a\", {href: \"#\"}, col.title)\n\t        )\n\t      );\n\t    }.bind(this));\n\t\n\t    var onClickPrimary = this.props.onClickPrimary;\n\t    var tabHeaders = config.children.map(function(conf)  {\n\t      return (\n\t        React.createElement(\"li\", {className: isActive(conf.title)}, \n\t          React.createElement(\"a\", {href: toId(conf.title), \n\t            onClick: onClickPrimary, \n\t            \"data-toggle\": \"tab\"}, conf.title)\n\t        )\n\t      );\n\t    });\n\t\n\t    var handleChangeLeaf = this.handleChangeLeaf;\n\t    var tabPanes = config.children.map(function(conf)  {\n\t\n\t      var sectChildren = [];\n\t      conf.children.map(function(sect)  {\n\t        var leaves = sect.children.filter(function(o)  { return o; }).map(function(leaf)  {\n\t          return (\n\t            React.createElement(\"div\", {className: \"checkbox\"}, React.createElement(\"label\", null, React.createElement(\"input\", {type: \"checkbox\", \n\t              defaultChecked: isChecked(leaf), \n\t              disabled: isDisabled(leaf), \n\t              onChange: handleChangeLeaf, \n\t              \"data-parent\": conf.prop, \n\t              \"data-section\": sect.prop, \n\t              \"data-leaf\": leaf.prop}\n\t            ), leaf.title))\n\t          );\n\t        });\n\t        sectChildren.push(leaves);\n\t      });\n\t\n\t      var counter = 0;\n\t      var sections = conf.children.map(function(sect)  {\n\t        return (\n\t          React.createElement(\"div\", {className: \"panel panel-default ns-panel-default\"}, \n\t            React.createElement(\"div\", {className: \"panel panel-heading ns-panel-heading\"}, sect.title), \n\t            React.createElement(\"div\", {className: \"panel panel-body ns-panel-body\"}, \n\t              sectChildren[counter++]\n\t            )\n\t          )\n\t        )\n\t      });\n\t\n\t      return (\n\t        React.createElement(\"div\", {className: isActivePane(conf.title), id: toKey(conf.title)}, \n\t          sections\n\t        )\n\t      );\n\t\n\t    });\n\t\n\t    return (\n\t      React.createElement(\"div\", {className: \"configure-table-wrapper\"}, \n\t        React.createElement(\"div\", {className: \"btn-group\"}, \n\t          React.createElement(\"button\", {type: \"button\", className: \"btn btn-default\", \"data-toggle\": \"modal\", \"data-target\": \"#configure-table-modal\"}, \"Configure\"), \n\t\n\t          React.createElement(\"button\", {type: \"button\", className: \"btn btn-default dropdown-toggle\", \n\t            \"data-toggle\": \"dropdown\", \"aria-expanded\": \"false\"}, \n\t            React.createElement(\"span\", {className: \"caret\"}), \n\t            React.createElement(\"span\", {className: \"sr-only\"}, \"Toggle Dropdown\")\n\t          ), \n\t          React.createElement(\"ul\", {className: \"dropdown-menu\", role: \"menu\"}, \n\t            shortCutConfigs, \n\t            React.createElement(\"li\", {className: \"divider\"}), \n\t            React.createElement(\"li\", {\"data-toggle\": \"modal\", \"data-target\": \"#configure-table-modal\"}, React.createElement(\"a\", {href: \"#\"}, \"Configure\"))\n\t          )\n\t        ), \n\t\n\t        React.createElement(\"div\", {className: \"modal fade\", \n\t          id: \"configure-table-modal\", \n\t          tabIndex: \"-1\", role: \"dialog\", \n\t          onClick: this.props.onConfigCancel, \n\t          \"aria-labelledby\": this.props.configHeader, \n\t          \"aria-hidden\": \"true\"}, \n\t          React.createElement(\"div\", {className: \"modal-dialog\"}, \n\t            React.createElement(\"div\", {className: \"modal-content\"}, \n\t\n\t              React.createElement(\"div\", {className: \"modal-header\"}, \n\t                React.createElement(\"h4\", {className: \"modal-title\", id: \"configure-table-modal-title\"}, this.props.configHeader)\n\t              ), \n\t\n\t              React.createElement(\"div\", {className: \"modal-body\"}, \n\t                React.createElement(\"div\", {className: \"row\"}, \n\t                  React.createElement(\"div\", {className: \"col-xs-3\"}, \n\t                    React.createElement(\"ul\", {className: \"nav nav-tabs tabs-left\"}, \n\t                      React.createElement(\"li\", null, \n\t                        React.createElement(\"h5\", {className: \"ns-primary-header\"}, config.title)\n\t                       ), \n\t                      tabHeaders\n\t                    )\n\t                  ), \n\t\n\t                  React.createElement(\"div\", {className: \"col-xs-9\"}, \n\t                    React.createElement(\"div\", {className: \"tab-content\"}, \n\t                      tabPanes\n\t                    )\n\t                  )\n\t\n\t                )\n\t\n\t              ), \n\t\n\t              React.createElement(\"div\", {className: \"modal-footer\"}, \n\t                React.createElement(\"div\", {className: \"alert alert-danger\", role: \"alert\", hidden: true}), \n\t                React.createElement(\"button\", {className: \"btn btn-default\", type: \"button\", \"data-dismiss\": \"modal\", onClick: this.props.onConfigCancel}, \"Cancel\"), \n\t                React.createElement(\"button\", {className: \"btn btn-primary\", onClick: this.props.onConfigSave}, \"Save changes\")\n\t              )\n\t\n\t            )\n\t          )\n\t        )\n\t      )\n\t    );\n\t  }});\n\t\n\t\n\t\n\tmodule.exports = ConfigureTable;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar React = __webpack_require__(11);\n\t\n\tfunction ExportButton(){}\n\t\n\t  Object.defineProperty(ExportButton.prototype,\"render\",{writable:true,configurable:true,value:function() {\n\t    if (!this.props.enabled) {\n\t      return null;\n\t    }\n\t\n\t    return (\n\t      React.createElement(\"div\", {className: \"btn-group\"}, \n\t        React.createElement(\"button\", {type: \"button\", className: \"btn btn-default\"}, \"Export\")\n\t      )\n\t    );\n\t  }});\n\t\n\t\n\t\n\tmodule.exports = ExportButton;\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar $__0=     __webpack_require__(10),sort=$__0.sort,filter=$__0.filter;\n\tvar React = __webpack_require__(11);\n\tvar _ = __webpack_require__(12);\n\tvar superagent = __webpack_require__(14);\n\t\n\tvar containsIgnoreCase = function(a, b) {\n\t  a = (a + '').toLowerCase().trim();\n\t  b = (b + '').toLowerCase().trim();\n\t  return b.indexOf(a) >= 0;\n\t};\n\t\n\t\n\tvar objectExists = function(obj)  { return obj; }\n\t\n\t\n\tmodule.exports = {\n\t\n\t  getInitialState:function() {\n\t    return {\n\t      // Clone the initialData.\n\t      data: this.props.initialData.slice(0),\n\t      sortBy: this.props.initialSortBy,\n\t      filterValues: {},\n\t      currentPage: 0,\n\t      pageSize: this.props.initialPageSize,\n\t      config: this.props.config,\n\t      configPrimary: '',\n\t      configBackup: _.cloneDeep(this.props.config)\n\t    };\n\t  },\n\t\n\t  getDefaultProps:function() {\n\t    return {\n\t      columns: [],\n\t      columnsPossible: [],\n\t      configGroup: '',\n\t      configHeader: 'Configure',\n\t      configUrl: '',\n\t      configBaseRequest: {},\n\t      configSuccessCallback: function () {},\n\t      configErrorCallback: function () {},\n\t      enableConfig: false,\n\t      enableExport: false,\n\t      initialPageSize: 5,\n\t      keys: [],\n\t      pageSizeMax: 20,\n\t      pageSizeOptions: [ 5, 10, 20 ],\n\t      filters: {\n\t        globalSearch: {\n\t          filter: containsIgnoreCase\n\t        }\n\t      }\n\t    };\n\t  },\n\t\n\t  componentWillMount:function() {\n\t    // Do the initial sorting if specified.\n\t    var $__0=   this.state,sortBy=$__0.sortBy,data=$__0.data;\n\t    if (sortBy) {\n\t      this.setState({ data: sort(sortBy, data) });\n\t    }\n\t  },\n\t\n\t  onSort:function(sortBy) {\n\t    this.setState({\n\t      sortBy: sortBy,\n\t      data: sort(sortBy, this.state.data)\n\t    });\n\t  },\n\t\n\t  onFilter:function(filterName, filterValue) {\n\t    var $__0=   this.state,filterValues=$__0.filterValues,sortBy=$__0.sortBy;\n\t    var $__1=   this.props,initialData=$__1.initialData,filters=$__1.filters;\n\t\n\t    filterValues[filterName] = filterValue;\n\t    var newData = filter(filters, filterValues, initialData);\n\t    newData = sort(sortBy, newData);\n\t\n\t    this.setState({\n\t      data: newData,\n\t      filterValues: filterValues,\n\t      currentPage: 0\n\t    });\n\t  },\n\t\n\t  // Pagination\n\t  buildPage:function() {\n\t    var $__0=     this.state,data=$__0.data,currentPage=$__0.currentPage,pageSize=$__0.pageSize,config=$__0.config;\n\t    var start = pageSize * currentPage;\n\t    var end = start + pageSize;\n\t    var endIndex = data.length > end ? end : data.length;\n\t\n\t    return {\n\t      data: data.slice(start, end),\n\t      dataSize: data.length,\n\t      currentPage: currentPage,\n\t      startIndex: start,\n\t      endIndex: endIndex,\n\t      totalPages: Math.ceil(data.length / pageSize),\n\t      config: config\n\t    };\n\t  },\n\t\n\t  onChangePage:function(pageNumber) {\n\t    var pageSize = this.state.pageSize;\n\t    var start = pageSize * pageNumber;\n\t    var end = start + pageSize;\n\t\n\t    this.setState({\n\t      currentPage: pageNumber,\n\t      startIndex: start,\n\t      endIndex: end\n\t    });\n\t  },\n\t\n\t  onPageSizeChange:function(value) {\n\t    var newPageSize = +value;\n\t    var $__0=   this.state,currentPage=$__0.currentPage,pageSize=$__0.pageSize;\n\t    var newPage = Math.floor((currentPage * pageSize) / newPageSize);\n\t\n\t    var start = newPageSize * currentPage;\n\t    var end = start + newPageSize;\n\t\n\t    this.setState({\n\t      pageSize: newPageSize,\n\t      currentPage: newPage,\n\t      startIndex: start,\n\t      endIndex: end\n\t    });\n\t  },\n\t\n\t  onConfigCancel:function() {\n\t    this.clearModalAlert();\n\t\n\t    var backup = _.cloneDeep(this.state.configBackup);\n\t    this.setState({ config: backup });\n\t  },\n\t\n\t  showModalAlert:function(text) {\n\t    $('.modal-footer .alert').text(text).show();\n\t  },\n\t\n\t  clearModalAlert:function() {\n\t    $('.modal-footer .alert').text('').hide();\n\t  },\n\t\n\t  saveConfig:function() {\n\t    var config = this.state.config;\n\t    var baseRequest = _.cloneDeep(this.props.configBaseRequest);\n\t    var payload = _.merge(baseRequest, { \"configuration\": config });\n\t    var url = this.props.configUrl;\n\t    var clearModalAlert = this.clearModalAlert;\n\t    var showModalAlert = this.showModalAlert;\n\t\n\t    var postCallback = this.props.configPostCallback;\n\t\n\t    superagent.post(url)\n\t      .send(payload)\n\t      .set('Accept', 'application/json')\n\t      .end(function(err, reply) {\n\t        if (reply.ok) {\n\t          // XXX should we be implicitly be using jquery here?\n\t          $('#configure-table-modal').modal('hide');\n\t          clearModalAlert();\n\t        } else {\n\t          // do not close but show notification in config modal\n\t          showModalAlert('cannot save configuration right now');\n\t        }\n\t\n\t        postCallback(reply);\n\t      });\n\t  },\n\t\n\t  onConfigSave:function(e) {\n\t    e.preventDefault();\n\t    e.stopPropagation();\n\t\n\t    this.saveConfig();\n\t    return;\n\t  },\n\t\n\t  onChangeQuickConfig:function(title) {\n\t    var config = this.state.config;\n\t\n\t    config.children.forEach(function(child)  {\n\t      if (_.isEmpty(child)) {\n\t        return;\n\t      }\n\t\n\t      child.selected = child.title === title ? true : false;\n\t    });\n\t\n\t    this.props.configPrimary = title;\n\t    this.setState({ config: config });\n\t\n\t    // TODO POST current active config and reload report query\n\t    var callback = function(msg){\n\t        console.log('>>', msg);\n\t    };\n\t    this.saveConfig(callback);\n\t  },\n\t\n\t  findNode:function(list, prop) {\n\t    if (_.isEmpty(list)) { return []; }\n\t\n\t    return list.map(\n\t      function(obj)  { return obj && obj.prop === prop ? obj : null; }\n\t    ).filter(objectExists);\n\t  },\n\t\n\t  findLeaf:function(config, parentProp, sectionProp, leafProp) {\n\t    // find branch\n\t    var branch = config && config.children.length ?\n\t      this.findNode(config.children, parentProp) : [];\n\t\n\t    // find section\n\t    var section = branch && branch.length ?\n\t      this.findNode(branch[0].children, sectionProp) : []; \n\t\n\t    // find leaf node\n\t    var leaf = section && section.length ?\n\t      this.findNode(section[0].children, leafProp) : [];\n\t\n\t    return {\n\t      section: section,\n\t      leaf: leaf && leaf.length ? leaf[0] : null\n\t    };\n\t  },\n\t\n\t  onChangeConfigLeaf:function(current, parentProp, sectionProp, leafProp) {\n\t    //var config = _.cloneDeep(this.state.config);\n\t    var config = this.state.config;\n\t    var match = this.findLeaf(config, parentProp, sectionProp, leafProp);\n\t    var section = match.section;\n\t    var leaf = match.leaf;\n\t    if (!leaf) { return; }\n\t\n\t    if (!current.checked) {\n\t      leaf.selected = false;\n\t      // TODO remove disabled attributes\n\t      this.setState({ config: config });\n\t      return;\n\t    }\n\t\n\t    // Check if MAX has been exceeded - selection limit rules\n\t    var MAX = leaf.group === this.props.configGroup ? 1 : 4;\n\t    var counts = section[0].children.filter(objectExists).map(function(obj)  {\n\t      return obj && obj.selected ? 1 : 0;\n\t    })\n\t    var selectedSize = 0;\n\t    selectedSize = counts.reduce(function(a, b)  { return a+b; });\n\t\n\t    // dis-allow over-selection\n\t    if (selectedSize > MAX) {\n\t      // TODO disable all other inputs\n\t      current.checked = false;\n\t      leaf.selected = false;\n\t      this.setState({ config: config });\n\t      return current;\n\t    } else {\n\t      // TODO remove disabled attributes\n\t    }\n\t\n\t    leaf.selected = !leaf.selected;\n\t\n\t    // update config\n\t    this.setState({ config: config });\n\t    return current;\n\t  },\n\t\n\t\n\t  onClickPrimary:function(e) {\n\t    var config = this.state.config;\n\t    var title = e.currentTarget.textContent;\n\t\n\t    config.children.forEach(function(child)  {\n\t      if (_.isEmpty(child)) {\n\t        return;\n\t      }\n\t\n\t      child.selected = child.title === title ? true : false;\n\t    });\n\t\n\t    this.setState({ config: config });\n\t  }\n\t};\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar React = __webpack_require__(11);\n\t\n\tvar ConfigureTable = __webpack_require__(1);\n\tvar ExportButton = __webpack_require__(2);\n\tvar PageItems = __webpack_require__(5);\n\tvar PageSize = __webpack_require__(6);\n\tvar Pagination = __webpack_require__(7);\n\tvar SearchField = __webpack_require__(8);\n\tvar Table = __webpack_require__(9);\n\t\n\tvar DataMixin = __webpack_require__(3);\n\t\n\tvar DataTable = React.createClass({displayName: \"DataTable\",\n\t\n\t  mixins: [ DataMixin ],\n\t\n\t  render:function() {\n\t    var page = this.buildPage();\n\t\n\t    return (\n\t      React.createElement(\"div\", {className: this.props.className}, \n\t        React.createElement(\"div\", {className: \"row\"}, \n\t          React.createElement(\"div\", {className: \"col-xs-8\"}, \n\t\n\t            React.createElement(\"div\", {className: \"btn-toolbar ns-btn-toolbar\", role: \"toolbar\", \"aria-label\": \"...\"}, \n\t              React.createElement(ConfigureTable, {\n\t                columnsPossible: this.props.columnsPossible, \n\t                columns: this.props.columns, \n\t                config: this.state.config, \n\t                configGroup: this.props.configGroup, \n\t                configHeader: this.props.configHeader, \n\t                configPrimary: this.props.configPrimary, \n\t                enabled: this.props.enableConfig, \n\t                onConfigCancel: this.onConfigCancel, \n\t                onConfigSave: this.onConfigSave, \n\t                onChangeConfigLeaf: this.onChangeConfigLeaf, \n\t                onClickPrimary: this.onClickPrimary, \n\t                onChangeQuickConfig: this.onChangeQuickConfig}\n\t              ), \n\t              React.createElement(ExportButton, {enabled: this.props.enableExport})\n\t\n\t            )\n\t\n\t          ), \n\t          React.createElement(\"div\", {className: \"col-xs-4 pull-right\"}, \n\t            React.createElement(SearchField, {\n\t              id: \"search-field\", \n\t              className: \"input-group pull-right\", \n\t              placeholder: \"Search Table\", \n\t              value: this.state.filterValues.globalSearch, \n\t              onChange: this.onFilter.bind(this, 'globalSearch')}\n\t            )\n\t          )\n\t        ), \n\t        React.createElement(\"div\", {className: \"row ns-spacer-vertical\"}), \n\t        React.createElement(Table, {\n\t          className: \"table table-bordered\", \n\t          dataArray: page.data, \n\t          columns: this.props.columns, \n\t          keys: this.props.keys, \n\t          sortBy: this.state.sortBy, \n\t          onSort: this.onSort}\n\t        ), \n\t        React.createElement(\"div\", {className: \"row\"}, \n\t          React.createElement(\"div\", {className: \"col-xs-7\"}, \n\t            React.createElement(\"div\", {className: \"row\"}, \n\t              React.createElement(\"div\", {className: \"col-xs-12 ns-page-items-size\"}, \n\t                React.createElement(PageItems, {\n\t                  id: \"page-items\", \n\t                  className: \"page-items pull-left\", \n\t                  dataSize: page.dataSize, \n\t                  startIndex: page.startIndex, \n\t                  endIndex: page.endIndex}\n\t                ), \n\t                React.createElement(PageSize, {\n\t                  id: \"page-size\", \n\t                  className: \"page-size pull-left\", \n\t                  label: \"Show:\", \n\t                  dataSize: page.dataSize, \n\t                  value: this.state.pageSize, \n\t                  max: this.props.pageSizeMax, \n\t                  options: this.props.pageSizeOptions, \n\t                  onChange: this.onPageSizeChange}\n\t                )\n\t              )\n\t              )\n\t            ), \n\t\n\t\n\t          React.createElement(\"div\", {className: \"col-xs-5\"}, \n\t            React.createElement(Pagination, {\n\t              className: \"pagination pagination-sm pull-right ns-pagination-top\", \n\t              currentPage: page.currentPage, \n\t              totalPages: page.totalPages, \n\t              onChangePage: this.onChangePage}\n\t            )\n\t          )\n\t        )\n\t      )\n\t    );\n\t  }\n\t});\n\t\n\tmodule.exports = DataTable;\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar React = __webpack_require__(11);\n\tvar numeral = __webpack_require__(13);\n\t\n\tfunction prettyInt(num) {\n\t  return numeral(num).format('0,0');\n\t}\n\t\n\tfunction PageItems(){}\n\t\n\t  Object.defineProperty(PageItems.prototype,\"render\",{writable:true,configurable:true,value:function() {\n\t    var $__0=    this.props,dataSize=$__0.dataSize,startIndex=$__0.startIndex,endIndex=$__0.endIndex;\n\t    var start = dataSize ? startIndex + 1 : 0;\n\t\n\t    if (!dataSize) {\n\t      return null;\n\t    }\n\t\n\t    return (\n\t      React.createElement(\"div\", {className: \"ns-inline-block pull-left ns-page-items\"}, \n\t        \"Items \", prettyInt(start), \" – \", prettyInt(endIndex), \" of \", prettyInt(dataSize), \n\t        React.createElement(\"span\", {className: \"ns-spacer-horizontal\"})\n\t      )\n\t    );\n\t  }});\n\t\n\t\n\t\n\tmodule.exports = PageItems;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar React = __webpack_require__(11);\n\t\n\t\n\t\n\t  function PageSize() {\n\t    this.onChange = this.onChange.bind(this);\n\t  }\n\t\n\t  Object.defineProperty(PageSize.prototype,\"onChange\",{writable:true,configurable:true,value:function(e) {\n\t    this.props.onChange(e.target.textContent);\n\t  }});\n\t\n\t  Object.defineProperty(PageSize.prototype,\"render\",{writable:true,configurable:true,value:function() {\n\t    var self = this;\n\t    var $__0=    this.props,options=$__0.options,value=$__0.value,dataSize=$__0.dataSize;\n\t\n\t    if (!dataSize) {\n\t      return null;\n\t    }\n\t\n\t    var isActive = function(size)  {return size === value ? \"active\" : \"\";};\n\t    var mappedOpts =\n\t      options.map(\n\t        function(size) \n\t          {return React.createElement(\"li\", {role: \"presentation\", key: size, className: isActive(size)}, \n\t            React.createElement(\"a\", {className: \"ns-page-size-option\", href: \"#\", onClick: self.onChange}, size)\n\t          );}\n\t      );\n\t\n\t    return (\n\t      React.createElement(\"div\", {className: \"ns-inline ns-page-size-width\"}, \n\t        React.createElement(\"div\", {className: \"ns-page-size-text pull-left\"}, \n\t          React.createElement(\"span\", {className: \"ns-pipe-separator\"}, \"|\"), \n\t          React.createElement(\"span\", {className: \"ns-spacer-horizontal\"}), \n\t          React.createElement(\"span\", {className: \"ns-label\"}, \"Show:\")\n\t        ), \n\t        React.createElement(\"ul\", {className: \"nav nav-pills pull-left\"}, \n\t        mappedOpts\n\t        )\n\t      )\n\t    );\n\t  }});\n\t\n\t\n\t\n\tmodule.exports = PageSize;\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar React = __webpack_require__(11);\n\tvar $__0=    React,PropTypes=$__0.PropTypes;\n\t\n\t// Used to cancel events.\n\tvar preventDefault = function(e)  {return e.preventDefault();};\n\t\n\tfunction Pagination(){}\n\t\n\t  Object.defineProperty(Pagination.prototype,\"shouldComponentUpdate\",{writable:true,configurable:true,value:function(nextProps) {\n\t    var props = this.props;\n\t\n\t    return props.totalPages !== nextProps.totalPages ||\n\t      props.currentPage !== nextProps.currentPage ||\n\t      props.showPages !== nextProps.showPages;\n\t  }});\n\t\n\t  Object.defineProperty(Pagination.prototype,\"onChangePage\",{writable:true,configurable:true,value:function(pageNumber, event) {\n\t    event.preventDefault();\n\t    this.props.onChangePage(pageNumber);\n\t  }});\n\t\n\t  Object.defineProperty(Pagination.prototype,\"render\",{writable:true,configurable:true,value:function() {\n\t    var $__0=      this.props,totalPages=$__0.totalPages,showPages=$__0.showPages,currentPage=$__0.currentPage;\n\t\n\t    if (totalPages === 0) {\n\t      return null;\n\t    }\n\t\n\t    var diff = Math.floor(showPages / 2),\n\t        start = Math.max(currentPage - diff, 0),\n\t        end = Math.min(start + showPages, totalPages);\n\t\n\t    if (totalPages >= showPages && end >= totalPages) {\n\t      start = totalPages - showPages;\n\t    }\n\t\n\t    var buttons = [], btnEvent, isCurrent;\n\t    for (var i = start; i < end; i++) {\n\t      isCurrent = currentPage === i;\n\t      // If the button is for the current page then disable the event.\n\t      if (isCurrent) {\n\t        btnEvent = preventDefault;\n\t      } else {\n\t        btnEvent = this.onChangePage.bind(this, i);\n\t      }\n\t      buttons.push(\n\t        React.createElement(\"li\", {key: i, className: isCurrent ? 'active' : null}, \n\t          React.createElement(\"a\", {role: \"button\", href: \"#\", onClick: btnEvent, tabIndex: \"0\"}, \n\t            React.createElement(\"span\", null, i + 1), \n\t            isCurrent ?\n\t              React.createElement(\"span\", {className: \"sr-only\"}, \"(current)\") : null\n\t          )\n\t        )\n\t      );\n\t    }\n\t\n\t    // First and Prev button handlers and class.\n\t    var firstHandler = preventDefault;\n\t    var prevHandler = preventDefault;\n\t    var isNotFirst = currentPage > 0;\n\t    if (isNotFirst) {\n\t      firstHandler = this.onChangePage.bind(this, 0);\n\t      prevHandler = this.onChangePage.bind(this, currentPage - 1);\n\t    }\n\t\n\t    // Next and Last button handlers and class.\n\t    var nextHandler = preventDefault;\n\t    var lastHandler = preventDefault;\n\t    var isNotLast = currentPage < totalPages - 1;\n\t    if (isNotLast) {\n\t      nextHandler = this.onChangePage.bind(this, currentPage + 1);\n\t      lastHandler = this.onChangePage.bind(this, totalPages - 1);\n\t    }\n\t\n\t    return (\n\t      React.createElement(\"ul\", {className: this.props.className, \"aria-label\": \"Pagination\"}, \n\t        React.createElement(\"li\", {className: !isNotFirst ? 'disabled' : null}, \n\t          React.createElement(\"a\", {role: \"button\", href: \"#\", tabIndex: \"0\", \n\t            onClick: prevHandler, \n\t            \"aria-disabled\": !isNotFirst, \n\t            \"aria-label\": \"Previous\"}, \n\t            React.createElement(\"span\", {className: \"fa fa-angle-left\", \"aria-hidden\": \"true\"})\n\t          )\n\t        ), \n\t\n\t        buttons, \n\t\n\t        React.createElement(\"li\", {className: !isNotLast ? 'disabled' : null}, \n\t          React.createElement(\"a\", {role: \"button\", href: \"#\", tabIndex: \"0\", \n\t            onClick: nextHandler, \n\t            \"aria-disabled\": !isNotLast, \n\t            \"aria-label\": \"Next\"}, \n\t            React.createElement(\"span\", {className: \"fa fa-angle-right\", \"aria-hidden\": \"true\"})\n\t          )\n\t        )\n\t      )\n\t    );\n\t  }});\n\t\n\t\n\tPagination.propTypes = {\n\t  onChangePage: PropTypes.func.isRequired,\n\t  totalPages: PropTypes.number.isRequired,\n\t  currentPage: PropTypes.number.isRequired,\n\t  showPages: PropTypes.number\n\t};\n\t\n\tPagination.defaultProps = {\n\t  showPages: 5\n\t};\n\t\n\t\n\tmodule.exports = Pagination;\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar React = __webpack_require__(11);\n\t\n\t\n\t\n\t  function SearchField() {\n\t    this.onChange = this.onChange.bind(this);\n\t  }\n\t\n\t  Object.defineProperty(SearchField.prototype,\"onChange\",{writable:true,configurable:true,value:function(e) {\n\t    this.props.onChange(e.target.value);\n\t  }});\n\t\n\t  Object.defineProperty(SearchField.prototype,\"render\",{writable:true,configurable:true,value:function() {\n\t    return (\n\t      React.createElement(\"form\", {role: \"form\", className: this.props.className}, \n\t        React.createElement(\"div\", {className: \"form-group has-feedback\"}, \n\t          React.createElement(\"input\", {\n\t            id: this.props.id, \n\t            className: \"form-control\", \n\t            describedby: \"sizing-addon2\", \n\t            type: \"text\", \n\t            value: this.props.value, \n\t            placeholder: this.props.placeholder, \n\t            onChange: this.onChange}\n\t          ), \n\t          React.createElement(\"i\", {className: \"form-control-feedback glyphicon glyphicon-search\"})\n\t        )\n\t      )\n\t    );\n\t  }});\n\t\n\t\n\t\n\tmodule.exports = SearchField;\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar React = __webpack_require__(11);\n\tvar $__0=    React,PropTypes=$__0.PropTypes;\n\t\n\tvar simpleGet = function(key)  {return function(data)  {return data[key];};};\n\tvar keyGetter = function(keys)  {return function(data)  {return keys.map(function(key)  {return data[key];});};};\n\t\n\tvar isEmpty = function(value)  {return value === undefined || value === null || value === '';};\n\t\n\tvar getCellValue =\n\t  function($__0    , row) \n\t           \n\t    {var prop=$__0.prop,defaultContent=$__0.defaultContent,render=$__0.render;return !isEmpty(prop) && isEmpty(row[prop]) ? defaultContent :\n\t      // Use the render function for the value.\n\t      render ? render(row[prop], row) :\n\t      // Otherwise just return the value.\n\t      row[prop];};\n\t\n\tvar getCellClass =\n\t  function($__0   , row) \n\t    {var prop=$__0.prop,className=$__0.className;return !isEmpty(prop) && isEmpty(row[prop]) ? 'empty-cell' :\n\t      typeof className === 'function' ? className(row[prop], row) :\n\t      className;};\n\t\n\tfunction buildSortProps(col, sortBy, onSort) {\n\t  var order = sortBy.prop === col.prop ? sortBy.order : 'none';\n\t  var nextOrder = order === 'ascending' ? 'descending' : 'ascending';\n\t  var sortEvent = onSort.bind(null, { prop: col.prop, order: nextOrder });\n\t\n\t  return {\n\t    'onClick': sortEvent,\n\t    // Fire the sort event on enter.\n\t    'onKeyDown': function(e)  { if (e.keyCode === 13) sortEvent(); },\n\t    // Prevents selection with mouse.\n\t    'onMouseDown': function(e)  {return e.preventDefault();},\n\t    'tabIndex': 0,\n\t    'aria-sort': order,\n\t    'aria-label': (col.title + \": activate to sort column \" + nextOrder)\n\t  };\n\t}\n\t\n\t\n\t\n\t  function Table() {\n\t    this.$Table_headers = [];\n\t  }\n\t\n\t  Object.defineProperty(Table.prototype,\"componentDidMount\",{writable:true,configurable:true,value:function() {\n\t    // If no width was specified, then set the width that the browser applied\n\t    // initially to avoid recalculating width between pages.\n\t    this.$Table_headers.forEach(function(header)  {\n\t      var thDom = React.findDOMNode(header);\n\t      if (!thDom.style.width) {\n\t        thDom.style.width = (thDom.offsetWidth + \"px\");\n\t      }\n\t    });\n\t  }});\n\t\n\t  Object.defineProperty(Table.prototype,\"render\",{writable:true,configurable:true,value:function() {\n\t    var $__0=        this.props,columns=$__0.columns,keys=$__0.keys,buildRowOptions=$__0.buildRowOptions,sortBy=$__0.sortBy,onSort=$__0.onSort;\n\t\n\t    var headers = columns.map(function(col, idx)  {\n\t      var sortProps, order;\n\t      // Only add sorting events if the column has a property and is sortable.\n\t      if (typeof onSort === 'function' &&\n\t          col.sortable !== false &&\n\t          'prop' in col) {\n\t        sortProps = buildSortProps(col, sortBy, onSort);\n\t        order = sortProps['aria-sort'];\n\t      }\n\t\n\t      return (\n\t        React.createElement(\"th\", React.__spread({\n\t          ref: function(c)  {return this.$Table_headers[idx] = c;}.bind(this), \n\t          key: idx, \n\t          style: {width: col.width}, \n\t          role: \"columnheader\", \n\t          scope: \"col\"}, \n\t          sortProps), \n\t          React.createElement(\"span\", null, col.title), \n\t          typeof order !== 'undefined' ?\n\t            React.createElement(\"span\", {className: (\"sort-icon sort-\" + order), \"aria-hidden\": \"true\"}) :\n\t            null\n\t        )\n\t      );\n\t    }.bind(this));\n\t\n\t    var getKeys = Array.isArray(keys) ? keyGetter(keys) : simpleGet(keys);\n\t    var rows = this.props.dataArray.map(\n\t      function(row) \n\t        {return React.createElement(\"tr\", React.__spread({key: getKeys(row)},  buildRowOptions(row)), \n\t          columns.map(\n\t            function(col, i) \n\t              {return React.createElement(\"td\", {key: i, className: getCellClass(col, row)}, \n\t                getCellValue(col, row)\n\t              );}\n\t          )\n\t        );});\n\t\n\t    return (\n\t      React.createElement(\"table\", {className: this.props.className}, \n\t        React.createElement(\"caption\", {className: \"sr-only\", role: \"alert\", \"aria-live\": \"polite\"}, \n\t          (\"Sorted by \" + sortBy.prop + \": \" + sortBy.order + \" order\")\n\t        ), \n\t        React.createElement(\"thead\", null, \n\t          React.createElement(\"tr\", null, \n\t            headers\n\t          )\n\t        ), \n\t        React.createElement(\"tbody\", null, \n\t          rows.length > 0 ? rows :\n\t            React.createElement(\"tr\", null, \n\t              React.createElement(\"td\", {colSpan: columns.length, className: \"text-center\"}, \"No data\")\n\t            )\n\t        )\n\t      )\n\t    );\n\t  }});\n\t\n\t\n\t\n\tTable.propTypes = {\n\t\n\t  keys: PropTypes.oneOfType([\n\t    PropTypes.arrayOf(PropTypes.string),\n\t    PropTypes.string\n\t  ]).isRequired,\n\t\n\t  columns: PropTypes.arrayOf(PropTypes.shape({\n\t    title: PropTypes.string.isRequired,\n\t    prop: PropTypes.oneOfType([\n\t      PropTypes.string,\n\t      PropTypes.number\n\t    ]),\n\t    render: PropTypes.func,\n\t    sortable: PropTypes.bool,\n\t    defaultContent: PropTypes.string,\n\t    width: PropTypes.oneOfType([\n\t      PropTypes.string,\n\t      PropTypes.number\n\t    ]),\n\t    className: PropTypes.oneOfType([\n\t      PropTypes.string,\n\t      PropTypes.func\n\t    ])\n\t  })).isRequired,\n\t\n\t  dataArray: PropTypes.arrayOf(PropTypes.oneOfType([\n\t    PropTypes.array,\n\t    PropTypes.object\n\t  ])).isRequired,\n\t\n\t  buildRowOptions: PropTypes.func,\n\t\n\t  sortBy: PropTypes.shape({\n\t    prop: PropTypes.oneOfType([\n\t      PropTypes.string,\n\t      PropTypes.number\n\t    ]),\n\t    order: PropTypes.oneOf([ 'ascending', 'descending' ])\n\t  }),\n\t\n\t  onSort: PropTypes.func\n\t};\n\t\n\tTable.defaultProps = {\n\t  buildRowOptions: function()  {return {};},\n\t  sortBy: {}\n\t};\n\t\n\tmodule.exports = Table;\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Determines if at least one element in the object matches a truth test.\n\t *\n\t * @param {function(val, key)} pred Predicate function.\n\t * @param {object|array} obj\n\t * @return {boolean}\n\t */\n\tfunction some(pred, obj) {\n\t  for (var key in obj) {\n\t    if (pred(obj[key], key) === true) {\n\t      return true;\n\t    }\n\t  }\n\t  return false;\n\t}\n\t\n\t/**\n\t * Creates a compare function with a property to sort on.\n\t *\n\t * @param {string} prop Property to sort.\n\t * @return {function(object, object)} Compare function.\n\t */\n\tvar sortByFunc =\n\t    function(prop) \n\t        {return function(a, b)  {return a[prop] < b[prop] ? -1 : a[prop] > b[prop] ? 1 : 0;};};\n\t\n\t/**\n\t * @param {object} sortBy Object containing `prop` and `order`.\n\t * @param {array} data Array to sort.\n\t * @return {array} Sorted array.\n\t */\n\tfunction sort(sortBy, data) {\n\t  var sortedData = data.sort(sortByFunc(sortBy.prop));\n\t  if (sortBy.order === 'descending') {\n\t    sortedData.reverse();\n\t  }\n\t  return sortedData;\n\t}\n\t\n\t/**\n\t * @param {!object} filters\n\t * @param {!array} data\n\t * @return {function(*, string)} Function to be executed for each entry in data.\n\t */\n\tfunction filterPass(filters, data) {\n\t  return function(filterValue, key) {\n\t    var filterDef = filters[key];\n\t    var partial = filterDef.filter.bind(null, filterValue);\n\t    if (!filterDef.prop) {\n\t      // Filter is for all properties\n\t      return some(function(each)  {return partial(each);}, data);\n\t    } else {\n\t      // Filter is for one property\n\t      return partial(data[filterDef.prop]);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Example of filter and filterValues.\n\t * filters = { globalSearch: { filter: containsIgnoreCase } }\n\t * filterValues = { globalSearch: 'filter value' }\n\t *\n\t * @param {object} filters Definition of the filters.\n\t * @param {object} filterValues Values of the filters.\n\t * @param {array} data Array to filter.\n\t * @return {array} Filtered array.\n\t */\n\tfunction filter(filters, filterValues, data) {\n\t  var filterFunc = filterPass.bind(null, filters);\n\t  return data.filter(function(each)  {return some(filterFunc(each), filterValues);});\n\t}\n\t\n\tmodule.exports = { filter:filter, filterPass:filterPass, sort:sort, sortByFunc:sortByFunc, some:some };\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_11__;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/**\n\t * @license\n\t * lodash 3.7.0 (Custom Build) <https://lodash.com/>\n\t * Build: `lodash modern -d -o ./index.js`\n\t * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n\t * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n\t * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t * Available under MIT license <https://lodash.com/license>\n\t */\n\t;(function() {\n\t\n\t  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n\t  var undefined;\n\t\n\t  /** Used as the semantic version number. */\n\t  var VERSION = '3.7.0';\n\t\n\t  /** Used to compose bitmasks for wrapper metadata. */\n\t  var BIND_FLAG = 1,\n\t      BIND_KEY_FLAG = 2,\n\t      CURRY_BOUND_FLAG = 4,\n\t      CURRY_FLAG = 8,\n\t      CURRY_RIGHT_FLAG = 16,\n\t      PARTIAL_FLAG = 32,\n\t      PARTIAL_RIGHT_FLAG = 64,\n\t      ARY_FLAG = 128,\n\t      REARG_FLAG = 256;\n\t\n\t  /** Used as default options for `_.trunc`. */\n\t  var DEFAULT_TRUNC_LENGTH = 30,\n\t      DEFAULT_TRUNC_OMISSION = '...';\n\t\n\t  /** Used to detect when a function becomes hot. */\n\t  var HOT_COUNT = 150,\n\t      HOT_SPAN = 16;\n\t\n\t  /** Used to indicate the type of lazy iteratees. */\n\t  var LAZY_DROP_WHILE_FLAG = 0,\n\t      LAZY_FILTER_FLAG = 1,\n\t      LAZY_MAP_FLAG = 2;\n\t\n\t  /** Used as the `TypeError` message for \"Functions\" methods. */\n\t  var FUNC_ERROR_TEXT = 'Expected a function';\n\t\n\t  /** Used as the internal argument placeholder. */\n\t  var PLACEHOLDER = '__lodash_placeholder__';\n\t\n\t  /** `Object#toString` result references. */\n\t  var argsTag = '[object Arguments]',\n\t      arrayTag = '[object Array]',\n\t      boolTag = '[object Boolean]',\n\t      dateTag = '[object Date]',\n\t      errorTag = '[object Error]',\n\t      funcTag = '[object Function]',\n\t      mapTag = '[object Map]',\n\t      numberTag = '[object Number]',\n\t      objectTag = '[object Object]',\n\t      regexpTag = '[object RegExp]',\n\t      setTag = '[object Set]',\n\t      stringTag = '[object String]',\n\t      weakMapTag = '[object WeakMap]';\n\t\n\t  var arrayBufferTag = '[object ArrayBuffer]',\n\t      float32Tag = '[object Float32Array]',\n\t      float64Tag = '[object Float64Array]',\n\t      int8Tag = '[object Int8Array]',\n\t      int16Tag = '[object Int16Array]',\n\t      int32Tag = '[object Int32Array]',\n\t      uint8Tag = '[object Uint8Array]',\n\t      uint8ClampedTag = '[object Uint8ClampedArray]',\n\t      uint16Tag = '[object Uint16Array]',\n\t      uint32Tag = '[object Uint32Array]';\n\t\n\t  /** Used to match empty string literals in compiled template source. */\n\t  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n\t      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n\t      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\t\n\t  /** Used to match HTML entities and HTML characters. */\n\t  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n\t      reUnescapedHtml = /[&<>\"'`]/g,\n\t      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n\t      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\t\n\t  /** Used to match template delimiters. */\n\t  var reEscape = /<%-([\\s\\S]+?)%>/g,\n\t      reEvaluate = /<%([\\s\\S]+?)%>/g,\n\t      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\t\n\t  /** Used to match property names within property paths. */\n\t  var reIsDeepProp = /\\.|\\[(?:[^[\\]]+|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?)\\1\\]/,\n\t      reIsPlainProp = /^\\w*$/,\n\t      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\t\n\t  /**\n\t   * Used to match `RegExp` [special characters](http://www.regular-expressions.info/characters.html#special).\n\t   * In addition to special characters the forward slash is escaped to allow for\n\t   * easier `eval` use and `Function` compilation.\n\t   */\n\t  var reRegExpChars = /[.*+?^${}()|[\\]\\/\\\\]/g,\n\t      reHasRegExpChars = RegExp(reRegExpChars.source);\n\t\n\t  /** Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks). */\n\t  var reComboMark = /[\\u0300-\\u036f\\ufe20-\\ufe23]/g;\n\t\n\t  /** Used to match backslashes in property paths. */\n\t  var reEscapeChar = /\\\\(\\\\)?/g;\n\t\n\t  /** Used to match [ES template delimiters](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-template-literal-lexical-components). */\n\t  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\t\n\t  /** Used to match `RegExp` flags from their coerced string values. */\n\t  var reFlags = /\\w*$/;\n\t\n\t  /** Used to detect hexadecimal string values. */\n\t  var reHasHexPrefix = /^0[xX]/;\n\t\n\t  /** Used to detect host constructors (Safari > 5). */\n\t  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\t\n\t  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n\t  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\t\n\t  /** Used to ensure capturing order of template delimiters. */\n\t  var reNoMatch = /($^)/;\n\t\n\t  /** Used to match unescaped characters in compiled string literals. */\n\t  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\t\n\t  /** Used to match words to create compound words. */\n\t  var reWords = (function() {\n\t    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n\t        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n\t\n\t    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n\t  }());\n\t\n\t  /** Used to detect and test for whitespace. */\n\t  var whitespace = (\n\t    // Basic whitespace characters.\n\t    ' \\t\\x0b\\f\\xa0\\ufeff' +\n\t\n\t    // Line terminators.\n\t    '\\n\\r\\u2028\\u2029' +\n\t\n\t    // Unicode category \"Zs\" space separators.\n\t    '\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000'\n\t  );\n\t\n\t  /** Used to assign default `context` object properties. */\n\t  var contextProps = [\n\t    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n\t    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',\n\t    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'document',\n\t    'isFinite', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',\n\t    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n\t    'window'\n\t  ];\n\t\n\t  /** Used to make template sourceURLs easier to identify. */\n\t  var templateCounter = -1;\n\t\n\t  /** Used to identify `toStringTag` values of typed arrays. */\n\t  var typedArrayTags = {};\n\t  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n\t  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n\t  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n\t  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n\t  typedArrayTags[uint32Tag] = true;\n\t  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n\t  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n\t  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n\t  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n\t  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n\t  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n\t  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\t\n\t  /** Used to identify `toStringTag` values supported by `_.clone`. */\n\t  var cloneableTags = {};\n\t  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n\t  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n\t  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n\t  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n\t  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n\t  cloneableTags[numberTag] = cloneableTags[objectTag] =\n\t  cloneableTags[regexpTag] = cloneableTags[stringTag] =\n\t  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n\t  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n\t  cloneableTags[errorTag] = cloneableTags[funcTag] =\n\t  cloneableTags[mapTag] = cloneableTags[setTag] =\n\t  cloneableTags[weakMapTag] = false;\n\t\n\t  /** Used as an internal `_.debounce` options object by `_.throttle`. */\n\t  var debounceOptions = {\n\t    'leading': false,\n\t    'maxWait': 0,\n\t    'trailing': false\n\t  };\n\t\n\t  /** Used to map latin-1 supplementary letters to basic latin letters. */\n\t  var deburredLetters = {\n\t    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n\t    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n\t    '\\xc7': 'C',  '\\xe7': 'c',\n\t    '\\xd0': 'D',  '\\xf0': 'd',\n\t    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n\t    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n\t    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n\t    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n\t    '\\xd1': 'N',  '\\xf1': 'n',\n\t    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n\t    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n\t    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n\t    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n\t    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n\t    '\\xc6': 'Ae', '\\xe6': 'ae',\n\t    '\\xde': 'Th', '\\xfe': 'th',\n\t    '\\xdf': 'ss'\n\t  };\n\t\n\t  /** Used to map characters to HTML entities. */\n\t  var htmlEscapes = {\n\t    '&': '&amp;',\n\t    '<': '&lt;',\n\t    '>': '&gt;',\n\t    '\"': '&quot;',\n\t    \"'\": '&#39;',\n\t    '`': '&#96;'\n\t  };\n\t\n\t  /** Used to map HTML entities to characters. */\n\t  var htmlUnescapes = {\n\t    '&amp;': '&',\n\t    '&lt;': '<',\n\t    '&gt;': '>',\n\t    '&quot;': '\"',\n\t    '&#39;': \"'\",\n\t    '&#96;': '`'\n\t  };\n\t\n\t  /** Used to determine if values are of the language type `Object`. */\n\t  var objectTypes = {\n\t    'function': true,\n\t    'object': true\n\t  };\n\t\n\t  /** Used to escape characters for inclusion in compiled string literals. */\n\t  var stringEscapes = {\n\t    '\\\\': '\\\\',\n\t    \"'\": \"'\",\n\t    '\\n': 'n',\n\t    '\\r': 'r',\n\t    '\\u2028': 'u2028',\n\t    '\\u2029': 'u2029'\n\t  };\n\t\n\t  /** Detect free variable `exports`. */\n\t  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\t\n\t  /** Detect free variable `module`. */\n\t  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\t\n\t  /** Detect free variable `global` from Node.js. */\n\t  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global && global.Object && global;\n\t\n\t  /** Detect free variable `self`. */\n\t  var freeSelf = objectTypes[typeof self] && self && self.Object && self;\n\t\n\t  /** Detect free variable `window`. */\n\t  var freeWindow = objectTypes[typeof window] && window && window.Object && window;\n\t\n\t  /** Detect the popular CommonJS extension `module.exports`. */\n\t  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\t\n\t  /**\n\t   * Used as a reference to the global object.\n\t   *\n\t   * The `this` value is used if it is the global object to avoid Greasemonkey's\n\t   * restricted `window` object, otherwise the `window` object is used.\n\t   */\n\t  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * The base implementation of `compareAscending` which compares values and\n\t   * sorts them in ascending order without guaranteeing a stable sort.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to compare to `other`.\n\t   * @param {*} other The value to compare to `value`.\n\t   * @returns {number} Returns the sort order indicator for `value`.\n\t   */\n\t  function baseCompareAscending(value, other) {\n\t    if (value !== other) {\n\t      var valIsReflexive = value === value,\n\t          othIsReflexive = other === other;\n\t\n\t      if (value > other || !valIsReflexive || (value === undefined && othIsReflexive)) {\n\t        return 1;\n\t      }\n\t      if (value < other || !othIsReflexive || (other === undefined && valIsReflexive)) {\n\t        return -1;\n\t      }\n\t    }\n\t    return 0;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n\t   * support for callback shorthands and `this` binding.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseFindIndex(array, predicate, fromRight) {\n\t    var length = array.length,\n\t        index = fromRight ? length : -1;\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      if (predicate(array[index], index, array)) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.indexOf` without support for binary searches.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseIndexOf(array, value, fromIndex) {\n\t    if (value !== value) {\n\t      return indexOfNaN(array, fromIndex);\n\t    }\n\t    var index = fromIndex - 1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (array[index] === value) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.isFunction` without support for environments\n\t   * with incorrect `typeof` results.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t   */\n\t  function baseIsFunction(value) {\n\t    // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n\t    // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n\t    return typeof value == 'function' || false;\n\t  }\n\t\n\t  /**\n\t   * Converts `value` to a string if it is not one. An empty string is returned\n\t   * for `null` or `undefined` values.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to process.\n\t   * @returns {string} Returns the string.\n\t   */\n\t  function baseToString(value) {\n\t    if (typeof value == 'string') {\n\t      return value;\n\t    }\n\t    return value == null ? '' : (value + '');\n\t  }\n\t\n\t  /**\n\t   * Used by `_.max` and `_.min` as the default callback for string values.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {number} Returns the code unit of the first character of the string.\n\t   */\n\t  function charAtCallback(string) {\n\t    return string.charCodeAt(0);\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n\t   * of `string` that is not found in `chars`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @param {string} chars The characters to find.\n\t   * @returns {number} Returns the index of the first character not found in `chars`.\n\t   */\n\t  function charsLeftIndex(string, chars) {\n\t    var index = -1,\n\t        length = string.length;\n\t\n\t    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n\t   * of `string` that is not found in `chars`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @param {string} chars The characters to find.\n\t   * @returns {number} Returns the index of the last character not found in `chars`.\n\t   */\n\t  function charsRightIndex(string, chars) {\n\t    var index = string.length;\n\t\n\t    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n\t   * sort them in ascending order.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to compare to `other`.\n\t   * @param {Object} other The object to compare to `object`.\n\t   * @returns {number} Returns the sort order indicator for `object`.\n\t   */\n\t  function compareAscending(object, other) {\n\t    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);\n\t  }\n\t\n\t  /**\n\t   * Used by `_.sortByOrder` to compare multiple properties of each element\n\t   * in a collection and stable sort them in the following order:\n\t   *\n\t   * If `orders` is unspecified, sort in ascending order for all properties.\n\t   * Otherwise, for each property, sort in ascending order if its corresponding value in\n\t   * orders is true, and descending order if false.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to compare to `other`.\n\t   * @param {Object} other The object to compare to `object`.\n\t   * @param {boolean[]} orders The order to sort by for each property.\n\t   * @returns {number} Returns the sort order indicator for `object`.\n\t   */\n\t  function compareMultiple(object, other, orders) {\n\t    var index = -1,\n\t        objCriteria = object.criteria,\n\t        othCriteria = other.criteria,\n\t        length = objCriteria.length,\n\t        ordersLength = orders.length;\n\t\n\t    while (++index < length) {\n\t      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n\t      if (result) {\n\t        if (index >= ordersLength) {\n\t          return result;\n\t        }\n\t        return result * (orders[index] ? 1 : -1);\n\t      }\n\t    }\n\t    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n\t    // that causes it, under certain circumstances, to provide the same value for\n\t    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n\t    // for more details.\n\t    //\n\t    // This also ensures a stable sort in V8 and other engines.\n\t    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n\t    return object.index - other.index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n\t   *\n\t   * @private\n\t   * @param {string} letter The matched letter to deburr.\n\t   * @returns {string} Returns the deburred letter.\n\t   */\n\t  function deburrLetter(letter) {\n\t    return deburredLetters[letter];\n\t  }\n\t\n\t  /**\n\t   * Used by `_.escape` to convert characters to HTML entities.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeHtmlChar(chr) {\n\t    return htmlEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Used by `_.template` to escape characters for inclusion in compiled\n\t   * string literals.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeStringChar(chr) {\n\t    return '\\\\' + stringEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n\t   */\n\t  function indexOfNaN(array, fromIndex, fromRight) {\n\t    var length = array.length,\n\t        index = fromIndex + (fromRight ? 0 : -1);\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      var other = array[index];\n\t      if (other !== other) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * Checks if `value` is object-like.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t   */\n\t  function isObjectLike(value) {\n\t    return !!value && typeof value == 'object';\n\t  }\n\t\n\t  /**\n\t   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n\t   * character code is whitespace.\n\t   *\n\t   * @private\n\t   * @param {number} charCode The character code to inspect.\n\t   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n\t   */\n\t  function isSpace(charCode) {\n\t    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||\n\t      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));\n\t  }\n\t\n\t  /**\n\t   * Replaces all `placeholder` elements in `array` with an internal placeholder\n\t   * and returns an array of their indexes.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {*} placeholder The placeholder to replace.\n\t   * @returns {Array} Returns the new array of placeholder indexes.\n\t   */\n\t  function replaceHolders(array, placeholder) {\n\t    var index = -1,\n\t        length = array.length,\n\t        resIndex = -1,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      if (array[index] === placeholder) {\n\t        array[index] = PLACEHOLDER;\n\t        result[++resIndex] = index;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * An implementation of `_.uniq` optimized for sorted arrays without support\n\t   * for callback shorthands and `this` binding.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {Function} [iteratee] The function invoked per iteration.\n\t   * @returns {Array} Returns the new duplicate-value-free array.\n\t   */\n\t  function sortedUniq(array, iteratee) {\n\t    var seen,\n\t        index = -1,\n\t        length = array.length,\n\t        resIndex = -1,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      var value = array[index],\n\t          computed = iteratee ? iteratee(value, index, array) : value;\n\t\n\t      if (!index || seen !== computed) {\n\t        seen = computed;\n\t        result[++resIndex] = value;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n\t   * character of `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {number} Returns the index of the first non-whitespace character.\n\t   */\n\t  function trimmedLeftIndex(string) {\n\t    var index = -1,\n\t        length = string.length;\n\t\n\t    while (++index < length && isSpace(string.charCodeAt(index))) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n\t   * character of `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {number} Returns the index of the last non-whitespace character.\n\t   */\n\t  function trimmedRightIndex(string) {\n\t    var index = string.length;\n\t\n\t    while (index-- && isSpace(string.charCodeAt(index))) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.unescape` to convert HTML entities to characters.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to unescape.\n\t   * @returns {string} Returns the unescaped character.\n\t   */\n\t  function unescapeHtmlChar(chr) {\n\t    return htmlUnescapes[chr];\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Create a new pristine `lodash` function using the given `context` object.\n\t   *\n\t   * @static\n\t   * @memberOf _\n\t   * @category Utility\n\t   * @param {Object} [context=root] The context object.\n\t   * @returns {Function} Returns a new `lodash` function.\n\t   * @example\n\t   *\n\t   * _.mixin({ 'foo': _.constant('foo') });\n\t   *\n\t   * var lodash = _.runInContext();\n\t   * lodash.mixin({ 'bar': lodash.constant('bar') });\n\t   *\n\t   * _.isFunction(_.foo);\n\t   * // => true\n\t   * _.isFunction(_.bar);\n\t   * // => false\n\t   *\n\t   * lodash.isFunction(lodash.foo);\n\t   * // => false\n\t   * lodash.isFunction(lodash.bar);\n\t   * // => true\n\t   *\n\t   * // using `context` to mock `Date#getTime` use in `_.now`\n\t   * var mock = _.runInContext({\n\t   *   'Date': function() {\n\t   *     return { 'getTime': getTimeMock };\n\t   *   }\n\t   * });\n\t   *\n\t   * // or creating a suped-up `defer` in Node.js\n\t   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n\t   */\n\t  function runInContext(context) {\n\t    // Avoid issues with some ES3 environments that attempt to use values, named\n\t    // after built-in constructors like `Object`, for the creation of literals.\n\t    // ES5 clears this up by stating that literals must use built-in constructors.\n\t    // See https://es5.github.io/#x11.1.5 for more details.\n\t    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\t\n\t    /** Native constructor references. */\n\t    var Array = context.Array,\n\t        Date = context.Date,\n\t        Error = context.Error,\n\t        Function = context.Function,\n\t        Math = context.Math,\n\t        Number = context.Number,\n\t        Object = context.Object,\n\t        RegExp = context.RegExp,\n\t        String = context.String,\n\t        TypeError = context.TypeError;\n\t\n\t    /** Used for native method references. */\n\t    var arrayProto = Array.prototype,\n\t        objectProto = Object.prototype,\n\t        stringProto = String.prototype;\n\t\n\t    /** Used to detect DOM support. */\n\t    var document = (document = context.window) && document.document;\n\t\n\t    /** Used to resolve the decompiled source of functions. */\n\t    var fnToString = Function.prototype.toString;\n\t\n\t    /** Used to check objects for own properties. */\n\t    var hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t    /** Used to generate unique IDs. */\n\t    var idCounter = 0;\n\t\n\t    /**\n\t     * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n\t     * of values.\n\t     */\n\t    var objToString = objectProto.toString;\n\t\n\t    /** Used to restore the original `_` reference in `_.noConflict`. */\n\t    var oldDash = context._;\n\t\n\t    /** Used to detect if a method is native. */\n\t    var reIsNative = RegExp('^' +\n\t      escapeRegExp(objToString)\n\t      .replace(/toString|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n\t    );\n\t\n\t    /** Native method references. */\n\t    var ArrayBuffer = isNative(ArrayBuffer = context.ArrayBuffer) && ArrayBuffer,\n\t        bufferSlice = isNative(bufferSlice = ArrayBuffer && new ArrayBuffer(0).slice) && bufferSlice,\n\t        ceil = Math.ceil,\n\t        clearTimeout = context.clearTimeout,\n\t        floor = Math.floor,\n\t        getOwnPropertySymbols = isNative(getOwnPropertySymbols = Object.getOwnPropertySymbols) && getOwnPropertySymbols,\n\t        getPrototypeOf = isNative(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf,\n\t        push = arrayProto.push,\n\t        preventExtensions = isNative(Object.preventExtensions = Object.preventExtensions) && preventExtensions,\n\t        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n\t        Set = isNative(Set = context.Set) && Set,\n\t        setTimeout = context.setTimeout,\n\t        splice = arrayProto.splice,\n\t        Uint8Array = isNative(Uint8Array = context.Uint8Array) && Uint8Array,\n\t        WeakMap = isNative(WeakMap = context.WeakMap) && WeakMap;\n\t\n\t    /** Used to clone array buffers. */\n\t    var Float64Array = (function() {\n\t      // Safari 5 errors when using an array buffer to initialize a typed array\n\t      // where the array buffer's `byteLength` is not a multiple of the typed\n\t      // array's `BYTES_PER_ELEMENT`.\n\t      try {\n\t        var func = isNative(func = context.Float64Array) && func,\n\t            result = new func(new ArrayBuffer(10), 0, 1) && func;\n\t      } catch(e) {}\n\t      return result;\n\t    }());\n\t\n\t    /** Used as `baseAssign`. */\n\t    var nativeAssign = (function() {\n\t      // Avoid `Object.assign` in Firefox 34-37 which have an early implementation\n\t      // with a now defunct try/catch behavior. See https://bugzilla.mozilla.org/show_bug.cgi?id=1103344\n\t      // for more details.\n\t      //\n\t      // Use `Object.preventExtensions` on a plain object instead of simply using\n\t      // `Object('x')` because Chrome and IE fail to throw an error when attempting\n\t      // to assign values to readonly indexes of strings in strict mode.\n\t      var object = { '1': 0 },\n\t          func = preventExtensions && isNative(func = Object.assign) && func;\n\t\n\t      try { func(preventExtensions(object), 'xo'); } catch(e) {}\n\t      return !object[1] && func;\n\t    }());\n\t\n\t    /* Native method references for those with the same name as other `lodash` methods. */\n\t    var nativeIsArray = isNative(nativeIsArray = Array.isArray) && nativeIsArray,\n\t        nativeCreate = isNative(nativeCreate = Object.create) && nativeCreate,\n\t        nativeIsFinite = context.isFinite,\n\t        nativeKeys = isNative(nativeKeys = Object.keys) && nativeKeys,\n\t        nativeMax = Math.max,\n\t        nativeMin = Math.min,\n\t        nativeNow = isNative(nativeNow = Date.now) && nativeNow,\n\t        nativeNumIsFinite = isNative(nativeNumIsFinite = Number.isFinite) && nativeNumIsFinite,\n\t        nativeParseInt = context.parseInt,\n\t        nativeRandom = Math.random;\n\t\n\t    /** Used as references for `-Infinity` and `Infinity`. */\n\t    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n\t        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\t\n\t    /** Used as references for the maximum length and index of an array. */\n\t    var MAX_ARRAY_LENGTH = Math.pow(2, 32) - 1,\n\t        MAX_ARRAY_INDEX =  MAX_ARRAY_LENGTH - 1,\n\t        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\t\n\t    /** Used as the size, in bytes, of each `Float64Array` element. */\n\t    var FLOAT64_BYTES_PER_ELEMENT = Float64Array ? Float64Array.BYTES_PER_ELEMENT : 0;\n\t\n\t    /**\n\t     * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n\t     * of an array-like value.\n\t     */\n\t    var MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n\t\n\t    /** Used to store function metadata. */\n\t    var metaMap = WeakMap && new WeakMap;\n\t\n\t    /** Used to lookup unminified function names. */\n\t    var realNames = {};\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` object which wraps `value` to enable implicit chaining.\n\t     * Methods that operate on and return arrays, collections, and functions can\n\t     * be chained together. Methods that return a boolean or single value will\n\t     * automatically end the chain returning the unwrapped value. Explicit chaining\n\t     * may be enabled using `_.chain`. The execution of chained methods is lazy,\n\t     * that is, execution is deferred until `_#value` is implicitly or explicitly\n\t     * called.\n\t     *\n\t     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n\t     * fusion is an optimization that merges iteratees to avoid creating intermediate\n\t     * arrays and reduce the number of iteratee executions.\n\t     *\n\t     * Chaining is supported in custom builds as long as the `_#value` method is\n\t     * directly or indirectly included in the build.\n\t     *\n\t     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n\t     *\n\t     * The wrapper `Array` methods are:\n\t     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\n\t     * `splice`, and `unshift`\n\t     *\n\t     * The wrapper `String` methods are:\n\t     * `replace` and `split`\n\t     *\n\t     * The wrapper methods that support shortcut fusion are:\n\t     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n\t     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n\t     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\n\t     * and `where`\n\t     *\n\t     * The chainable wrapper methods are:\n\t     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n\t     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n\t     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defer`, `delay`,\n\t     * `difference`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `fill`,\n\t     * `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`, `forEach`,\n\t     * `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `functions`,\n\t     * `groupBy`, `indexBy`, `initial`, `intersection`, `invert`, `invoke`, `keys`,\n\t     * `keysIn`, `map`, `mapValues`, `matches`, `matchesProperty`, `memoize`,\n\t     * `merge`, `mixin`, `negate`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n\t     * `partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,\n\t     * `pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `reverse`,\n\t     * `shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`, `sortByOrder`, `splice`,\n\t     * `spread`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `tap`,\n\t     * `throttle`, `thru`, `times`, `toArray`, `toPlainObject`, `transform`,\n\t     * `union`, `uniq`, `unshift`, `unzip`, `values`, `valuesIn`, `where`,\n\t     * `without`, `wrap`, `xor`, `zip`, and `zipObject`\n\t     *\n\t     * The wrapper methods that are **not** chainable by default are:\n\t     * `add`, `attempt`, `camelCase`, `capitalize`, `clone`, `cloneDeep`, `deburr`,\n\t     * `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`,\n\t     * `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`, `has`,\n\t     * `identity`, `includes`, `indexOf`, `inRange`, `isArguments`, `isArray`,\n\t     * `isBoolean`, `isDate`, `isElement`, `isEmpty`, `isEqual`, `isError`, `isFinite`\n\t     * `isFunction`, `isMatch`, `isNative`, `isNaN`, `isNull`, `isNumber`, `isObject`,\n\t     * `isPlainObject`, `isRegExp`, `isString`, `isUndefined`, `isTypedArray`,\n\t     * `join`, `kebabCase`, `last`, `lastIndexOf`, `max`, `min`, `noConflict`,\n\t     * `noop`, `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`, `random`,\n\t     * `reduce`, `reduceRight`, `repeat`, `result`, `runInContext`, `shift`, `size`,\n\t     * `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`, `startCase`, `startsWith`,\n\t     * `sum`, `template`, `trim`, `trimLeft`, `trimRight`, `trunc`, `unescape`,\n\t     * `uniqueId`, `value`, and `words`\n\t     *\n\t     * The wrapper method `sample` will return a wrapped value when `n` is provided,\n\t     * otherwise an unwrapped value is returned.\n\t     *\n\t     * @name _\n\t     * @constructor\n\t     * @category Chain\n\t     * @param {*} value The value to wrap in a `lodash` instance.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2, 3]);\n\t     *\n\t     * // returns an unwrapped value\n\t     * wrapped.reduce(function(total, n) {\n\t     *   return total + n;\n\t     * });\n\t     * // => 6\n\t     *\n\t     * // returns a wrapped value\n\t     * var squares = wrapped.map(function(n) {\n\t     *   return n * n;\n\t     * });\n\t     *\n\t     * _.isArray(squares);\n\t     * // => false\n\t     *\n\t     * _.isArray(squares.value());\n\t     * // => true\n\t     */\n\t    function lodash(value) {\n\t      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n\t        if (value instanceof LodashWrapper) {\n\t          return value;\n\t        }\n\t        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {\n\t          return wrapperClone(value);\n\t        }\n\t      }\n\t      return new LodashWrapper(value);\n\t    }\n\t\n\t    /**\n\t     * The function whose prototype all chaining wrappers inherit from.\n\t     *\n\t     * @private\n\t     */\n\t    function baseLodash() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * The base constructor for creating `lodash` wrapper objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to wrap.\n\t     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n\t     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n\t     */\n\t    function LodashWrapper(value, chainAll, actions) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = actions || [];\n\t      this.__chain__ = !!chainAll;\n\t    }\n\t\n\t    /**\n\t     * An object environment feature flags.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type Object\n\t     */\n\t    var support = lodash.support = {};\n\t\n\t    (function(x) {\n\t      var Ctor = function() { this.x = x; },\n\t          object = { '0': x, 'length': x },\n\t          props = [];\n\t\n\t      Ctor.prototype = { 'valueOf': x, 'y': x };\n\t      for (var key in new Ctor) { props.push(key); }\n\t\n\t      /**\n\t       * Detect if functions can be decompiled by `Function#toString`\n\t       * (all but Firefox OS certified apps, older Opera mobile browsers, and\n\t       * the PlayStation 3; forced `false` for Windows 8 apps).\n\t       *\n\t       * @memberOf _.support\n\t       * @type boolean\n\t       */\n\t      support.funcDecomp = /\\bthis\\b/.test(function() { return this; });\n\t\n\t      /**\n\t       * Detect if `Function#name` is supported (all but IE).\n\t       *\n\t       * @memberOf _.support\n\t       * @type boolean\n\t       */\n\t      support.funcNames = typeof Function.name == 'string';\n\t\n\t      /**\n\t       * Detect if the DOM is supported.\n\t       *\n\t       * @memberOf _.support\n\t       * @type boolean\n\t       */\n\t      try {\n\t        support.dom = document.createDocumentFragment().nodeType === 11;\n\t      } catch(e) {\n\t        support.dom = false;\n\t      }\n\t\n\t      /**\n\t       * Detect if `arguments` object indexes are non-enumerable.\n\t       *\n\t       * In Firefox < 4, IE < 9, PhantomJS, and Safari < 5.1 `arguments` object\n\t       * indexes are non-enumerable. Chrome < 25 and Node.js < 0.11.0 treat\n\t       * `arguments` object indexes as non-enumerable and fail `hasOwnProperty`\n\t       * checks for indexes that exceed the number of function parameters and\n\t       * whose associated argument values are `0`.\n\t       *\n\t       * @memberOf _.support\n\t       * @type boolean\n\t       */\n\t      try {\n\t        support.nonEnumArgs = !propertyIsEnumerable.call(arguments, 1);\n\t      } catch(e) {\n\t        support.nonEnumArgs = true;\n\t      }\n\t    }(1, 0));\n\t\n\t    /**\n\t     * By default, the template delimiters used by lodash are like those in\n\t     * embedded Ruby (ERB). Change the following template settings to use\n\t     * alternative delimiters.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type Object\n\t     */\n\t    lodash.templateSettings = {\n\t\n\t      /**\n\t       * Used to detect `data` property values to be HTML-escaped.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type RegExp\n\t       */\n\t      'escape': reEscape,\n\t\n\t      /**\n\t       * Used to detect code to be evaluated.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type RegExp\n\t       */\n\t      'evaluate': reEvaluate,\n\t\n\t      /**\n\t       * Used to detect `data` property values to inject.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type RegExp\n\t       */\n\t      'interpolate': reInterpolate,\n\t\n\t      /**\n\t       * Used to reference the data object in the template text.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type string\n\t       */\n\t      'variable': '',\n\t\n\t      /**\n\t       * Used to import variables into the compiled template.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type Object\n\t       */\n\t      'imports': {\n\t\n\t        /**\n\t         * A reference to the `lodash` function.\n\t         *\n\t         * @memberOf _.templateSettings.imports\n\t         * @type Function\n\t         */\n\t        '_': lodash\n\t      }\n\t    };\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to wrap.\n\t     */\n\t    function LazyWrapper(value) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = null;\n\t      this.__dir__ = 1;\n\t      this.__dropCount__ = 0;\n\t      this.__filtered__ = false;\n\t      this.__iteratees__ = null;\n\t      this.__takeCount__ = POSITIVE_INFINITY;\n\t      this.__views__ = null;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the lazy wrapper object.\n\t     *\n\t     * @private\n\t     * @name clone\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the cloned `LazyWrapper` object.\n\t     */\n\t    function lazyClone() {\n\t      var actions = this.__actions__,\n\t          iteratees = this.__iteratees__,\n\t          views = this.__views__,\n\t          result = new LazyWrapper(this.__wrapped__);\n\t\n\t      result.__actions__ = actions ? arrayCopy(actions) : null;\n\t      result.__dir__ = this.__dir__;\n\t      result.__filtered__ = this.__filtered__;\n\t      result.__iteratees__ = iteratees ? arrayCopy(iteratees) : null;\n\t      result.__takeCount__ = this.__takeCount__;\n\t      result.__views__ = views ? arrayCopy(views) : null;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses the direction of lazy iteration.\n\t     *\n\t     * @private\n\t     * @name reverse\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n\t     */\n\t    function lazyReverse() {\n\t      if (this.__filtered__) {\n\t        var result = new LazyWrapper(this);\n\t        result.__dir__ = -1;\n\t        result.__filtered__ = true;\n\t      } else {\n\t        result = this.clone();\n\t        result.__dir__ *= -1;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Extracts the unwrapped value from its lazy wrapper.\n\t     *\n\t     * @private\n\t     * @name value\n\t     * @memberOf LazyWrapper\n\t     * @returns {*} Returns the unwrapped value.\n\t     */\n\t    function lazyValue() {\n\t      var array = this.__wrapped__.value();\n\t      if (!isArray(array)) {\n\t        return baseWrapperValue(array, this.__actions__);\n\t      }\n\t      var dir = this.__dir__,\n\t          isRight = dir < 0,\n\t          view = getView(0, array.length, this.__views__),\n\t          start = view.start,\n\t          end = view.end,\n\t          length = end - start,\n\t          index = isRight ? end : (start - 1),\n\t          takeCount = nativeMin(length, this.__takeCount__),\n\t          iteratees = this.__iteratees__,\n\t          iterLength = iteratees ? iteratees.length : 0,\n\t          resIndex = 0,\n\t          result = [];\n\t\n\t      outer:\n\t      while (length-- && resIndex < takeCount) {\n\t        index += dir;\n\t\n\t        var iterIndex = -1,\n\t            value = array[index];\n\t\n\t        while (++iterIndex < iterLength) {\n\t          var data = iteratees[iterIndex],\n\t              iteratee = data.iteratee,\n\t              type = data.type;\n\t\n\t          if (type == LAZY_DROP_WHILE_FLAG) {\n\t            if (data.done && (isRight ? (index > data.index) : (index < data.index))) {\n\t              data.count = 0;\n\t              data.done = false;\n\t            }\n\t            data.index = index;\n\t            if (!data.done) {\n\t              var limit = data.limit;\n\t              if (!(data.done = limit > -1 ? (data.count++ >= limit) : !iteratee(value))) {\n\t                continue outer;\n\t              }\n\t            }\n\t          } else {\n\t            var computed = iteratee(value);\n\t            if (type == LAZY_MAP_FLAG) {\n\t              value = computed;\n\t            } else if (!computed) {\n\t              if (type == LAZY_FILTER_FLAG) {\n\t                continue outer;\n\t              } else {\n\t                break outer;\n\t              }\n\t            }\n\t          }\n\t        }\n\t        result[resIndex++] = value;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a cache object to store key/value pairs.\n\t     *\n\t     * @private\n\t     * @static\n\t     * @name Cache\n\t     * @memberOf _.memoize\n\t     */\n\t    function MapCache() {\n\t      this.__data__ = {};\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the cache.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf _.memoize.Cache\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n\t     */\n\t    function mapDelete(key) {\n\t      return this.has(key) && delete this.__data__[key];\n\t    }\n\t\n\t    /**\n\t     * Gets the cached value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf _.memoize.Cache\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the cached value.\n\t     */\n\t    function mapGet(key) {\n\t      return key == '__proto__' ? undefined : this.__data__[key];\n\t    }\n\t\n\t    /**\n\t     * Checks if a cached value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf _.memoize.Cache\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function mapHas(key) {\n\t      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n\t    }\n\t\n\t    /**\n\t     * Sets `value` to `key` of the cache.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf _.memoize.Cache\n\t     * @param {string} key The key of the value to cache.\n\t     * @param {*} value The value to cache.\n\t     * @returns {Object} Returns the cache object.\n\t     */\n\t    function mapSet(key, value) {\n\t      if (key != '__proto__') {\n\t        this.__data__[key] = value;\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     *\n\t     * Creates a cache object to store unique values.\n\t     *\n\t     * @private\n\t     * @param {Array} [values] The values to cache.\n\t     */\n\t    function SetCache(values) {\n\t      var length = values ? values.length : 0;\n\t\n\t      this.data = { 'hash': nativeCreate(null), 'set': new Set };\n\t      while (length--) {\n\t        this.push(values[length]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is in `cache` mimicking the return signature of\n\t     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n\t     *\n\t     * @private\n\t     * @param {Object} cache The cache to search.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns `0` if `value` is found, else `-1`.\n\t     */\n\t    function cacheIndexOf(cache, value) {\n\t      var data = cache.data,\n\t          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\n\t\n\t      return result ? 0 : -1;\n\t    }\n\t\n\t    /**\n\t     * Adds `value` to the cache.\n\t     *\n\t     * @private\n\t     * @name push\n\t     * @memberOf SetCache\n\t     * @param {*} value The value to cache.\n\t     */\n\t    function cachePush(value) {\n\t      var data = this.data;\n\t      if (typeof value == 'string' || isObject(value)) {\n\t        data.set.add(value);\n\t      } else {\n\t        data.hash[value] = true;\n\t      }\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Copies the values of `source` to `array`.\n\t     *\n\t     * @private\n\t     * @param {Array} source The array to copy values from.\n\t     * @param {Array} [array=[]] The array to copy values to.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function arrayCopy(source, array) {\n\t      var index = -1,\n\t          length = source.length;\n\t\n\t      array || (array = Array(length));\n\t      while (++index < length) {\n\t        array[index] = source[index];\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.forEach` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function arrayEach(array, iteratee) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        if (iteratee(array[index], index, array) === false) {\n\t          break;\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.forEachRight` for arrays without support for\n\t     * callback shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function arrayEachRight(array, iteratee) {\n\t      var length = array.length;\n\t\n\t      while (length--) {\n\t        if (iteratee(array[length], length, array) === false) {\n\t          break;\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.every` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function arrayEvery(array, predicate) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        if (!predicate(array[index], index, array)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.filter` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     */\n\t    function arrayFilter(array, predicate) {\n\t      var index = -1,\n\t          length = array.length,\n\t          resIndex = -1,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (predicate(value, index, array)) {\n\t          result[++resIndex] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.map` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     */\n\t    function arrayMap(array, iteratee) {\n\t      var index = -1,\n\t          length = array.length,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        result[index] = iteratee(array[index], index, array);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.max` for arrays without support for iteratees.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {*} Returns the maximum value.\n\t     */\n\t    function arrayMax(array) {\n\t      var index = -1,\n\t          length = array.length,\n\t          result = NEGATIVE_INFINITY;\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (value > result) {\n\t          result = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.min` for arrays without support for iteratees.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {*} Returns the minimum value.\n\t     */\n\t    function arrayMin(array) {\n\t      var index = -1,\n\t          length = array.length,\n\t          result = POSITIVE_INFINITY;\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (value < result) {\n\t          result = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.reduce` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @param {boolean} [initFromArray] Specify using the first element of `array`\n\t     *  as the initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     */\n\t    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      if (initFromArray && length) {\n\t        accumulator = array[++index];\n\t      }\n\t      while (++index < length) {\n\t        accumulator = iteratee(accumulator, array[index], index, array);\n\t      }\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.reduceRight` for arrays without support for\n\t     * callback shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @param {boolean} [initFromArray] Specify using the last element of `array`\n\t     *  as the initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     */\n\t    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n\t      var length = array.length;\n\t      if (initFromArray && length) {\n\t        accumulator = array[--length];\n\t      }\n\t      while (length--) {\n\t        accumulator = iteratee(accumulator, array[length], length, array);\n\t      }\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.some` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function arraySome(array, predicate) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        if (predicate(array[index], index, array)) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.sum` for arrays without support for iteratees.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {number} Returns the sum.\n\t     */\n\t    function arraySum(array) {\n\t      var length = array.length,\n\t          result = 0;\n\t\n\t      while (length--) {\n\t        result += +array[length] || 0;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.defaults` to customize its `_.assign` use.\n\t     *\n\t     * @private\n\t     * @param {*} objectValue The destination object property value.\n\t     * @param {*} sourceValue The source object property value.\n\t     * @returns {*} Returns the value to assign to the destination object.\n\t     */\n\t    function assignDefaults(objectValue, sourceValue) {\n\t      return objectValue === undefined ? sourceValue : objectValue;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.template` to customize its `_.assign` use.\n\t     *\n\t     * **Note:** This function is like `assignDefaults` except that it ignores\n\t     * inherited property values when checking if a property is `undefined`.\n\t     *\n\t     * @private\n\t     * @param {*} objectValue The destination object property value.\n\t     * @param {*} sourceValue The source object property value.\n\t     * @param {string} key The key associated with the object and source values.\n\t     * @param {Object} object The destination object.\n\t     * @returns {*} Returns the value to assign to the destination object.\n\t     */\n\t    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n\t      return (objectValue === undefined || !hasOwnProperty.call(object, key))\n\t        ? sourceValue\n\t        : objectValue;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.assign` for customizing assigned values without\n\t     * support for argument juggling, multiple sources, and `this` binding `customizer`\n\t     * functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {Function} customizer The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function assignWith(object, source, customizer) {\n\t      var props = keys(source);\n\t      push.apply(props, getSymbols(source));\n\t\n\t      var index = -1,\n\t          length = props.length;\n\t\n\t      while (++index < length) {\n\t        var key = props[index],\n\t            value = object[key],\n\t            result = customizer(value, source[key], key, object, source);\n\t\n\t        if ((result === result ? (result !== value) : (value === value)) ||\n\t            (value === undefined && !(key in object))) {\n\t          object[key] = result;\n\t        }\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.assign` without support for argument juggling,\n\t     * multiple sources, and `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseAssign = nativeAssign || function(object, source) {\n\t      return source == null\n\t        ? object\n\t        : baseCopy(source, getSymbols(source), baseCopy(source, keys(source), object));\n\t    };\n\t\n\t    /**\n\t     * The base implementation of `_.at` without support for string collections\n\t     * and individual key arguments.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {number[]|string[]} props The property names or indexes of elements to pick.\n\t     * @returns {Array} Returns the new array of picked elements.\n\t     */\n\t    function baseAt(collection, props) {\n\t      var index = -1,\n\t          length = collection.length,\n\t          isArr = isLength(length),\n\t          propsLength = props.length,\n\t          result = Array(propsLength);\n\t\n\t      while(++index < propsLength) {\n\t        var key = props[index];\n\t        if (isArr) {\n\t          result[index] = isIndex(key, length) ? collection[key] : undefined;\n\t        } else {\n\t          result[index] = collection[key];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Copies properties of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy properties from.\n\t     * @param {Array} props The property names to copy.\n\t     * @param {Object} [object={}] The object to copy properties to.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseCopy(source, props, object) {\n\t      object || (object = {});\n\t\n\t      var index = -1,\n\t          length = props.length;\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        object[key] = source[key];\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.callback` which supports specifying the\n\t     * number of arguments to provide to `func`.\n\t     *\n\t     * @private\n\t     * @param {*} [func=_.identity] The value to convert to a callback.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {number} [argCount] The number of arguments to provide to `func`.\n\t     * @returns {Function} Returns the callback.\n\t     */\n\t    function baseCallback(func, thisArg, argCount) {\n\t      var type = typeof func;\n\t      if (type == 'function') {\n\t        return thisArg === undefined\n\t          ? func\n\t          : bindCallback(func, thisArg, argCount);\n\t      }\n\t      if (func == null) {\n\t        return identity;\n\t      }\n\t      if (type == 'object') {\n\t        return baseMatches(func);\n\t      }\n\t      return thisArg === undefined\n\t        ? property(func)\n\t        : baseMatchesProperty(func, thisArg);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clone` without support for argument juggling\n\t     * and `this` binding `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @param {Function} [customizer] The function to customize cloning values.\n\t     * @param {string} [key] The key of `value`.\n\t     * @param {Object} [object] The object `value` belongs to.\n\t     * @param {Array} [stackA=[]] Tracks traversed source objects.\n\t     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n\t     * @returns {*} Returns the cloned value.\n\t     */\n\t    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n\t      var result;\n\t      if (customizer) {\n\t        result = object ? customizer(value, key, object) : customizer(value);\n\t      }\n\t      if (result !== undefined) {\n\t        return result;\n\t      }\n\t      if (!isObject(value)) {\n\t        return value;\n\t      }\n\t      var isArr = isArray(value);\n\t      if (isArr) {\n\t        result = initCloneArray(value);\n\t        if (!isDeep) {\n\t          return arrayCopy(value, result);\n\t        }\n\t      } else {\n\t        var tag = objToString.call(value),\n\t            isFunc = tag == funcTag;\n\t\n\t        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n\t          result = initCloneObject(isFunc ? {} : value);\n\t          if (!isDeep) {\n\t            return baseAssign(result, value);\n\t          }\n\t        } else {\n\t          return cloneableTags[tag]\n\t            ? initCloneByTag(value, tag, isDeep)\n\t            : (object ? value : {});\n\t        }\n\t      }\n\t      // Check for circular references and return corresponding clone.\n\t      stackA || (stackA = []);\n\t      stackB || (stackB = []);\n\t\n\t      var length = stackA.length;\n\t      while (length--) {\n\t        if (stackA[length] == value) {\n\t          return stackB[length];\n\t        }\n\t      }\n\t      // Add the source value to the stack of traversed objects and associate it with its clone.\n\t      stackA.push(value);\n\t      stackB.push(result);\n\t\n\t      // Recursively populate clone (susceptible to call stack limits).\n\t      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n\t        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.create` without support for assigning\n\t     * properties to the created object.\n\t     *\n\t     * @private\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    var baseCreate = (function() {\n\t      function Object() {}\n\t      return function(prototype) {\n\t        if (isObject(prototype)) {\n\t          Object.prototype = prototype;\n\t          var result = new Object;\n\t          Object.prototype = null;\n\t        }\n\t        return result || context.Object();\n\t      };\n\t    }());\n\t\n\t    /**\n\t     * The base implementation of `_.delay` and `_.defer` which accepts an index\n\t     * of where to slice the arguments to provide to `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {Object} args The arguments provide to `func`.\n\t     * @returns {number} Returns the timer id.\n\t     */\n\t    function baseDelay(func, wait, args) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return setTimeout(function() { func.apply(undefined, args); }, wait);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.difference` which accepts a single array\n\t     * of values to exclude.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Array} values The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     */\n\t    function baseDifference(array, values) {\n\t      var length = array ? array.length : 0,\n\t          result = [];\n\t\n\t      if (!length) {\n\t        return result;\n\t      }\n\t      var index = -1,\n\t          indexOf = getIndexOf(),\n\t          isCommon = indexOf == baseIndexOf,\n\t          cache = (isCommon && values.length >= 200) ? createCache(values) : null,\n\t          valuesLength = values.length;\n\t\n\t      if (cache) {\n\t        indexOf = cacheIndexOf;\n\t        isCommon = false;\n\t        values = cache;\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index];\n\t\n\t        if (isCommon && value === value) {\n\t          var valuesIndex = valuesLength;\n\t          while (valuesIndex--) {\n\t            if (values[valuesIndex] === value) {\n\t              continue outer;\n\t            }\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (indexOf(values, value, 0) < 0) {\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forEach` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object|string} Returns `collection`.\n\t     */\n\t    var baseEach = createBaseEach(baseForOwn);\n\t\n\t    /**\n\t     * The base implementation of `_.forEachRight` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object|string} Returns `collection`.\n\t     */\n\t    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\t\n\t    /**\n\t     * The base implementation of `_.every` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`\n\t     */\n\t    function baseEvery(collection, predicate) {\n\t      var result = true;\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = !!predicate(value, index, collection);\n\t        return result;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.fill` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function baseFill(array, value, start, end) {\n\t      var length = array.length;\n\t\n\t      start = start == null ? 0 : (+start || 0);\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = (end === undefined || end > length) ? length : (+end || 0);\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      length = start > end ? 0 : (end >>> 0);\n\t      start >>>= 0;\n\t\n\t      while (start < length) {\n\t        array[start++] = value;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.filter` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     */\n\t    function baseFilter(collection, predicate) {\n\t      var result = [];\n\t      baseEach(collection, function(value, index, collection) {\n\t        if (predicate(value, index, collection)) {\n\t          result.push(value);\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n\t     * without support for callback shorthands and `this` binding, which iterates\n\t     * over `collection` using the provided `eachFunc`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @param {Function} eachFunc The function to iterate over `collection`.\n\t     * @param {boolean} [retKey] Specify returning the key of the found element\n\t     *  instead of the element itself.\n\t     * @returns {*} Returns the found element or its key, else `undefined`.\n\t     */\n\t    function baseFind(collection, predicate, eachFunc, retKey) {\n\t      var result;\n\t      eachFunc(collection, function(value, key, collection) {\n\t        if (predicate(value, key, collection)) {\n\t          result = retKey ? key : value;\n\t          return false;\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.flatten` with added support for restricting\n\t     * flattening and specifying the start index.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to flatten.\n\t     * @param {boolean} isDeep Specify a deep flatten.\n\t     * @param {boolean} isStrict Restrict flattening to arrays and `arguments` objects.\n\t     * @returns {Array} Returns the new flattened array.\n\t     */\n\t    function baseFlatten(array, isDeep, isStrict) {\n\t      var index = -1,\n\t          length = array.length,\n\t          resIndex = -1,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t\n\t        if (isObjectLike(value) && isLength(value.length) && (isArray(value) || isArguments(value))) {\n\t          if (isDeep) {\n\t            // Recursively flatten arrays (susceptible to call stack limits).\n\t            value = baseFlatten(value, isDeep, isStrict);\n\t          }\n\t          var valIndex = -1,\n\t              valLength = value.length;\n\t\n\t          result.length += valLength;\n\t          while (++valIndex < valLength) {\n\t            result[++resIndex] = value[valIndex];\n\t          }\n\t        } else if (!isStrict) {\n\t          result[++resIndex] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n\t     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n\t     * each property. Iteratee functions may exit iteration early by explicitly\n\t     * returning `false`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseFor = createBaseFor();\n\t\n\t    /**\n\t     * This function is like `baseFor` except that it iterates over properties\n\t     * in the opposite order.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseForRight = createBaseFor(true);\n\t\n\t    /**\n\t     * The base implementation of `_.forIn` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForIn(object, iteratee) {\n\t      return baseFor(object, iteratee, keysIn);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forOwn` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwn(object, iteratee) {\n\t      return baseFor(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forOwnRight` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwnRight(object, iteratee) {\n\t      return baseForRight(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.functions` which creates an array of\n\t     * `object` function property names filtered from those provided.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Array} props The property names to filter.\n\t     * @returns {Array} Returns the new array of filtered property names.\n\t     */\n\t    function baseFunctions(object, props) {\n\t      var index = -1,\n\t          length = props.length,\n\t          resIndex = -1,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        if (isFunction(object[key])) {\n\t          result[++resIndex] = key;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `get` without support for string paths\n\t     * and default values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array} path The path of the property to get.\n\t     * @param {string} [pathKey] The key representation of path.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseGet(object, path, pathKey) {\n\t      if (object == null) {\n\t        return;\n\t      }\n\t      if (pathKey !== undefined && pathKey in toObject(object)) {\n\t        path = [pathKey];\n\t      }\n\t      var index = -1,\n\t          length = path.length;\n\t\n\t      while (object != null && ++index < length) {\n\t        var result = object = object[path[index]];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isEqual` without support for `this` binding\n\t     * `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize comparing values.\n\t     * @param {boolean} [isLoose] Specify performing partial comparisons.\n\t     * @param {Array} [stackA] Tracks traversed `value` objects.\n\t     * @param {Array} [stackB] Tracks traversed `other` objects.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     */\n\t    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n\t      // Exit early for identical values.\n\t      if (value === other) {\n\t        // Treat `+0` vs. `-0` as not equal.\n\t        return value !== 0 || (1 / value == 1 / other);\n\t      }\n\t      var valType = typeof value,\n\t          othType = typeof other;\n\t\n\t      // Exit early for unlike primitive values.\n\t      if ((valType != 'function' && valType != 'object' && othType != 'function' && othType != 'object') ||\n\t          value == null || other == null) {\n\t        // Return `false` unless both values are `NaN`.\n\t        return value !== value && other !== other;\n\t      }\n\t      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqual` for arrays and objects which performs\n\t     * deep comparisons and tracks traversed objects enabling objects with circular\n\t     * references to be compared.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparing objects.\n\t     * @param {boolean} [isLoose] Specify performing partial comparisons.\n\t     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n\t     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n\t      var objIsArr = isArray(object),\n\t          othIsArr = isArray(other),\n\t          objTag = arrayTag,\n\t          othTag = arrayTag;\n\t\n\t      if (!objIsArr) {\n\t        objTag = objToString.call(object);\n\t        if (objTag == argsTag) {\n\t          objTag = objectTag;\n\t        } else if (objTag != objectTag) {\n\t          objIsArr = isTypedArray(object);\n\t        }\n\t      }\n\t      if (!othIsArr) {\n\t        othTag = objToString.call(other);\n\t        if (othTag == argsTag) {\n\t          othTag = objectTag;\n\t        } else if (othTag != objectTag) {\n\t          othIsArr = isTypedArray(other);\n\t        }\n\t      }\n\t      var objIsObj = objTag == objectTag,\n\t          othIsObj = othTag == objectTag,\n\t          isSameTag = objTag == othTag;\n\t\n\t      if (isSameTag && !(objIsArr || objIsObj)) {\n\t        return equalByTag(object, other, objTag);\n\t      }\n\t      if (!isLoose) {\n\t        var valWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n\t            othWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\t\n\t        if (valWrapped || othWrapped) {\n\t          return equalFunc(valWrapped ? object.value() : object, othWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n\t        }\n\t      }\n\t      if (!isSameTag) {\n\t        return false;\n\t      }\n\t      // Assume cyclic values are equal.\n\t      // For more information on detecting circular references see https://es5.github.io/#JO.\n\t      stackA || (stackA = []);\n\t      stackB || (stackB = []);\n\t\n\t      var length = stackA.length;\n\t      while (length--) {\n\t        if (stackA[length] == object) {\n\t          return stackB[length] == other;\n\t        }\n\t      }\n\t      // Add `object` and `other` to the stack of traversed objects.\n\t      stackA.push(object);\n\t      stackB.push(other);\n\t\n\t      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\t\n\t      stackA.pop();\n\t      stackB.pop();\n\t\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isMatch` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Array} props The source property names to match.\n\t     * @param {Array} values The source values to match.\n\t     * @param {Array} strictCompareFlags Strict comparison flags for source values.\n\t     * @param {Function} [customizer] The function to customize comparing objects.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     */\n\t    function baseIsMatch(object, props, values, strictCompareFlags, customizer) {\n\t      var index = -1,\n\t          length = props.length,\n\t          noCustomizer = !customizer;\n\t\n\t      while (++index < length) {\n\t        if ((noCustomizer && strictCompareFlags[index])\n\t              ? values[index] !== object[props[index]]\n\t              : !(props[index] in object)\n\t            ) {\n\t          return false;\n\t        }\n\t      }\n\t      index = -1;\n\t      while (++index < length) {\n\t        var key = props[index],\n\t            objValue = object[key],\n\t            srcValue = values[index];\n\t\n\t        if (noCustomizer && strictCompareFlags[index]) {\n\t          var result = objValue !== undefined || (key in object);\n\t        } else {\n\t          result = customizer ? customizer(objValue, srcValue, key) : undefined;\n\t          if (result === undefined) {\n\t            result = baseIsEqual(srcValue, objValue, customizer, true);\n\t          }\n\t        }\n\t        if (!result) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.map` without support for callback shorthands\n\t     * and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     */\n\t    function baseMap(collection, iteratee) {\n\t      var index = -1,\n\t          length = getLength(collection),\n\t          result = isLength(length) ? Array(length) : [];\n\t\n\t      baseEach(collection, function(value, key, collection) {\n\t        result[++index] = iteratee(value, key, collection);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matches` which does not clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseMatches(source) {\n\t      var props = keys(source),\n\t          length = props.length;\n\t\n\t      if (!length) {\n\t        return constant(true);\n\t      }\n\t      if (length == 1) {\n\t        var key = props[0],\n\t            value = source[key];\n\t\n\t        if (isStrictComparable(value)) {\n\t          return function(object) {\n\t            if (object == null) {\n\t              return false;\n\t            }\n\t            return object[key] === value && (value !== undefined || (key in toObject(object)));\n\t          };\n\t        }\n\t      }\n\t      var values = Array(length),\n\t          strictCompareFlags = Array(length);\n\t\n\t      while (length--) {\n\t        value = source[props[length]];\n\t        values[length] = value;\n\t        strictCompareFlags[length] = isStrictComparable(value);\n\t      }\n\t      return function(object) {\n\t        return object != null && baseIsMatch(toObject(object), props, values, strictCompareFlags);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matchesProperty` which does not which does\n\t     * not clone `value`.\n\t     *\n\t     * @private\n\t     * @param {string} path The path of the property to get.\n\t     * @param {*} value The value to compare.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseMatchesProperty(path, value) {\n\t      var isArr = isArray(path),\n\t          isCommon = isKey(path) && isStrictComparable(value),\n\t          pathKey = (path + '');\n\t\n\t      path = toPath(path);\n\t      return function(object) {\n\t        if (object == null) {\n\t          return false;\n\t        }\n\t        var key = pathKey;\n\t        object = toObject(object);\n\t        if ((isArr || !isCommon) && !(key in object)) {\n\t          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t          if (object == null) {\n\t            return false;\n\t          }\n\t          key = last(path);\n\t          object = toObject(object);\n\t        }\n\t        return object[key] === value\n\t          ? (value !== undefined || (key in object))\n\t          : baseIsEqual(value, object[key], null, true);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.merge` without support for argument juggling,\n\t     * multiple sources, and `this` binding `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {Function} [customizer] The function to customize merging properties.\n\t     * @param {Array} [stackA=[]] Tracks traversed source objects.\n\t     * @param {Array} [stackB=[]] Associates values with source counterparts.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseMerge(object, source, customizer, stackA, stackB) {\n\t      if (!isObject(object)) {\n\t        return object;\n\t      }\n\t      var isSrcArr = isLength(source.length) && (isArray(source) || isTypedArray(source));\n\t      if (!isSrcArr) {\n\t        var props = keys(source);\n\t        push.apply(props, getSymbols(source));\n\t      }\n\t      arrayEach(props || source, function(srcValue, key) {\n\t        if (props) {\n\t          key = srcValue;\n\t          srcValue = source[key];\n\t        }\n\t        if (isObjectLike(srcValue)) {\n\t          stackA || (stackA = []);\n\t          stackB || (stackB = []);\n\t          baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n\t        }\n\t        else {\n\t          var value = object[key],\n\t              result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n\t              isCommon = result === undefined;\n\t\n\t          if (isCommon) {\n\t            result = srcValue;\n\t          }\n\t          if ((isSrcArr || result !== undefined) &&\n\t              (isCommon || (result === result ? (result !== value) : (value === value)))) {\n\t            object[key] = result;\n\t          }\n\t        }\n\t      });\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseMerge` for arrays and objects which performs\n\t     * deep merges and tracks traversed objects enabling objects with circular\n\t     * references to be merged.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {string} key The key of the value to merge.\n\t     * @param {Function} mergeFunc The function to merge values.\n\t     * @param {Function} [customizer] The function to customize merging properties.\n\t     * @param {Array} [stackA=[]] Tracks traversed source objects.\n\t     * @param {Array} [stackB=[]] Associates values with source counterparts.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n\t      var length = stackA.length,\n\t          srcValue = source[key];\n\t\n\t      while (length--) {\n\t        if (stackA[length] == srcValue) {\n\t          object[key] = stackB[length];\n\t          return;\n\t        }\n\t      }\n\t      var value = object[key],\n\t          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n\t          isCommon = result === undefined;\n\t\n\t      if (isCommon) {\n\t        result = srcValue;\n\t        if (isLength(srcValue.length) && (isArray(srcValue) || isTypedArray(srcValue))) {\n\t          result = isArray(value)\n\t            ? value\n\t            : (getLength(value) ? arrayCopy(value) : []);\n\t        }\n\t        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n\t          result = isArguments(value)\n\t            ? toPlainObject(value)\n\t            : (isPlainObject(value) ? value : {});\n\t        }\n\t        else {\n\t          isCommon = false;\n\t        }\n\t      }\n\t      // Add the source value to the stack of traversed objects and associate\n\t      // it with its merged value.\n\t      stackA.push(srcValue);\n\t      stackB.push(result);\n\t\n\t      if (isCommon) {\n\t        // Recursively merge objects and arrays (susceptible to call stack limits).\n\t        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n\t      } else if (result === result ? (result !== value) : (value === value)) {\n\t        object[key] = result;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.property` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {string} key The key of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseProperty(key) {\n\t      return function(object) {\n\t        return object == null ? undefined : object[key];\n\t      };\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseProperty` which supports deep paths.\n\t     *\n\t     * @private\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function basePropertyDeep(path) {\n\t      var pathKey = (path + '');\n\t      path = toPath(path);\n\t      return function(object) {\n\t        return baseGet(object, path, pathKey);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAt` without support for individual\n\t     * index arguments and capturing the removed elements.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {number[]} indexes The indexes of elements to remove.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAt(array, indexes) {\n\t      var length = indexes.length;\n\t      while (length--) {\n\t        var index = parseFloat(indexes[length]);\n\t        if (index != previous && isIndex(index)) {\n\t          var previous = index;\n\t          splice.call(array, index, 1);\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.random` without support for argument juggling\n\t     * and returning floating-point numbers.\n\t     *\n\t     * @private\n\t     * @param {number} min The minimum possible value.\n\t     * @param {number} max The maximum possible value.\n\t     * @returns {number} Returns the random number.\n\t     */\n\t    function baseRandom(min, max) {\n\t      return min + floor(nativeRandom() * (max - min + 1));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.reduce` and `_.reduceRight` without support\n\t     * for callback shorthands and `this` binding, which iterates over `collection`\n\t     * using the provided `eachFunc`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {*} accumulator The initial value.\n\t     * @param {boolean} initFromCollection Specify using the first or last element\n\t     *  of `collection` as the initial value.\n\t     * @param {Function} eachFunc The function to iterate over `collection`.\n\t     * @returns {*} Returns the accumulated value.\n\t     */\n\t    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n\t      eachFunc(collection, function(value, index, collection) {\n\t        accumulator = initFromCollection\n\t          ? (initFromCollection = false, value)\n\t          : iteratee(accumulator, value, index, collection);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `setData` without support for hot loop detection.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var baseSetData = !metaMap ? identity : function(func, data) {\n\t      metaMap.set(func, data);\n\t      return func;\n\t    };\n\t\n\t    /**\n\t     * The base implementation of `_.slice` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseSlice(array, start, end) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      start = start == null ? 0 : (+start || 0);\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = (end === undefined || end > length) ? length : (+end || 0);\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      length = start > end ? 0 : ((end - start) >>> 0);\n\t      start >>>= 0;\n\t\n\t      var result = Array(length);\n\t      while (++index < length) {\n\t        result[index] = array[index + start];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.some` without support for callback shorthands\n\t     * and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function baseSome(collection, predicate) {\n\t      var result;\n\t\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = predicate(value, index, collection);\n\t        return !result;\n\t      });\n\t      return !!result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortBy` which uses `comparer` to define\n\t     * the sort order of `array` and replaces criteria objects with their\n\t     * corresponding values.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to sort.\n\t     * @param {Function} comparer The function to define sort order.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function baseSortBy(array, comparer) {\n\t      var length = array.length;\n\t\n\t      array.sort(comparer);\n\t      while (length--) {\n\t        array[length] = array[length].value;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortByOrder` without param guards.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n\t     * @param {boolean[]} orders The sort orders of `iteratees`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     */\n\t    function baseSortByOrder(collection, iteratees, orders) {\n\t      var callback = getCallback(),\n\t          index = -1;\n\t\n\t      iteratees = arrayMap(iteratees, function(iteratee) { return callback(iteratee); });\n\t\n\t      var result = baseMap(collection, function(value) {\n\t        var criteria = arrayMap(iteratees, function(iteratee) { return iteratee(value); });\n\t        return { 'criteria': criteria, 'index': ++index, 'value': value };\n\t      });\n\t\n\t      return baseSortBy(result, function(object, other) {\n\t        return compareMultiple(object, other, orders);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sum` without support for callback shorthands\n\t     * and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {number} Returns the sum.\n\t     */\n\t    function baseSum(collection, iteratee) {\n\t      var result = 0;\n\t      baseEach(collection, function(value, index, collection) {\n\t        result += +iteratee(value, index, collection) || 0;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.uniq` without support for callback shorthands\n\t     * and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The function invoked per iteration.\n\t     * @returns {Array} Returns the new duplicate-value-free array.\n\t     */\n\t    function baseUniq(array, iteratee) {\n\t      var index = -1,\n\t          indexOf = getIndexOf(),\n\t          length = array.length,\n\t          isCommon = indexOf == baseIndexOf,\n\t          isLarge = isCommon && length >= 200,\n\t          seen = isLarge ? createCache() : null,\n\t          result = [];\n\t\n\t      if (seen) {\n\t        indexOf = cacheIndexOf;\n\t        isCommon = false;\n\t      } else {\n\t        isLarge = false;\n\t        seen = iteratee ? [] : result;\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value, index, array) : value;\n\t\n\t        if (isCommon && value === value) {\n\t          var seenIndex = seen.length;\n\t          while (seenIndex--) {\n\t            if (seen[seenIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (iteratee) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (indexOf(seen, computed, 0) < 0) {\n\t          if (iteratee || isLarge) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.values` and `_.valuesIn` which creates an\n\t     * array of `object` property values corresponding to the property names\n\t     * of `props`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array} props The property names to get values for.\n\t     * @returns {Object} Returns the array of property values.\n\t     */\n\t    function baseValues(object, props) {\n\t      var index = -1,\n\t          length = props.length,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        result[index] = object[props[index]];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,\n\t     * and `_.takeWhile` without support for callback shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseWhile(array, predicate, isDrop, fromRight) {\n\t      var length = array.length,\n\t          index = fromRight ? length : -1;\n\t\n\t      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}\n\t      return isDrop\n\t        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n\t        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `wrapperValue` which returns the result of\n\t     * performing a sequence of actions on the unwrapped `value`, where each\n\t     * successive action is supplied the return value of the previous.\n\t     *\n\t     * @private\n\t     * @param {*} value The unwrapped value.\n\t     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseWrapperValue(value, actions) {\n\t      var result = value;\n\t      if (result instanceof LazyWrapper) {\n\t        result = result.value();\n\t      }\n\t      var index = -1,\n\t          length = actions.length;\n\t\n\t      while (++index < length) {\n\t        var args = [result],\n\t            action = actions[index];\n\t\n\t        push.apply(args, action.args);\n\t        result = action.func.apply(action.thisArg, args);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Performs a binary search of `array` to determine the index at which `value`\n\t     * should be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function binaryIndex(array, value, retHighest) {\n\t      var low = 0,\n\t          high = array ? array.length : low;\n\t\n\t      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n\t        while (low < high) {\n\t          var mid = (low + high) >>> 1,\n\t              computed = array[mid];\n\t\n\t          if (retHighest ? (computed <= value) : (computed < value)) {\n\t            low = mid + 1;\n\t          } else {\n\t            high = mid;\n\t          }\n\t        }\n\t        return high;\n\t      }\n\t      return binaryIndexBy(array, value, identity, retHighest);\n\t    }\n\t\n\t    /**\n\t     * This function is like `binaryIndex` except that it invokes `iteratee` for\n\t     * `value` and each element of `array` to compute their sort ranking. The\n\t     * iteratee is invoked with one argument; (value).\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function binaryIndexBy(array, value, iteratee, retHighest) {\n\t      value = iteratee(value);\n\t\n\t      var low = 0,\n\t          high = array ? array.length : 0,\n\t          valIsNaN = value !== value,\n\t          valIsUndef = value === undefined;\n\t\n\t      while (low < high) {\n\t        var mid = floor((low + high) / 2),\n\t            computed = iteratee(array[mid]),\n\t            isReflexive = computed === computed;\n\t\n\t        if (valIsNaN) {\n\t          var setLow = isReflexive || retHighest;\n\t        } else if (valIsUndef) {\n\t          setLow = isReflexive && (retHighest || computed !== undefined);\n\t        } else {\n\t          setLow = retHighest ? (computed <= value) : (computed < value);\n\t        }\n\t        if (setLow) {\n\t          low = mid + 1;\n\t        } else {\n\t          high = mid;\n\t        }\n\t      }\n\t      return nativeMin(high, MAX_ARRAY_INDEX);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseCallback` which only supports `this` binding\n\t     * and specifying the number of arguments to provide to `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {number} [argCount] The number of arguments to provide to `func`.\n\t     * @returns {Function} Returns the callback.\n\t     */\n\t    function bindCallback(func, thisArg, argCount) {\n\t      if (typeof func != 'function') {\n\t        return identity;\n\t      }\n\t      if (thisArg === undefined) {\n\t        return func;\n\t      }\n\t      switch (argCount) {\n\t        case 1: return function(value) {\n\t          return func.call(thisArg, value);\n\t        };\n\t        case 3: return function(value, index, collection) {\n\t          return func.call(thisArg, value, index, collection);\n\t        };\n\t        case 4: return function(accumulator, value, index, collection) {\n\t          return func.call(thisArg, accumulator, value, index, collection);\n\t        };\n\t        case 5: return function(value, other, key, object, source) {\n\t          return func.call(thisArg, value, other, key, object, source);\n\t        };\n\t      }\n\t      return function() {\n\t        return func.apply(thisArg, arguments);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the given array buffer.\n\t     *\n\t     * @private\n\t     * @param {ArrayBuffer} buffer The array buffer to clone.\n\t     * @returns {ArrayBuffer} Returns the cloned array buffer.\n\t     */\n\t    function bufferClone(buffer) {\n\t      return bufferSlice.call(buffer, 0);\n\t    }\n\t    if (!bufferSlice) {\n\t      // PhantomJS has `ArrayBuffer` and `Uint8Array` but not `Float64Array`.\n\t      bufferClone = !(ArrayBuffer && Uint8Array) ? constant(null) : function(buffer) {\n\t        var byteLength = buffer.byteLength,\n\t            floatLength = Float64Array ? floor(byteLength / FLOAT64_BYTES_PER_ELEMENT) : 0,\n\t            offset = floatLength * FLOAT64_BYTES_PER_ELEMENT,\n\t            result = new ArrayBuffer(byteLength);\n\t\n\t        if (floatLength) {\n\t          var view = new Float64Array(result, 0, floatLength);\n\t          view.set(new Float64Array(buffer, 0, floatLength));\n\t        }\n\t        if (byteLength != offset) {\n\t          view = new Uint8Array(result, offset);\n\t          view.set(new Uint8Array(buffer, offset));\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates an array that is the composition of partially applied arguments,\n\t     * placeholders, and provided arguments into a single array of arguments.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} args The provided arguments.\n\t     * @param {Array} partials The arguments to prepend to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgs(args, partials, holders) {\n\t      var holdersLength = holders.length,\n\t          argsIndex = -1,\n\t          argsLength = nativeMax(args.length - holdersLength, 0),\n\t          leftIndex = -1,\n\t          leftLength = partials.length,\n\t          result = Array(argsLength + leftLength);\n\t\n\t      while (++leftIndex < leftLength) {\n\t        result[leftIndex] = partials[leftIndex];\n\t      }\n\t      while (++argsIndex < holdersLength) {\n\t        result[holders[argsIndex]] = args[argsIndex];\n\t      }\n\t      while (argsLength--) {\n\t        result[leftIndex++] = args[argsIndex++];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This function is like `composeArgs` except that the arguments composition\n\t     * is tailored for `_.partialRight`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} args The provided arguments.\n\t     * @param {Array} partials The arguments to append to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgsRight(args, partials, holders) {\n\t      var holdersIndex = -1,\n\t          holdersLength = holders.length,\n\t          argsIndex = -1,\n\t          argsLength = nativeMax(args.length - holdersLength, 0),\n\t          rightIndex = -1,\n\t          rightLength = partials.length,\n\t          result = Array(argsLength + rightLength);\n\t\n\t      while (++argsIndex < argsLength) {\n\t        result[argsIndex] = args[argsIndex];\n\t      }\n\t      var pad = argsIndex;\n\t      while (++rightIndex < rightLength) {\n\t        result[pad + rightIndex] = partials[rightIndex];\n\t      }\n\t      while (++holdersIndex < holdersLength) {\n\t        result[pad + holders[holdersIndex]] = args[argsIndex++];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that aggregates a collection, creating an accumulator\n\t     * object composed from the results of running each element in the collection\n\t     * through an iteratee.\n\t     *\n\t     * **Note:** This function is used to create `_.countBy`, `_.groupBy`, `_.indexBy`,\n\t     * and `_.partition`.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set keys and values of the accumulator object.\n\t     * @param {Function} [initializer] The function to initialize the accumulator object.\n\t     * @returns {Function} Returns the new aggregator function.\n\t     */\n\t    function createAggregator(setter, initializer) {\n\t      return function(collection, iteratee, thisArg) {\n\t        var result = initializer ? initializer() : {};\n\t        iteratee = getCallback(iteratee, thisArg, 3);\n\t\n\t        if (isArray(collection)) {\n\t          var index = -1,\n\t              length = collection.length;\n\t\n\t          while (++index < length) {\n\t            var value = collection[index];\n\t            setter(result, value, iteratee(value, index, collection), collection);\n\t          }\n\t        } else {\n\t          baseEach(collection, function(value, key, collection) {\n\t            setter(result, value, iteratee(value, key, collection), collection);\n\t          });\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that assigns properties of source object(s) to a given\n\t     * destination object.\n\t     *\n\t     * **Note:** This function is used to create `_.assign`, `_.defaults`, and `_.merge`.\n\t     *\n\t     * @private\n\t     * @param {Function} assigner The function to assign values.\n\t     * @returns {Function} Returns the new assigner function.\n\t     */\n\t    function createAssigner(assigner) {\n\t      return restParam(function(object, sources) {\n\t        var index = -1,\n\t            length = object == null ? 0 : sources.length,\n\t            customizer = length > 2 && sources[length - 2],\n\t            guard = length > 2 && sources[2],\n\t            thisArg = length > 1 && sources[length - 1];\n\t\n\t        if (typeof customizer == 'function') {\n\t          customizer = bindCallback(customizer, thisArg, 5);\n\t          length -= 2;\n\t        } else {\n\t          customizer = typeof thisArg == 'function' ? thisArg : null;\n\t          length -= (customizer ? 1 : 0);\n\t        }\n\t        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n\t          customizer = length < 3 ? null : customizer;\n\t          length = 1;\n\t        }\n\t        while (++index < length) {\n\t          var source = sources[index];\n\t          if (source) {\n\t            assigner(object, source, customizer);\n\t          }\n\t        }\n\t        return object;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a `baseEach` or `baseEachRight` function.\n\t     *\n\t     * @private\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseEach(eachFunc, fromRight) {\n\t      return function(collection, iteratee) {\n\t        var length = collection ? getLength(collection) : 0;\n\t        if (!isLength(length)) {\n\t          return eachFunc(collection, iteratee);\n\t        }\n\t        var index = fromRight ? length : -1,\n\t            iterable = toObject(collection);\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          if (iteratee(iterable[index], index, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return collection;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a base function for `_.forIn` or `_.forInRight`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseFor(fromRight) {\n\t      return function(object, iteratee, keysFunc) {\n\t        var iterable = toObject(object),\n\t            props = keysFunc(object),\n\t            length = props.length,\n\t            index = fromRight ? length : -1;\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          var key = props[index];\n\t          if (iteratee(iterable[key], key, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return object;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` and invokes it with the `this`\n\t     * binding of `thisArg`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @returns {Function} Returns the new bound function.\n\t     */\n\t    function createBindWrapper(func, thisArg) {\n\t      var Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return fn.apply(thisArg, arguments);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `Set` cache object to optimize linear searches of large arrays.\n\t     *\n\t     * @private\n\t     * @param {Array} [values] The values to cache.\n\t     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n\t     */\n\t    var createCache = !(nativeCreate && Set) ? constant(null) : function(values) {\n\t      return new SetCache(values);\n\t    };\n\t\n\t    /**\n\t     * Creates a function that produces compound words out of the words in a\n\t     * given string.\n\t     *\n\t     * @private\n\t     * @param {Function} callback The function to combine each word.\n\t     * @returns {Function} Returns the new compounder function.\n\t     */\n\t    function createCompounder(callback) {\n\t      return function(string) {\n\t        var index = -1,\n\t            array = words(deburr(string)),\n\t            length = array.length,\n\t            result = '';\n\t\n\t        while (++index < length) {\n\t          result = callback(result, array[index], index);\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that produces an instance of `Ctor` regardless of\n\t     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n\t     *\n\t     * @private\n\t     * @param {Function} Ctor The constructor to wrap.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCtorWrapper(Ctor) {\n\t      return function() {\n\t        var thisBinding = baseCreate(Ctor.prototype),\n\t            result = Ctor.apply(thisBinding, arguments);\n\t\n\t        // Mimic the constructor's `return` behavior.\n\t        // See https://es5.github.io/#x13.2.2 for more details.\n\t        return isObject(result) ? result : thisBinding;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.curry` or `_.curryRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} flag The curry bit flag.\n\t     * @returns {Function} Returns the new curry function.\n\t     */\n\t    function createCurry(flag) {\n\t      function curryFunc(func, arity, guard) {\n\t        if (guard && isIterateeCall(func, arity, guard)) {\n\t          arity = null;\n\t        }\n\t        var result = createWrapper(func, flag, null, null, null, null, null, arity);\n\t        result.placeholder = curryFunc.placeholder;\n\t        return result;\n\t      }\n\t      return curryFunc;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.max` or `_.min` function.\n\t     *\n\t     * @private\n\t     * @param {Function} arrayFunc The function to get the extremum value from an array.\n\t     * @param {boolean} [isMin] Specify returning the minimum, instead of the maximum,\n\t     *  extremum value.\n\t     * @returns {Function} Returns the new extremum function.\n\t     */\n\t    function createExtremum(arrayFunc, isMin) {\n\t      return function(collection, iteratee, thisArg) {\n\t        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n\t          iteratee = null;\n\t        }\n\t        var func = getCallback(),\n\t            noIteratee = iteratee == null;\n\t\n\t        if (!(func === baseCallback && noIteratee)) {\n\t          noIteratee = false;\n\t          iteratee = func(iteratee, thisArg, 3);\n\t        }\n\t        if (noIteratee) {\n\t          var isArr = isArray(collection);\n\t          if (!isArr && isString(collection)) {\n\t            iteratee = charAtCallback;\n\t          } else {\n\t            return arrayFunc(isArr ? collection : toIterable(collection));\n\t          }\n\t        }\n\t        return extremumBy(collection, iteratee, isMin);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.find` or `_.findLast` function.\n\t     *\n\t     * @private\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new find function.\n\t     */\n\t    function createFind(eachFunc, fromRight) {\n\t      return function(collection, predicate, thisArg) {\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t        if (isArray(collection)) {\n\t          var index = baseFindIndex(collection, predicate, fromRight);\n\t          return index > -1 ? collection[index] : undefined;\n\t        }\n\t        return baseFind(collection, predicate, eachFunc);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.findIndex` or `_.findLastIndex` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new find function.\n\t     */\n\t    function createFindIndex(fromRight) {\n\t      return function(array, predicate, thisArg) {\n\t        if (!(array && array.length)) {\n\t          return -1;\n\t        }\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t        return baseFindIndex(array, predicate, fromRight);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.findKey` or `_.findLastKey` function.\n\t     *\n\t     * @private\n\t     * @param {Function} objectFunc The function to iterate over an object.\n\t     * @returns {Function} Returns the new find function.\n\t     */\n\t    function createFindKey(objectFunc) {\n\t      return function(object, predicate, thisArg) {\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t        return baseFind(object, predicate, objectFunc, true);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.flow` or `_.flowRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new flow function.\n\t     */\n\t    function createFlow(fromRight) {\n\t      return function() {\n\t        var length = arguments.length;\n\t        if (!length) {\n\t          return function() { return arguments[0]; };\n\t        }\n\t        var wrapper,\n\t            index = fromRight ? length : -1,\n\t            leftIndex = 0,\n\t            funcs = Array(length);\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          var func = funcs[leftIndex++] = arguments[index];\n\t          if (typeof func != 'function') {\n\t            throw new TypeError(FUNC_ERROR_TEXT);\n\t          }\n\t          var funcName = wrapper ? '' : getFuncName(func);\n\t          wrapper = funcName == 'wrapper' ? new LodashWrapper([]) : wrapper;\n\t        }\n\t        index = wrapper ? -1 : length;\n\t        while (++index < length) {\n\t          func = funcs[index];\n\t          funcName = getFuncName(func);\n\t\n\t          var data = funcName == 'wrapper' ? getData(func) : null;\n\t          if (data && isLaziable(data[0])) {\n\t            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n\t          } else {\n\t            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n\t          }\n\t        }\n\t        return function() {\n\t          var args = arguments;\n\t          if (wrapper && args.length == 1 && isArray(args[0])) {\n\t            return wrapper.plant(args[0]).value();\n\t          }\n\t          var index = 0,\n\t              result = funcs[index].apply(this, args);\n\t\n\t          while (++index < length) {\n\t            result = funcs[index].call(this, result);\n\t          }\n\t          return result;\n\t        };\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.forEach` or `_.forEachRight`.\n\t     *\n\t     * @private\n\t     * @param {Function} arrayFunc The function to iterate over an array.\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @returns {Function} Returns the new each function.\n\t     */\n\t    function createForEach(arrayFunc, eachFunc) {\n\t      return function(collection, iteratee, thisArg) {\n\t        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n\t          ? arrayFunc(collection, iteratee)\n\t          : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.forIn` or `_.forInRight`.\n\t     *\n\t     * @private\n\t     * @param {Function} objectFunc The function to iterate over an object.\n\t     * @returns {Function} Returns the new each function.\n\t     */\n\t    function createForIn(objectFunc) {\n\t      return function(object, iteratee, thisArg) {\n\t        if (typeof iteratee != 'function' || thisArg !== undefined) {\n\t          iteratee = bindCallback(iteratee, thisArg, 3);\n\t        }\n\t        return objectFunc(object, iteratee, keysIn);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.forOwn` or `_.forOwnRight`.\n\t     *\n\t     * @private\n\t     * @param {Function} objectFunc The function to iterate over an object.\n\t     * @returns {Function} Returns the new each function.\n\t     */\n\t    function createForOwn(objectFunc) {\n\t      return function(object, iteratee, thisArg) {\n\t        if (typeof iteratee != 'function' || thisArg !== undefined) {\n\t          iteratee = bindCallback(iteratee, thisArg, 3);\n\t        }\n\t        return objectFunc(object, iteratee);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.padLeft` or `_.padRight`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify padding from the right.\n\t     * @returns {Function} Returns the new pad function.\n\t     */\n\t    function createPadDir(fromRight) {\n\t      return function(string, length, chars) {\n\t        string = baseToString(string);\n\t        return string && ((fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.partial` or `_.partialRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} flag The partial bit flag.\n\t     * @returns {Function} Returns the new partial function.\n\t     */\n\t    function createPartial(flag) {\n\t      var partialFunc = restParam(function(func, partials) {\n\t        var holders = replaceHolders(partials, partialFunc.placeholder);\n\t        return createWrapper(func, flag, null, partials, holders);\n\t      });\n\t      return partialFunc;\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.reduce` or `_.reduceRight`.\n\t     *\n\t     * @private\n\t     * @param {Function} arrayFunc The function to iterate over an array.\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @returns {Function} Returns the new each function.\n\t     */\n\t    function createReduce(arrayFunc, eachFunc) {\n\t      return function(collection, iteratee, accumulator, thisArg) {\n\t        var initFromArray = arguments.length < 3;\n\t        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n\t          ? arrayFunc(collection, iteratee, accumulator, initFromArray)\n\t          : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` and invokes it with optional `this`\n\t     * binding of, partial application, and currying.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to reference.\n\t     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n\t     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n\t      var isAry = bitmask & ARY_FLAG,\n\t          isBind = bitmask & BIND_FLAG,\n\t          isBindKey = bitmask & BIND_KEY_FLAG,\n\t          isCurry = bitmask & CURRY_FLAG,\n\t          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n\t          isCurryRight = bitmask & CURRY_RIGHT_FLAG;\n\t\n\t      var Ctor = !isBindKey && createCtorWrapper(func),\n\t          key = func;\n\t\n\t      function wrapper() {\n\t        // Avoid `arguments` object use disqualifying optimizations by\n\t        // converting it to an array before providing it to other functions.\n\t        var length = arguments.length,\n\t            index = length,\n\t            args = Array(length);\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        if (partials) {\n\t          args = composeArgs(args, partials, holders);\n\t        }\n\t        if (partialsRight) {\n\t          args = composeArgsRight(args, partialsRight, holdersRight);\n\t        }\n\t        if (isCurry || isCurryRight) {\n\t          var placeholder = wrapper.placeholder,\n\t              argsHolders = replaceHolders(args, placeholder);\n\t\n\t          length -= argsHolders.length;\n\t          if (length < arity) {\n\t            var newArgPos = argPos ? arrayCopy(argPos) : null,\n\t                newArity = nativeMax(arity - length, 0),\n\t                newsHolders = isCurry ? argsHolders : null,\n\t                newHoldersRight = isCurry ? null : argsHolders,\n\t                newPartials = isCurry ? args : null,\n\t                newPartialsRight = isCurry ? null : args;\n\t\n\t            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n\t            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\t\n\t            if (!isCurryBound) {\n\t              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n\t            }\n\t            var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n\t                result = createHybridWrapper.apply(undefined, newData);\n\t\n\t            if (isLaziable(func)) {\n\t              setData(result, newData);\n\t            }\n\t            result.placeholder = placeholder;\n\t            return result;\n\t          }\n\t        }\n\t        var thisBinding = isBind ? thisArg : this;\n\t        if (isBindKey) {\n\t          func = thisBinding[key];\n\t        }\n\t        if (argPos) {\n\t          args = reorder(args, argPos);\n\t        }\n\t        if (isAry && ary < args.length) {\n\t          args.length = ary;\n\t        }\n\t        var fn = (this && this !== root && this instanceof wrapper) ? (Ctor || createCtorWrapper(func)) : func;\n\t        return fn.apply(thisBinding, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates the padding required for `string` based on the given `length`.\n\t     * The `chars` string is truncated if the number of characters exceeds `length`.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to create padding for.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the pad for `string`.\n\t     */\n\t    function createPadding(string, length, chars) {\n\t      var strLength = string.length;\n\t      length = +length;\n\t\n\t      if (strLength >= length || !nativeIsFinite(length)) {\n\t        return '';\n\t      }\n\t      var padLength = length - strLength;\n\t      chars = chars == null ? ' ' : (chars + '');\n\t      return repeat(chars, ceil(padLength / chars.length)).slice(0, padLength);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` and invokes it with the optional `this`\n\t     * binding of `thisArg` and the `partials` prepended to those provided to\n\t     * the wrapper.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {Array} partials The arguments to prepend to those provided to the new function.\n\t     * @returns {Function} Returns the new bound function.\n\t     */\n\t    function createPartialWrapper(func, bitmask, thisArg, partials) {\n\t      var isBind = bitmask & BIND_FLAG,\n\t          Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        // Avoid `arguments` object use disqualifying optimizations by\n\t        // converting it to an array before providing it `func`.\n\t        var argsIndex = -1,\n\t            argsLength = arguments.length,\n\t            leftIndex = -1,\n\t            leftLength = partials.length,\n\t            args = Array(argsLength + leftLength);\n\t\n\t        while (++leftIndex < leftLength) {\n\t          args[leftIndex] = partials[leftIndex];\n\t        }\n\t        while (argsLength--) {\n\t          args[leftIndex++] = arguments[++argsIndex];\n\t        }\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return fn.apply(isBind ? thisArg : this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.sortedIndex` or `_.sortedLastIndex` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {Function} Returns the new index function.\n\t     */\n\t    function createSortedIndex(retHighest) {\n\t      return function(array, value, iteratee, thisArg) {\n\t        var func = getCallback(iteratee);\n\t        return (func === baseCallback && iteratee == null)\n\t          ? binaryIndex(array, value, retHighest)\n\t          : binaryIndexBy(array, value, func(iteratee, thisArg, 1), retHighest);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that either curries or invokes `func` with optional\n\t     * `this` binding and partially applied arguments.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to reference.\n\t     * @param {number} bitmask The bitmask of flags.\n\t     *  The bitmask may be composed of the following flags:\n\t     *     1 - `_.bind`\n\t     *     2 - `_.bindKey`\n\t     *     4 - `_.curry` or `_.curryRight` of a bound function\n\t     *     8 - `_.curry`\n\t     *    16 - `_.curryRight`\n\t     *    32 - `_.partial`\n\t     *    64 - `_.partialRight`\n\t     *   128 - `_.rearg`\n\t     *   256 - `_.ary`\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to be partially applied.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isBindKey = bitmask & BIND_KEY_FLAG;\n\t      if (!isBindKey && typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var length = partials ? partials.length : 0;\n\t      if (!length) {\n\t        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n\t        partials = holders = null;\n\t      }\n\t      length -= (holders ? holders.length : 0);\n\t      if (bitmask & PARTIAL_RIGHT_FLAG) {\n\t        var partialsRight = partials,\n\t            holdersRight = holders;\n\t\n\t        partials = holders = null;\n\t      }\n\t      var data = isBindKey ? null : getData(func),\n\t          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\t\n\t      if (data) {\n\t        mergeData(newData, data);\n\t        bitmask = newData[1];\n\t        arity = newData[9];\n\t      }\n\t      newData[9] = arity == null\n\t        ? (isBindKey ? 0 : func.length)\n\t        : (nativeMax(arity - length, 0) || 0);\n\t\n\t      if (bitmask == BIND_FLAG) {\n\t        var result = createBindWrapper(newData[0], newData[2]);\n\t      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n\t        result = createPartialWrapper.apply(undefined, newData);\n\t      } else {\n\t        result = createHybridWrapper.apply(undefined, newData);\n\t      }\n\t      var setter = data ? baseSetData : setData;\n\t      return setter(result, newData);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for arrays with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to compare.\n\t     * @param {Array} other The other array to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparing arrays.\n\t     * @param {boolean} [isLoose] Specify performing partial comparisons.\n\t     * @param {Array} [stackA] Tracks traversed `value` objects.\n\t     * @param {Array} [stackB] Tracks traversed `other` objects.\n\t     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n\t     */\n\t    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n\t      var index = -1,\n\t          arrLength = array.length,\n\t          othLength = other.length,\n\t          result = true;\n\t\n\t      if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n\t        return false;\n\t      }\n\t      // Deep compare the contents, ignoring non-numeric properties.\n\t      while (result && ++index < arrLength) {\n\t        var arrValue = array[index],\n\t            othValue = other[index];\n\t\n\t        result = undefined;\n\t        if (customizer) {\n\t          result = isLoose\n\t            ? customizer(othValue, arrValue, index)\n\t            : customizer(arrValue, othValue, index);\n\t        }\n\t        if (result === undefined) {\n\t          // Recursively compare arrays (susceptible to call stack limits).\n\t          if (isLoose) {\n\t            var othIndex = othLength;\n\t            while (othIndex--) {\n\t              othValue = other[othIndex];\n\t              result = (arrValue && arrValue === othValue) || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n\t              if (result) {\n\t                break;\n\t              }\n\t            }\n\t          } else {\n\t            result = (arrValue && arrValue === othValue) || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n\t          }\n\t        }\n\t      }\n\t      return !!result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for comparing objects of\n\t     * the same `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports comparing values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} value The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {string} tag The `toStringTag` of the objects to compare.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalByTag(object, other, tag) {\n\t      switch (tag) {\n\t        case boolTag:\n\t        case dateTag:\n\t          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n\t          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n\t          return +object == +other;\n\t\n\t        case errorTag:\n\t          return object.name == other.name && object.message == other.message;\n\t\n\t        case numberTag:\n\t          // Treat `NaN` vs. `NaN` as equal.\n\t          return (object != +object)\n\t            ? other != +other\n\t            // But, treat `-0` vs. `+0` as not equal.\n\t            : (object == 0 ? ((1 / object) == (1 / other)) : object == +other);\n\t\n\t        case regexpTag:\n\t        case stringTag:\n\t          // Coerce regexes to strings and treat strings primitives and string\n\t          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n\t          return object == (other + '');\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for objects with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparing values.\n\t     * @param {boolean} [isLoose] Specify performing partial comparisons.\n\t     * @param {Array} [stackA] Tracks traversed `value` objects.\n\t     * @param {Array} [stackB] Tracks traversed `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n\t      var objProps = keys(object),\n\t          objLength = objProps.length,\n\t          othProps = keys(other),\n\t          othLength = othProps.length;\n\t\n\t      if (objLength != othLength && !isLoose) {\n\t        return false;\n\t      }\n\t      var skipCtor = isLoose,\n\t          index = -1;\n\t\n\t      while (++index < objLength) {\n\t        var key = objProps[index],\n\t            result = isLoose ? key in other : hasOwnProperty.call(other, key);\n\t\n\t        if (result) {\n\t          var objValue = object[key],\n\t              othValue = other[key];\n\t\n\t          result = undefined;\n\t          if (customizer) {\n\t            result = isLoose\n\t              ? customizer(othValue, objValue, key)\n\t              : customizer(objValue, othValue, key);\n\t          }\n\t          if (result === undefined) {\n\t            // Recursively compare objects (susceptible to call stack limits).\n\t            result = (objValue && objValue === othValue) || equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB);\n\t          }\n\t        }\n\t        if (!result) {\n\t          return false;\n\t        }\n\t        skipCtor || (skipCtor = key == 'constructor');\n\t      }\n\t      if (!skipCtor) {\n\t        var objCtor = object.constructor,\n\t            othCtor = other.constructor;\n\t\n\t        // Non `Object` object instances with different constructors are not equal.\n\t        if (objCtor != othCtor &&\n\t            ('constructor' in object && 'constructor' in other) &&\n\t            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n\t              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Gets the extremum value of `collection` invoking `iteratee` for each value\n\t     * in `collection` to generate the criterion by which the value is ranked.\n\t     * The `iteratee` is invoked with three arguments: (value, index, collection).\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {boolean} [isMin] Specify returning the minimum, instead of the\n\t     *  maximum, extremum value.\n\t     * @returns {*} Returns the extremum value.\n\t     */\n\t    function extremumBy(collection, iteratee, isMin) {\n\t      var exValue = isMin ? POSITIVE_INFINITY : NEGATIVE_INFINITY,\n\t          computed = exValue,\n\t          result = computed;\n\t\n\t      baseEach(collection, function(value, index, collection) {\n\t        var current = iteratee(value, index, collection);\n\t        if ((isMin ? (current < computed) : (current > computed)) ||\n\t            (current === exValue && current === result)) {\n\t          computed = current;\n\t          result = value;\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n\t     * customized this function returns the custom method, otherwise it returns\n\t     * the `baseCallback` function. If arguments are provided the chosen function\n\t     * is invoked with them and its result is returned.\n\t     *\n\t     * @private\n\t     * @returns {Function} Returns the chosen function or its result.\n\t     */\n\t    function getCallback(func, thisArg, argCount) {\n\t      var result = lodash.callback || callback;\n\t      result = result === callback ? baseCallback : result;\n\t      return argCount ? result(func, thisArg, argCount) : result;\n\t    }\n\t\n\t    /**\n\t     * Gets metadata for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {*} Returns the metadata for `func`.\n\t     */\n\t    var getData = !metaMap ? noop : function(func) {\n\t      return metaMap.get(func);\n\t    };\n\t\n\t    /**\n\t     * Gets the name of `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {string} Returns the function name.\n\t     */\n\t    var getFuncName = (function() {\n\t      if (!support.funcNames) {\n\t        return constant('');\n\t      }\n\t      if (constant.name == 'constant') {\n\t        return baseProperty('name');\n\t      }\n\t      return function(func) {\n\t        var result = func.name,\n\t            array = realNames[result],\n\t            length = array ? array.length : 0;\n\t\n\t        while (length--) {\n\t          var data = array[length],\n\t              otherFunc = data.func;\n\t\n\t          if (otherFunc == null || otherFunc == func) {\n\t            return data.name;\n\t          }\n\t        }\n\t        return result;\n\t      };\n\t    }());\n\t\n\t    /**\n\t     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n\t     * customized this function returns the custom method, otherwise it returns\n\t     * the `baseIndexOf` function. If arguments are provided the chosen function\n\t     * is invoked with them and its result is returned.\n\t     *\n\t     * @private\n\t     * @returns {Function|number} Returns the chosen function or its result.\n\t     */\n\t    function getIndexOf(collection, target, fromIndex) {\n\t      var result = lodash.indexOf || indexOf;\n\t      result = result === indexOf ? baseIndexOf : result;\n\t      return collection ? result(collection, target, fromIndex) : result;\n\t    }\n\t\n\t    /**\n\t     * Gets the \"length\" property value of `object`.\n\t     *\n\t     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n\t     * in Safari on iOS 8.1 ARM64.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {*} Returns the \"length\" value.\n\t     */\n\t    var getLength = baseProperty('length');\n\t\n\t    /**\n\t     * Creates an array of the own symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of symbols.\n\t     */\n\t    var getSymbols = !getOwnPropertySymbols ? constant([]) : function(object) {\n\t      return getOwnPropertySymbols(toObject(object));\n\t    };\n\t\n\t    /**\n\t     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the view.\n\t     * @param {number} end The end of the view.\n\t     * @param {Array} [transforms] The transformations to apply to the view.\n\t     * @returns {Object} Returns an object containing the `start` and `end`\n\t     *  positions of the view.\n\t     */\n\t    function getView(start, end, transforms) {\n\t      var index = -1,\n\t          length = transforms ? transforms.length : 0;\n\t\n\t      while (++index < length) {\n\t        var data = transforms[index],\n\t            size = data.size;\n\t\n\t        switch (data.type) {\n\t          case 'drop':      start += size; break;\n\t          case 'dropRight': end -= size; break;\n\t          case 'take':      end = nativeMin(end, start + size); break;\n\t          case 'takeRight': start = nativeMax(start, end - size); break;\n\t        }\n\t      }\n\t      return { 'start': start, 'end': end };\n\t    }\n\t\n\t    /**\n\t     * Initializes an array clone.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to clone.\n\t     * @returns {Array} Returns the initialized clone.\n\t     */\n\t    function initCloneArray(array) {\n\t      var length = array.length,\n\t          result = new array.constructor(length);\n\t\n\t      // Add array properties assigned by `RegExp#exec`.\n\t      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n\t        result.index = array.index;\n\t        result.input = array.input;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneObject(object) {\n\t      var Ctor = object.constructor;\n\t      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n\t        Ctor = Object;\n\t      }\n\t      return new Ctor;\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone based on its `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports cloning values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @param {string} tag The `toStringTag` of the object to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneByTag(object, tag, isDeep) {\n\t      var Ctor = object.constructor;\n\t      switch (tag) {\n\t        case arrayBufferTag:\n\t          return bufferClone(object);\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t          return new Ctor(+object);\n\t\n\t        case float32Tag: case float64Tag:\n\t        case int8Tag: case int16Tag: case int32Tag:\n\t        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n\t          var buffer = object.buffer;\n\t          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\t\n\t        case numberTag:\n\t        case stringTag:\n\t          return new Ctor(object);\n\t\n\t        case regexpTag:\n\t          var result = new Ctor(object.source, reFlags.exec(object));\n\t          result.lastIndex = object.lastIndex;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Invokes the method at `path` on `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {Array} args The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     */\n\t    function invokePath(object, path, args) {\n\t      if (object != null && !isKey(path, object)) {\n\t        path = toPath(path);\n\t        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t        path = last(path);\n\t      }\n\t      var func = object == null ? object : object[path];\n\t      return func == null ? undefined : func.apply(object, args);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like index.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n\t     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n\t     */\n\t    function isIndex(value, length) {\n\t      value = +value;\n\t      length = length == null ? MAX_SAFE_INTEGER : length;\n\t      return value > -1 && value % 1 == 0 && value < length;\n\t    }\n\t\n\t    /**\n\t     * Checks if the provided arguments are from an iteratee call.\n\t     *\n\t     * @private\n\t     * @param {*} value The potential iteratee value argument.\n\t     * @param {*} index The potential iteratee index or key argument.\n\t     * @param {*} object The potential iteratee object argument.\n\t     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n\t     */\n\t    function isIterateeCall(value, index, object) {\n\t      if (!isObject(object)) {\n\t        return false;\n\t      }\n\t      var type = typeof index;\n\t      if (type == 'number') {\n\t        var length = getLength(object),\n\t            prereq = isLength(length) && isIndex(index, length);\n\t      } else {\n\t        prereq = type == 'string' && index in object;\n\t      }\n\t      if (prereq) {\n\t        var other = object[index];\n\t        return value === value ? (value === other) : (other !== other);\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a property name and not a property path.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {Object} [object] The object to query keys on.\n\t     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n\t     */\n\t    function isKey(value, object) {\n\t      var type = typeof value;\n\t      if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n\t        return true;\n\t      }\n\t      if (isArray(value)) {\n\t        return false;\n\t      }\n\t      var result = !reIsDeepProp.test(value);\n\t      return result || (object != null && value in toObject(object));\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` has a lazy counterpart.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to check.\n\t     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n\t     */\n\t    function isLaziable(func) {\n\t      var funcName = getFuncName(func);\n\t      return !!funcName && func === lodash[funcName] && funcName in LazyWrapper.prototype;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like length.\n\t     *\n\t     * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n\t     */\n\t    function isLength(value) {\n\t      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` if suitable for strict\n\t     *  equality comparisons, else `false`.\n\t     */\n\t    function isStrictComparable(value) {\n\t      return value === value && (value === 0 ? ((1 / value) > 0) : !isObject(value));\n\t    }\n\t\n\t    /**\n\t     * Merges the function metadata of `source` into `data`.\n\t     *\n\t     * Merging metadata reduces the number of wrappers required to invoke a function.\n\t     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n\t     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n\t     * augment function arguments, making the order in which they are executed important,\n\t     * preventing the merging of metadata. However, we make an exception for a safe\n\t     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n\t     *\n\t     * @private\n\t     * @param {Array} data The destination metadata.\n\t     * @param {Array} source The source metadata.\n\t     * @returns {Array} Returns `data`.\n\t     */\n\t    function mergeData(data, source) {\n\t      var bitmask = data[1],\n\t          srcBitmask = source[1],\n\t          newBitmask = bitmask | srcBitmask,\n\t          isCommon = newBitmask < ARY_FLAG;\n\t\n\t      var isCombo =\n\t        (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) ||\n\t        (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) ||\n\t        (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);\n\t\n\t      // Exit early if metadata can't be merged.\n\t      if (!(isCommon || isCombo)) {\n\t        return data;\n\t      }\n\t      // Use source `thisArg` if available.\n\t      if (srcBitmask & BIND_FLAG) {\n\t        data[2] = source[2];\n\t        // Set when currying a bound function.\n\t        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n\t      }\n\t      // Compose partial arguments.\n\t      var value = source[3];\n\t      if (value) {\n\t        var partials = data[3];\n\t        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n\t        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n\t      }\n\t      // Compose partial right arguments.\n\t      value = source[5];\n\t      if (value) {\n\t        partials = data[5];\n\t        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n\t        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n\t      }\n\t      // Use source `argPos` if available.\n\t      value = source[7];\n\t      if (value) {\n\t        data[7] = arrayCopy(value);\n\t      }\n\t      // Use source `ary` if it's smaller.\n\t      if (srcBitmask & ARY_FLAG) {\n\t        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n\t      }\n\t      // Use source `arity` if one is not provided.\n\t      if (data[9] == null) {\n\t        data[9] = source[9];\n\t      }\n\t      // Use source `func` and merge bitmasks.\n\t      data[0] = source[0];\n\t      data[1] = newBitmask;\n\t\n\t      return data;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.pick` that picks `object` properties specified\n\t     * by `props`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {string[]} props The property names to pick.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function pickByArray(object, props) {\n\t      object = toObject(object);\n\t\n\t      var index = -1,\n\t          length = props.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        if (key in object) {\n\t          result[key] = object[key];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.pick` that picks `object` properties `predicate`\n\t     * returns truthy for.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function pickByCallback(object, predicate) {\n\t      var result = {};\n\t      baseForIn(object, function(value, key, object) {\n\t        if (predicate(value, key, object)) {\n\t          result[key] = value;\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reorder `array` according to the specified indexes where the element at\n\t     * the first index is assigned as the first element, the element at\n\t     * the second index is assigned as the second element, and so on.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to reorder.\n\t     * @param {Array} indexes The arranged array indexes.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function reorder(array, indexes) {\n\t      var arrLength = array.length,\n\t          length = nativeMin(indexes.length, arrLength),\n\t          oldArray = arrayCopy(array);\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Sets metadata for `func`.\n\t     *\n\t     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n\t     * period of time, it will trip its breaker and transition to an identity function\n\t     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n\t     * for more details.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var setData = (function() {\n\t      var count = 0,\n\t          lastCalled = 0;\n\t\n\t      return function(key, value) {\n\t        var stamp = now(),\n\t            remaining = HOT_SPAN - (stamp - lastCalled);\n\t\n\t        lastCalled = stamp;\n\t        if (remaining > 0) {\n\t          if (++count >= HOT_COUNT) {\n\t            return key;\n\t          }\n\t        } else {\n\t          count = 0;\n\t        }\n\t        return baseSetData(key, value);\n\t      };\n\t    }());\n\t\n\t    /**\n\t     * A fallback implementation of `_.isPlainObject` which checks if `value`\n\t     * is an object created by the `Object` constructor or has a `[[Prototype]]`\n\t     * of `null`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n\t     */\n\t    function shimIsPlainObject(value) {\n\t      var Ctor,\n\t          support = lodash.support;\n\t\n\t      // Exit early for non `Object` objects.\n\t      if (!(isObjectLike(value) && objToString.call(value) == objectTag) ||\n\t          (!hasOwnProperty.call(value, 'constructor') &&\n\t            (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n\t        return false;\n\t      }\n\t      // IE < 9 iterates inherited properties before own properties. If the first\n\t      // iterated property is an object's own property then there are no inherited\n\t      // enumerable properties.\n\t      var result;\n\t      // In most environments an object's own properties are iterated before\n\t      // its inherited properties. If the last iterated property is an object's\n\t      // own property then there are no inherited enumerable properties.\n\t      baseForIn(value, function(subValue, key) {\n\t        result = key;\n\t      });\n\t      return result === undefined || hasOwnProperty.call(value, result);\n\t    }\n\t\n\t    /**\n\t     * A fallback implementation of `Object.keys` which creates an array of the\n\t     * own enumerable property names of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function shimKeys(object) {\n\t      var props = keysIn(object),\n\t          propsLength = props.length,\n\t          length = propsLength && object.length,\n\t          support = lodash.support;\n\t\n\t      var allowIndexes = length && isLength(length) &&\n\t        (isArray(object) || (support.nonEnumArgs && isArguments(object)));\n\t\n\t      var index = -1,\n\t          result = [];\n\t\n\t      while (++index < propsLength) {\n\t        var key = props[index];\n\t        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an array-like object if it is not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {Array|Object} Returns the array-like object.\n\t     */\n\t    function toIterable(value) {\n\t      if (value == null) {\n\t        return [];\n\t      }\n\t      if (!isLength(getLength(value))) {\n\t        return values(value);\n\t      }\n\t      return isObject(value) ? value : Object(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an object if it is not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {Object} Returns the object.\n\t     */\n\t    function toObject(value) {\n\t      return isObject(value) ? value : Object(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to property path array if it is not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {Array} Returns the property path array.\n\t     */\n\t    function toPath(value) {\n\t      if (isArray(value)) {\n\t        return value;\n\t      }\n\t      var result = [];\n\t      baseToString(value).replace(rePropName, function(match, number, quote, string) {\n\t        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `wrapper`.\n\t     *\n\t     * @private\n\t     * @param {Object} wrapper The wrapper to clone.\n\t     * @returns {Object} Returns the cloned wrapper.\n\t     */\n\t    function wrapperClone(wrapper) {\n\t      return wrapper instanceof LazyWrapper\n\t        ? wrapper.clone()\n\t        : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an array of elements split into groups the length of `size`.\n\t     * If `collection` can't be split evenly, the final chunk will be the remaining\n\t     * elements.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to process.\n\t     * @param {number} [size=1] The length of each chunk.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the new array containing chunks.\n\t     * @example\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 2);\n\t     * // => [['a', 'b'], ['c', 'd']]\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 3);\n\t     * // => [['a', 'b', 'c'], ['d']]\n\t     */\n\t    function chunk(array, size, guard) {\n\t      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n\t        size = 1;\n\t      } else {\n\t        size = nativeMax(+size || 1, 1);\n\t      }\n\t      var index = 0,\n\t          length = array ? array.length : 0,\n\t          resIndex = -1,\n\t          result = Array(ceil(length / size));\n\t\n\t      while (index < length) {\n\t        result[++resIndex] = baseSlice(array, index, (index += size));\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array with all falsey values removed. The values `false`, `null`,\n\t     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to compact.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.compact([0, 1, false, 2, '', 3]);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function compact(array) {\n\t      var index = -1,\n\t          length = array ? array.length : 0,\n\t          resIndex = -1,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (value) {\n\t          result[++resIndex] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array excluding all values of the provided arrays using\n\t     * `SameValueZero` for equality comparisons.\n\t     *\n\t     * **Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n\t     * comparisons are like strict equality comparisons, e.g. `===`, except that\n\t     * `NaN` matches `NaN`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The arrays of values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.difference([1, 2, 3], [4, 2]);\n\t     * // => [1, 3]\n\t     */\n\t    var difference = restParam(function(array, values) {\n\t      return (isArray(array) || isArguments(array))\n\t        ? baseDifference(array, baseFlatten(values, false, true))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.drop([1, 2, 3]);\n\t     * // => [2, 3]\n\t     *\n\t     * _.drop([1, 2, 3], 2);\n\t     * // => [3]\n\t     *\n\t     * _.drop([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.drop([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function drop(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n\t        n = 1;\n\t      }\n\t      return baseSlice(array, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropRight([1, 2, 3]);\n\t     * // => [1, 2]\n\t     *\n\t     * _.dropRight([1, 2, 3], 2);\n\t     * // => [1]\n\t     *\n\t     * _.dropRight([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.dropRight([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function dropRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n\t        n = 1;\n\t      }\n\t      n = length - (+n || 0);\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the end.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that match the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropRightWhile([1, 2, 3], function(n) {\n\t     *   return n > 1;\n\t     * });\n\t     * // => [1]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n\t     * // => ['barney', 'fred']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n\t     * // => ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropRightWhile(array, predicate, thisArg) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getCallback(predicate, thisArg, 3), true, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the beginning.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropWhile([1, 2, 3], function(n) {\n\t     *   return n < 3;\n\t     * });\n\t     * // => [3]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\n\t     * // => ['fred', 'pebbles']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.dropWhile(users, 'active', false), 'user');\n\t     * // => ['pebbles']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.dropWhile(users, 'active'), 'user');\n\t     * // => ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropWhile(array, predicate, thisArg) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getCallback(predicate, thisArg, 3), true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Fills elements of `array` with `value` from `start` up to, but not\n\t     * including, `end`.\n\t     *\n\t     * **Note:** This method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.fill(array, 'a');\n\t     * console.log(array);\n\t     * // => ['a', 'a', 'a']\n\t     *\n\t     * _.fill(Array(3), 2);\n\t     * // => [2, 2, 2]\n\t     *\n\t     * _.fill([4, 6, 8], '*', 1, 2);\n\t     * // => [4, '*', 8]\n\t     */\n\t    function fill(array, value, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      return baseFill(array, value, start, end);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the index of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.findIndex(users, function(chr) {\n\t     *   return chr.user == 'barney';\n\t     * });\n\t     * // => 0\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.findIndex(users, { 'user': 'fred', 'active': false });\n\t     * // => 1\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.findIndex(users, 'active', false);\n\t     * // => 0\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.findIndex(users, 'active');\n\t     * // => 2\n\t     */\n\t    var findIndex = createFindIndex();\n\t\n\t    /**\n\t     * This method is like `_.findIndex` except that it iterates over elements\n\t     * of `collection` from right to left.\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.findLastIndex(users, function(chr) {\n\t     *   return chr.user == 'pebbles';\n\t     * });\n\t     * // => 2\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n\t     * // => 0\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.findLastIndex(users, 'active', false);\n\t     * // => 2\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.findLastIndex(users, 'active');\n\t     * // => 0\n\t     */\n\t    var findLastIndex = createFindIndex(true);\n\t\n\t    /**\n\t     * Gets the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias head\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the first element of `array`.\n\t     * @example\n\t     *\n\t     * _.first([1, 2, 3]);\n\t     * // => 1\n\t     *\n\t     * _.first([]);\n\t     * // => undefined\n\t     */\n\t    function first(array) {\n\t      return array ? array[0] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n\t     * flattened, otherwise it is only flattened a single level.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @param {boolean} [isDeep] Specify a deep flatten.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flatten([1, [2, 3, [4]]]);\n\t     * // => [1, 2, 3, [4]]\n\t     *\n\t     * // using `isDeep`\n\t     * _.flatten([1, [2, 3, [4]]], true);\n\t     * // => [1, 2, 3, 4]\n\t     */\n\t    function flatten(array, isDeep, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (guard && isIterateeCall(array, isDeep, guard)) {\n\t        isDeep = false;\n\t      }\n\t      return length ? baseFlatten(array, isDeep) : [];\n\t    }\n\t\n\t    /**\n\t     * Recursively flattens a nested array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to recursively flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flattenDeep([1, [2, 3, [4]]]);\n\t     * // => [1, 2, 3, 4]\n\t     */\n\t    function flattenDeep(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? baseFlatten(array, true) : [];\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the first occurrence of `value` is found in `array`\n\t     * using `SameValueZero` for equality comparisons. If `fromIndex` is negative,\n\t     * it is used as the offset from the end of `array`. If `array` is sorted\n\t     * providing `true` for `fromIndex` performs a faster binary search.\n\t     *\n\t     * **Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n\t     * comparisons are like strict equality comparisons, e.g. `===`, except that\n\t     * `NaN` matches `NaN`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n\t     *  to perform a binary search on a sorted array.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.indexOf([1, 2, 1, 2], 2);\n\t     * // => 1\n\t     *\n\t     * // using `fromIndex`\n\t     * _.indexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 3\n\t     *\n\t     * // performing a binary search\n\t     * _.indexOf([1, 1, 2, 2], 2, true);\n\t     * // => 2\n\t     */\n\t    function indexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      if (typeof fromIndex == 'number') {\n\t        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n\t      } else if (fromIndex) {\n\t        var index = binaryIndex(array, value),\n\t            other = array[index];\n\t\n\t        if (value === value ? (value === other) : (other !== other)) {\n\t          return index;\n\t        }\n\t        return -1;\n\t      }\n\t      return baseIndexOf(array, value, fromIndex || 0);\n\t    }\n\t\n\t    /**\n\t     * Gets all but the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.initial([1, 2, 3]);\n\t     * // => [1, 2]\n\t     */\n\t    function initial(array) {\n\t      return dropRight(array, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values in all provided arrays using `SameValueZero`\n\t     * for equality comparisons.\n\t     *\n\t     * **Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n\t     * comparisons are like strict equality comparisons, e.g. `===`, except that\n\t     * `NaN` matches `NaN`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of shared values.\n\t     * @example\n\t     * _.intersection([1, 2], [4, 2], [2, 1]);\n\t     * // => [2]\n\t     */\n\t    function intersection() {\n\t      var args = [],\n\t          argsIndex = -1,\n\t          argsLength = arguments.length,\n\t          caches = [],\n\t          indexOf = getIndexOf(),\n\t          isCommon = indexOf == baseIndexOf,\n\t          result = [];\n\t\n\t      while (++argsIndex < argsLength) {\n\t        var value = arguments[argsIndex];\n\t        if (isArray(value) || isArguments(value)) {\n\t          args.push(value);\n\t          caches.push((isCommon && value.length >= 120) ? createCache(argsIndex && value) : null);\n\t        }\n\t      }\n\t      argsLength = args.length;\n\t      if (argsLength < 2) {\n\t        return result;\n\t      }\n\t      var array = args[0],\n\t          index = -1,\n\t          length = array ? array.length : 0,\n\t          seen = caches[0];\n\t\n\t      outer:\n\t      while (++index < length) {\n\t        value = array[index];\n\t        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {\n\t          argsIndex = argsLength;\n\t          while (--argsIndex) {\n\t            var cache = caches[argsIndex];\n\t            if ((cache ? cacheIndexOf(cache, value) : indexOf(args[argsIndex], value, 0)) < 0) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (seen) {\n\t            seen.push(value);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the last element of `array`.\n\t     * @example\n\t     *\n\t     * _.last([1, 2, 3]);\n\t     * // => 3\n\t     */\n\t    function last(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? array[length - 1] : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it iterates over elements of\n\t     * `array` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n\t     *  or `true` to perform a binary search on a sorted array.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.lastIndexOf([1, 2, 1, 2], 2);\n\t     * // => 3\n\t     *\n\t     * // using `fromIndex`\n\t     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 1\n\t     *\n\t     * // performing a binary search\n\t     * _.lastIndexOf([1, 1, 2, 2], 2, true);\n\t     * // => 3\n\t     */\n\t    function lastIndexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = length;\n\t      if (typeof fromIndex == 'number') {\n\t        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n\t      } else if (fromIndex) {\n\t        index = binaryIndex(array, value, true) - 1;\n\t        var other = array[index];\n\t        if (value === value ? (value === other) : (other !== other)) {\n\t          return index;\n\t        }\n\t        return -1;\n\t      }\n\t      if (value !== value) {\n\t        return indexOfNaN(array, index, true);\n\t      }\n\t      while (index--) {\n\t        if (array[index] === value) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * Removes all provided values from `array` using `SameValueZero` for equality\n\t     * comparisons.\n\t     *\n\t     * **Notes:**\n\t     *  - Unlike `_.without`, this method mutates `array`\n\t     *  - [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n\t     *    comparisons are like strict equality comparisons, e.g. `===`, except\n\t     *    that `NaN` matches `NaN`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...*} [values] The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 1, 2, 3];\n\t     *\n\t     * _.pull(array, 2, 3);\n\t     * console.log(array);\n\t     * // => [1, 1]\n\t     */\n\t    function pull() {\n\t      var args = arguments,\n\t          array = args[0];\n\t\n\t      if (!(array && array.length)) {\n\t        return array;\n\t      }\n\t      var index = 0,\n\t          indexOf = getIndexOf(),\n\t          length = args.length;\n\t\n\t      while (++index < length) {\n\t        var fromIndex = 0,\n\t            value = args[index];\n\t\n\t        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n\t          splice.call(array, fromIndex, 1);\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Removes elements from `array` corresponding to the given indexes and returns\n\t     * an array of the removed elements. Indexes may be specified as an array of\n\t     * indexes or as individual arguments.\n\t     *\n\t     * **Note:** Unlike `_.at`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n\t     *  specified as individual indexes or arrays of indexes.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [5, 10, 15, 20];\n\t     * var evens = _.pullAt(array, 1, 3);\n\t     *\n\t     * console.log(array);\n\t     * // => [5, 15]\n\t     *\n\t     * console.log(evens);\n\t     * // => [10, 20]\n\t     */\n\t    var pullAt = restParam(function(array, indexes) {\n\t      array || (array = []);\n\t      indexes = baseFlatten(indexes);\n\t\n\t      var result = baseAt(array, indexes);\n\t      basePullAt(array, indexes.sort(baseCompareAscending));\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Removes all elements from `array` that `predicate` returns truthy for\n\t     * and returns an array of the removed elements. The predicate is bound to\n\t     * `thisArg` and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * **Note:** Unlike `_.filter`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 4];\n\t     * var evens = _.remove(array, function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 3]\n\t     *\n\t     * console.log(evens);\n\t     * // => [2, 4]\n\t     */\n\t    function remove(array, predicate, thisArg) {\n\t      var result = [];\n\t      if (!(array && array.length)) {\n\t        return result;\n\t      }\n\t      var index = -1,\n\t          indexes = [],\n\t          length = array.length;\n\t\n\t      predicate = getCallback(predicate, thisArg, 3);\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (predicate(value, index, array)) {\n\t          result.push(value);\n\t          indexes.push(index);\n\t        }\n\t      }\n\t      basePullAt(array, indexes);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets all but the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias tail\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.rest([1, 2, 3]);\n\t     * // => [2, 3]\n\t     */\n\t    function rest(array) {\n\t      return drop(array, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` from `start` up to, but not including, `end`.\n\t     *\n\t     * **Note:** This method is used instead of `Array#slice` to support node\n\t     * lists in IE < 9 and to ensure dense arrays are returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function slice(array, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      return baseSlice(array, start, end);\n\t    }\n\t\n\t    /**\n\t     * Uses a binary search to determine the lowest index at which `value` should\n\t     * be inserted into `array` in order to maintain its sort order. If an iteratee\n\t     * function is provided it is invoked for `value` and each element of `array`\n\t     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n\t     * invoked with one argument; (value).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedIndex([30, 50], 40);\n\t     * // => 1\n\t     *\n\t     * _.sortedIndex([4, 4, 5, 5], 5);\n\t     * // => 2\n\t     *\n\t     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n\t     *\n\t     * // using an iteratee function\n\t     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n\t     *   return this.data[word];\n\t     * }, dict);\n\t     * // => 1\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n\t     * // => 1\n\t     */\n\t    var sortedIndex = createSortedIndex();\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it returns the highest\n\t     * index at which `value` should be inserted into `array` in order to\n\t     * maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndex([4, 4, 5, 5], 5);\n\t     * // => 4\n\t     */\n\t    var sortedLastIndex = createSortedIndex(true);\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.take([1, 2, 3]);\n\t     * // => [1]\n\t     *\n\t     * _.take([1, 2, 3], 2);\n\t     * // => [1, 2]\n\t     *\n\t     * _.take([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.take([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function take(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n\t        n = 1;\n\t      }\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeRight([1, 2, 3]);\n\t     * // => [3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 2);\n\t     * // => [2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function takeRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n\t        n = 1;\n\t      }\n\t      n = length - (+n || 0);\n\t      return baseSlice(array, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the end. Elements are\n\t     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n\t     * and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeRightWhile([1, 2, 3], function(n) {\n\t     *   return n > 1;\n\t     * });\n\t     * // => [2, 3]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n\t     * // => ['pebbles']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');\n\t     * // => ['fred', 'pebbles']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n\t     * // => []\n\t     */\n\t    function takeRightWhile(array, predicate, thisArg) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getCallback(predicate, thisArg, 3), false, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the beginning. Elements\n\t     * are taken until `predicate` returns falsey. The predicate is bound to\n\t     * `thisArg` and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeWhile([1, 2, 3], function(n) {\n\t     *   return n < 3;\n\t     * });\n\t     * // => [1, 2]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false},\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.takeWhile(users, 'active', false), 'user');\n\t     * // => ['barney', 'fred']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.takeWhile(users, 'active'), 'user');\n\t     * // => []\n\t     */\n\t    function takeWhile(array, predicate, thisArg) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getCallback(predicate, thisArg, 3))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values, in order, of the provided arrays using\n\t     * `SameValueZero` for equality comparisons.\n\t     *\n\t     * **Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n\t     * comparisons are like strict equality comparisons, e.g. `===`, except that\n\t     * `NaN` matches `NaN`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.union([1, 2], [4, 2], [2, 1]);\n\t     * // => [1, 2, 4]\n\t     */\n\t    var union = restParam(function(arrays) {\n\t      return baseUniq(baseFlatten(arrays, false, true));\n\t    });\n\t\n\t    /**\n\t     * Creates a duplicate-free version of an array, using `SameValueZero` for\n\t     * equality comparisons, in which only the first occurence of each element\n\t     * is kept. Providing `true` for `isSorted` performs a faster search algorithm\n\t     * for sorted arrays. If an iteratee function is provided it is invoked for\n\t     * each element in the array to generate the criterion by which uniqueness\n\t     * is computed. The `iteratee` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * **Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n\t     * comparisons are like strict equality comparisons, e.g. `===`, except that\n\t     * `NaN` matches `NaN`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias unique\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {boolean} [isSorted] Specify the array is sorted.\n\t     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new duplicate-value-free array.\n\t     * @example\n\t     *\n\t     * _.uniq([2, 1, 2]);\n\t     * // => [2, 1]\n\t     *\n\t     * // using `isSorted`\n\t     * _.uniq([1, 1, 2], true);\n\t     * // => [1, 2]\n\t     *\n\t     * // using an iteratee function\n\t     * _.uniq([1, 2.5, 1.5, 2], function(n) {\n\t     *   return this.floor(n);\n\t     * }, Math);\n\t     * // => [1, 2.5]\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    function uniq(array, isSorted, iteratee, thisArg) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (isSorted != null && typeof isSorted != 'boolean') {\n\t        thisArg = iteratee;\n\t        iteratee = isIterateeCall(array, isSorted, thisArg) ? null : isSorted;\n\t        isSorted = false;\n\t      }\n\t      var func = getCallback();\n\t      if (!(func === baseCallback && iteratee == null)) {\n\t        iteratee = func(iteratee, thisArg, 3);\n\t      }\n\t      return (isSorted && getIndexOf() == baseIndexOf)\n\t        ? sortedUniq(array, iteratee)\n\t        : baseUniq(array, iteratee);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts an array of grouped\n\t     * elements and creates an array regrouping the elements to their pre-`_.zip`\n\t     * configuration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n\t     * // => [['fred', 30, true], ['barney', 40, false]]\n\t     *\n\t     * _.unzip(zipped);\n\t     * // => [['fred', 'barney'], [30, 40], [true, false]]\n\t     */\n\t    function unzip(array) {\n\t      var index = -1,\n\t          length = (array && array.length && arrayMax(arrayMap(array, getLength))) >>> 0,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        result[index] = arrayMap(array, baseProperty(index));\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array excluding all provided values using `SameValueZero` for\n\t     * equality comparisons.\n\t     *\n\t     * **Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n\t     * comparisons are like strict equality comparisons, e.g. `===`, except that\n\t     * `NaN` matches `NaN`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to filter.\n\t     * @param {...*} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.without([1, 2, 1, 3], 1, 2);\n\t     * // => [3]\n\t     */\n\t    var without = restParam(function(array, values) {\n\t      return (isArray(array) || isArguments(array))\n\t        ? baseDifference(array, values)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates an array that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n\t     * of the provided arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of values.\n\t     * @example\n\t     *\n\t     * _.xor([1, 2], [4, 2]);\n\t     * // => [1, 4]\n\t     */\n\t    function xor() {\n\t      var index = -1,\n\t          length = arguments.length;\n\t\n\t      while (++index < length) {\n\t        var array = arguments[index];\n\t        if (isArray(array) || isArguments(array)) {\n\t          var result = result\n\t            ? baseDifference(result, array).concat(baseDifference(array, result))\n\t            : array;\n\t        }\n\t      }\n\t      return result ? baseUniq(result) : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of grouped elements, the first of which contains the first\n\t     * elements of the given arrays, the second of which contains the second elements\n\t     * of the given arrays, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n\t     * // => [['fred', 30, true], ['barney', 40, false]]\n\t     */\n\t    var zip = restParam(unzip);\n\t\n\t    /**\n\t     * The inverse of `_.pairs`; this method returns an object composed from arrays\n\t     * of property names and values. Provide either a single two dimensional array,\n\t     * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\n\t     * and one of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias object\n\t     * @category Array\n\t     * @param {Array} props The property names.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObject([['fred', 30], ['barney', 40]]);\n\t     * // => { 'fred': 30, 'barney': 40 }\n\t     *\n\t     * _.zipObject(['fred', 'barney'], [30, 40]);\n\t     * // => { 'fred': 30, 'barney': 40 }\n\t     */\n\t    function zipObject(props, values) {\n\t      var index = -1,\n\t          length = props ? props.length : 0,\n\t          result = {};\n\t\n\t      if (length && !values && !isArray(props[0])) {\n\t        values = [];\n\t      }\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        if (values) {\n\t          result[key] = values[index];\n\t        } else if (key) {\n\t          result[key[0]] = key[1];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` object that wraps `value` with explicit method\n\t     * chaining enabled.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @param {*} value The value to wrap.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36 },\n\t     *   { 'user': 'fred',    'age': 40 },\n\t     *   { 'user': 'pebbles', 'age': 1 }\n\t     * ];\n\t     *\n\t     * var youngest = _.chain(users)\n\t     *   .sortBy('age')\n\t     *   .map(function(chr) {\n\t     *     return chr.user + ' is ' + chr.age;\n\t     *   })\n\t     *   .first()\n\t     *   .value();\n\t     * // => 'pebbles is 1'\n\t     */\n\t    function chain(value) {\n\t      var result = lodash(value);\n\t      result.__chain__ = true;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method invokes `interceptor` and returns `value`. The interceptor is\n\t     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n\t     * this method is to \"tap into\" a method chain in order to perform operations\n\t     * on intermediate results within the chain.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @param {*} [thisArg] The `this` binding of `interceptor`.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3])\n\t     *  .tap(function(array) {\n\t     *    array.pop();\n\t     *  })\n\t     *  .reverse()\n\t     *  .value();\n\t     * // => [2, 1]\n\t     */\n\t    function tap(value, interceptor, thisArg) {\n\t      interceptor.call(thisArg, value);\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.tap` except that it returns the result of `interceptor`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @param {*} [thisArg] The `this` binding of `interceptor`.\n\t     * @returns {*} Returns the result of `interceptor`.\n\t     * @example\n\t     *\n\t     * _('  abc  ')\n\t     *  .chain()\n\t     *  .trim()\n\t     *  .thru(function(value) {\n\t     *    return [value];\n\t     *  })\n\t     *  .value();\n\t     * // => ['abc']\n\t     */\n\t    function thru(value, interceptor, thisArg) {\n\t      return interceptor.call(thisArg, value);\n\t    }\n\t\n\t    /**\n\t     * Enables explicit method chaining on the wrapper object.\n\t     *\n\t     * @name chain\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // without explicit chaining\n\t     * _(users).first();\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     *\n\t     * // with explicit chaining\n\t     * _(users).chain()\n\t     *   .first()\n\t     *   .pick('user')\n\t     *   .value();\n\t     * // => { 'user': 'barney' }\n\t     */\n\t    function wrapperChain() {\n\t      return chain(this);\n\t    }\n\t\n\t    /**\n\t     * Executes the chained sequence and returns the wrapped result.\n\t     *\n\t     * @name commit\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2];\n\t     * var wrapper = _(array).push(3);\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2]\n\t     *\n\t     * wrapper = wrapper.commit();\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * wrapper.last();\n\t     * // => 3\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperCommit() {\n\t      return new LodashWrapper(this.value(), this.__chain__);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n\t     *\n\t     * @name plant\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2];\n\t     * var wrapper = _(array).map(function(value) {\n\t     *   return Math.pow(value, 2);\n\t     * });\n\t     *\n\t     * var other = [3, 4];\n\t     * var otherWrapper = wrapper.plant(other);\n\t     *\n\t     * otherWrapper.value();\n\t     * // => [9, 16]\n\t     *\n\t     * wrapper.value();\n\t     * // => [1, 4]\n\t     */\n\t    function wrapperPlant(value) {\n\t      var result,\n\t          parent = this;\n\t\n\t      while (parent instanceof baseLodash) {\n\t        var clone = wrapperClone(parent);\n\t        if (result) {\n\t          previous.__wrapped__ = clone;\n\t        } else {\n\t          result = clone;\n\t        }\n\t        var previous = clone;\n\t        parent = parent.__wrapped__;\n\t      }\n\t      previous.__wrapped__ = value;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses the wrapped array so the first element becomes the last, the\n\t     * second element becomes the second to last, and so on.\n\t     *\n\t     * **Note:** This method mutates the wrapped array.\n\t     *\n\t     * @name reverse\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {Object} Returns the new reversed `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _(array).reverse().value()\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function wrapperReverse() {\n\t      var value = this.__wrapped__;\n\t      if (value instanceof LazyWrapper) {\n\t        if (this.__actions__.length) {\n\t          value = new LazyWrapper(this);\n\t        }\n\t        return new LodashWrapper(value.reverse(), this.__chain__);\n\t      }\n\t      return this.thru(function(value) {\n\t        return value.reverse();\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Produces the result of coercing the unwrapped value to a string.\n\t     *\n\t     * @name toString\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {string} Returns the coerced string value.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3]).toString();\n\t     * // => '1,2,3'\n\t     */\n\t    function wrapperToString() {\n\t      return (this.value() + '');\n\t    }\n\t\n\t    /**\n\t     * Executes the chained sequence to extract the unwrapped value.\n\t     *\n\t     * @name value\n\t     * @memberOf _\n\t     * @alias run, toJSON, valueOf\n\t     * @category Chain\n\t     * @returns {*} Returns the resolved unwrapped value.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3]).value();\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperValue() {\n\t      return baseWrapperValue(this.__wrapped__, this.__actions__);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an array of elements corresponding to the given keys, or indexes,\n\t     * of `collection`. Keys may be specified as individual arguments or as arrays\n\t     * of keys.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {...(number|number[]|string|string[])} [props] The property names\n\t     *  or indexes of elements to pick, specified individually or in arrays.\n\t     * @returns {Array} Returns the new array of picked elements.\n\t     * @example\n\t     *\n\t     * _.at(['a', 'b', 'c'], [0, 2]);\n\t     * // => ['a', 'c']\n\t     *\n\t     * _.at(['barney', 'fred', 'pebbles'], 0, 2);\n\t     * // => ['barney', 'pebbles']\n\t     */\n\t    var at = restParam(function(collection, props) {\n\t      var length = collection ? getLength(collection) : 0;\n\t      if (isLength(length)) {\n\t        collection = toIterable(collection);\n\t      }\n\t      return baseAt(collection, baseFlatten(props));\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is the number of times the key was returned by `iteratee`.\n\t     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.countBy([4.3, 6.1, 6.4], function(n) {\n\t     *   return Math.floor(n);\n\t     * });\n\t     * // => { '4': 1, '6': 2 }\n\t     *\n\t     * _.countBy([4.3, 6.1, 6.4], function(n) {\n\t     *   return this.floor(n);\n\t     * }, Math);\n\t     * // => { '4': 1, '6': 2 }\n\t     *\n\t     * _.countBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': 2, '5': 1 }\n\t     */\n\t    var countBy = createAggregator(function(result, value, key) {\n\t      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n\t    });\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n\t     * The predicate is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias all\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.every([true, 1, null, 'yes'], Boolean);\n\t     * // => false\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'active': false },\n\t     *   { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.every(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.every(users, 'active', false);\n\t     * // => true\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.every(users, 'active');\n\t     * // => false\n\t     */\n\t    function every(collection, predicate, thisArg) {\n\t      var func = isArray(collection) ? arrayEvery : baseEvery;\n\t      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n\t        predicate = null;\n\t      }\n\t      if (typeof predicate != 'function' || thisArg !== undefined) {\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t      }\n\t      return func(collection, predicate);\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning an array of all elements\n\t     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias select\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @example\n\t     *\n\t     * _.filter([4, 5, 6], function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     * // => [4, 6]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.filter(users, 'active', false), 'user');\n\t     * // => ['fred']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.filter(users, 'active'), 'user');\n\t     * // => ['barney']\n\t     */\n\t    function filter(collection, predicate, thisArg) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      predicate = getCallback(predicate, thisArg, 3);\n\t      return func(collection, predicate);\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning the first element\n\t     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias detect\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': true },\n\t     *   { 'user': 'fred',    'age': 40, 'active': false },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n\t     * ];\n\t     *\n\t     * _.result(_.find(users, function(chr) {\n\t     *   return chr.age < 40;\n\t     * }), 'user');\n\t     * // => 'barney'\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n\t     * // => 'pebbles'\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.result(_.find(users, 'active', false), 'user');\n\t     * // => 'fred'\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.result(_.find(users, 'active'), 'user');\n\t     * // => 'barney'\n\t     */\n\t    var find = createFind(baseEach);\n\t\n\t    /**\n\t     * This method is like `_.find` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * _.findLast([1, 2, 3, 4], function(n) {\n\t     *   return n % 2 == 1;\n\t     * });\n\t     * // => 3\n\t     */\n\t    var findLast = createFind(baseEachRight, true);\n\t\n\t    /**\n\t     * Performs a deep comparison between each element in `collection` and the\n\t     * source object, returning the first element that has equivalent property\n\t     * values.\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties. For comparing a single\n\t     * own or inherited property value see `_.matchesProperty`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\n\t     * // => 'barney'\n\t     *\n\t     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\n\t     * // => 'fred'\n\t     */\n\t    function findWhere(collection, source) {\n\t      return find(collection, baseMatches(source));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection` invoking `iteratee` for each element.\n\t     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection). Iteratee functions may exit iteration early\n\t     * by explicitly returning `false`.\n\t     *\n\t     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n\t     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n\t     * may be used for object iteration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias each\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array|Object|string} Returns `collection`.\n\t     * @example\n\t     *\n\t     * _([1, 2]).forEach(function(n) {\n\t     *   console.log(n);\n\t     * }).value();\n\t     * // => logs each value from left to right and returns the array\n\t     *\n\t     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n\t     *   console.log(n, key);\n\t     * });\n\t     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n\t     */\n\t    var forEach = createForEach(arrayEach, baseEach);\n\t\n\t    /**\n\t     * This method is like `_.forEach` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias eachRight\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array|Object|string} Returns `collection`.\n\t     * @example\n\t     *\n\t     * _([1, 2]).forEachRight(function(n) {\n\t     *   console.log(n);\n\t     * }).value();\n\t     * // => logs each value from right to left and returns the array\n\t     */\n\t    var forEachRight = createForEach(arrayEachRight, baseEachRight);\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is an array of the elements responsible for generating the key.\n\t     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n\t     *   return Math.floor(n);\n\t     * });\n\t     * // => { '4': [4.2], '6': [6.1, 6.4] }\n\t     *\n\t     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n\t     *   return this.floor(n);\n\t     * }, Math);\n\t     * // => { '4': [4.2], '6': [6.1, 6.4] }\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.groupBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': ['one', 'two'], '5': ['three'] }\n\t     */\n\t    var groupBy = createAggregator(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, key)) {\n\t        result[key].push(value);\n\t      } else {\n\t        result[key] = [value];\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Checks if `value` is in `collection` using `SameValueZero` for equality\n\t     * comparisons. If `fromIndex` is negative, it is used as the offset from\n\t     * the end of `collection`.\n\t     *\n\t     * **Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n\t     * comparisons are like strict equality comparisons, e.g. `===`, except that\n\t     * `NaN` matches `NaN`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias contains, include\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {*} target The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n\t     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n\t     * @example\n\t     *\n\t     * _.includes([1, 2, 3], 1);\n\t     * // => true\n\t     *\n\t     * _.includes([1, 2, 3], 1, 2);\n\t     * // => false\n\t     *\n\t     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n\t     * // => true\n\t     *\n\t     * _.includes('pebbles', 'eb');\n\t     * // => true\n\t     */\n\t    function includes(collection, target, fromIndex, guard) {\n\t      var length = collection ? getLength(collection) : 0;\n\t      if (!isLength(length)) {\n\t        collection = values(collection);\n\t        length = collection.length;\n\t      }\n\t      if (!length) {\n\t        return false;\n\t      }\n\t      if (typeof fromIndex != 'number' || (guard && isIterateeCall(target, fromIndex, guard))) {\n\t        fromIndex = 0;\n\t      } else {\n\t        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n\t      }\n\t      return (typeof collection == 'string' || !isArray(collection) && isString(collection))\n\t        ? (fromIndex < length && collection.indexOf(target, fromIndex) > -1)\n\t        : (getIndexOf(collection, target, fromIndex) > -1);\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is the last element responsible for generating the key. The\n\t     * iteratee function is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * var keyData = [\n\t     *   { 'dir': 'left', 'code': 97 },\n\t     *   { 'dir': 'right', 'code': 100 }\n\t     * ];\n\t     *\n\t     * _.indexBy(keyData, 'dir');\n\t     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n\t     *\n\t     * _.indexBy(keyData, function(object) {\n\t     *   return String.fromCharCode(object.code);\n\t     * });\n\t     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\t     *\n\t     * _.indexBy(keyData, function(object) {\n\t     *   return this.fromCharCode(object.code);\n\t     * }, String);\n\t     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\t     */\n\t    var indexBy = createAggregator(function(result, value, key) {\n\t      result[key] = value;\n\t    });\n\t\n\t    /**\n\t     * Invokes the method at `path` on each element in `collection`, returning\n\t     * an array of the results of each invoked method. Any additional arguments\n\t     * are provided to each invoked method. If `methodName` is a function it is\n\t     * invoked for, and `this` bound to, each element in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Array|Function|string} path The path of the method to invoke or\n\t     *  the function invoked per iteration.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n\t     * // => [[1, 5, 7], [1, 2, 3]]\n\t     *\n\t     * _.invoke([123, 456], String.prototype.split, '');\n\t     * // => [['1', '2', '3'], ['4', '5', '6']]\n\t     */\n\t    var invoke = restParam(function(collection, path, args) {\n\t      var index = -1,\n\t          isFunc = typeof path == 'function',\n\t          isProp = isKey(path),\n\t          length = getLength(collection),\n\t          result = isLength(length) ? Array(length) : [];\n\t\n\t      baseEach(collection, function(value) {\n\t        var func = isFunc ? path : (isProp && value != null && value[path]);\n\t        result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);\n\t      });\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values by running each element in `collection` through\n\t     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * Many lodash methods are guarded to work as interatees for methods like\n\t     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n\t     *\n\t     * The guarded methods are:\n\t     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`, `drop`,\n\t     * `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`, `parseInt`,\n\t     * `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`, `trimLeft`,\n\t     * `trimRight`, `trunc`, `random`, `range`, `sample`, `some`, `uniq`, and `words`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias collect\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new mapped array.\n\t     * @example\n\t     *\n\t     * function timesThree(n) {\n\t     *   return n * 3;\n\t     * }\n\t     *\n\t     * _.map([1, 2], timesThree);\n\t     * // => [3, 6]\n\t     *\n\t     * _.map({ 'a': 1, 'b': 2 }, timesThree);\n\t     * // => [3, 6] (iteration order is not guaranteed)\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.map(users, 'user');\n\t     * // => ['barney', 'fred']\n\t     */\n\t    function map(collection, iteratee, thisArg) {\n\t      var func = isArray(collection) ? arrayMap : baseMap;\n\t      iteratee = getCallback(iteratee, thisArg, 3);\n\t      return func(collection, iteratee);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements split into two groups, the first of which\n\t     * contains elements `predicate` returns truthy for, while the second of which\n\t     * contains elements `predicate` returns falsey for. The predicate is bound\n\t     * to `thisArg` and invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.partition([1, 2, 3], function(n) {\n\t     *   return n % 2;\n\t     * });\n\t     * // => [[1, 3], [2]]\n\t     *\n\t     * _.partition([1.2, 2.3, 3.4], function(n) {\n\t     *   return this.floor(n) % 2;\n\t     * }, Math);\n\t     * // => [[1.2, 3.4], [2.3]]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': false },\n\t     *   { 'user': 'fred',    'age': 40, 'active': true },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n\t     * ];\n\t     *\n\t     * var mapper = function(array) {\n\t     *   return _.pluck(array, 'user');\n\t     * };\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\n\t     * // => [['pebbles'], ['barney', 'fred']]\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.map(_.partition(users, 'active', false), mapper);\n\t     * // => [['barney', 'pebbles'], ['fred']]\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.map(_.partition(users, 'active'), mapper);\n\t     * // => [['fred'], ['barney', 'pebbles']]\n\t     */\n\t    var partition = createAggregator(function(result, value, key) {\n\t      result[key ? 0 : 1].push(value);\n\t    }, function() { return [[], []]; });\n\t\n\t    /**\n\t     * Gets the property value of `path` from all elements in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Array|string} path The path of the property to pluck.\n\t     * @returns {Array} Returns the property values.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * _.pluck(users, 'user');\n\t     * // => ['barney', 'fred']\n\t     *\n\t     * var userIndex = _.indexBy(users, 'user');\n\t     * _.pluck(userIndex, 'age');\n\t     * // => [36, 40] (iteration order is not guaranteed)\n\t     */\n\t    function pluck(collection, path) {\n\t      return map(collection, property(path));\n\t    }\n\t\n\t    /**\n\t     * Reduces `collection` to a value which is the accumulated result of running\n\t     * each element in `collection` through `iteratee`, where each successive\n\t     * invocation is supplied the return value of the previous. If `accumulator`\n\t     * is not provided the first element of `collection` is used as the initial\n\t     * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:\n\t     * (accumulator, value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as interatees for methods like\n\t     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n\t     *\n\t     * The guarded methods are:\n\t     * `assign`, `defaults`, `includes`, `merge`, `sortByAll`, and `sortByOrder`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias foldl, inject\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * _.reduce([1, 2], function(total, n) {\n\t     *   return total + n;\n\t     * });\n\t     * // => 3\n\t     *\n\t     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n\t     *   result[key] = n * 3;\n\t     *   return result;\n\t     * }, {});\n\t     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\n\t     */\n\t    var reduce = createReduce(arrayReduce, baseEach);\n\t\n\t    /**\n\t     * This method is like `_.reduce` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias foldr\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * var array = [[0, 1], [2, 3], [4, 5]];\n\t     *\n\t     * _.reduceRight(array, function(flattened, other) {\n\t     *   return flattened.concat(other);\n\t     * }, []);\n\t     * // => [4, 5, 2, 3, 0, 1]\n\t     */\n\t    var reduceRight =  createReduce(arrayReduceRight, baseEachRight);\n\t\n\t    /**\n\t     * The opposite of `_.filter`; this method returns the elements of `collection`\n\t     * that `predicate` does **not** return truthy for.\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @example\n\t     *\n\t     * _.reject([1, 2, 3, 4], function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     * // => [1, 3]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   'age': 40, 'active': true }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.reject(users, 'active', false), 'user');\n\t     * // => ['fred']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.reject(users, 'active'), 'user');\n\t     * // => ['barney']\n\t     */\n\t    function reject(collection, predicate, thisArg) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      predicate = getCallback(predicate, thisArg, 3);\n\t      return func(collection, function(value, index, collection) {\n\t        return !predicate(value, index, collection);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Gets a random element or `n` random elements from a collection.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to sample.\n\t     * @param {number} [n] The number of elements to sample.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {*} Returns the random sample(s).\n\t     * @example\n\t     *\n\t     * _.sample([1, 2, 3, 4]);\n\t     * // => 2\n\t     *\n\t     * _.sample([1, 2, 3, 4], 2);\n\t     * // => [3, 1]\n\t     */\n\t    function sample(collection, n, guard) {\n\t      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n\t        collection = toIterable(collection);\n\t        var length = collection.length;\n\t        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n\t      }\n\t      var result = shuffle(collection);\n\t      result.length = nativeMin(n < 0 ? 0 : (+n || 0), result.length);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of shuffled values, using a version of the\n\t     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to shuffle.\n\t     * @returns {Array} Returns the new shuffled array.\n\t     * @example\n\t     *\n\t     * _.shuffle([1, 2, 3, 4]);\n\t     * // => [4, 1, 3, 2]\n\t     */\n\t    function shuffle(collection) {\n\t      collection = toIterable(collection);\n\t\n\t      var index = -1,\n\t          length = collection.length,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        var rand = baseRandom(0, index);\n\t        if (index != rand) {\n\t          result[index] = result[rand];\n\t        }\n\t        result[rand] = collection[index];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the size of `collection` by returning its length for array-like\n\t     * values or the number of own enumerable properties for objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to inspect.\n\t     * @returns {number} Returns the size of `collection`.\n\t     * @example\n\t     *\n\t     * _.size([1, 2, 3]);\n\t     * // => 3\n\t     *\n\t     * _.size({ 'a': 1, 'b': 2 });\n\t     * // => 2\n\t     *\n\t     * _.size('pebbles');\n\t     * // => 7\n\t     */\n\t    function size(collection) {\n\t      var length = collection ? getLength(collection) : 0;\n\t      return isLength(length) ? length : keys(collection).length;\n\t    }\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **any** element of `collection`.\n\t     * The function returns as soon as it finds a passing value and does not iterate\n\t     * over the entire collection. The predicate is bound to `thisArg` and invoked\n\t     * with three arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias any\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.some([null, 0, 'yes', false], Boolean);\n\t     * // => true\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'active': true },\n\t     *   { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.some(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.some(users, 'active', false);\n\t     * // => true\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.some(users, 'active');\n\t     * // => true\n\t     */\n\t    function some(collection, predicate, thisArg) {\n\t      var func = isArray(collection) ? arraySome : baseSome;\n\t      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n\t        predicate = null;\n\t      }\n\t      if (typeof predicate != 'function' || thisArg !== undefined) {\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t      }\n\t      return func(collection, predicate);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements, sorted in ascending order by the results of\n\t     * running each element in a collection through `iteratee`. This method performs\n\t     * a stable sort, that is, it preserves the original sort order of equal elements.\n\t     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * _.sortBy([1, 2, 3], function(n) {\n\t     *   return Math.sin(n);\n\t     * });\n\t     * // => [3, 1, 2]\n\t     *\n\t     * _.sortBy([1, 2, 3], function(n) {\n\t     *   return this.sin(n);\n\t     * }, Math);\n\t     * // => [3, 1, 2]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred' },\n\t     *   { 'user': 'pebbles' },\n\t     *   { 'user': 'barney' }\n\t     * ];\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.sortBy(users, 'user'), 'user');\n\t     * // => ['barney', 'fred', 'pebbles']\n\t     */\n\t    function sortBy(collection, iteratee, thisArg) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n\t        iteratee = null;\n\t      }\n\t      var index = -1;\n\t      iteratee = getCallback(iteratee, thisArg, 3);\n\t\n\t      var result = baseMap(collection, function(value, key, collection) {\n\t        return { 'criteria': iteratee(value, key, collection), 'index': ++index, 'value': value };\n\t      });\n\t      return baseSortBy(result, compareAscending);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortBy` except that it can sort by multiple iteratees\n\t     * or property names.\n\t     *\n\t     * If a property name is provided for an iteratee the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for an iteratee the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {...(Function|Function[]|Object|Object[]|string|string[])} iteratees\n\t     *  The iteratees to sort by, specified as individual values or arrays of values.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 42 },\n\t     *   { 'user': 'barney', 'age': 34 }\n\t     * ];\n\t     *\n\t     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n\t     * // => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n\t     *\n\t     * _.map(_.sortByAll(users, 'user', function(chr) {\n\t     *   return Math.floor(chr.age / 10);\n\t     * }), _.values);\n\t     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n\t     */\n\t    var sortByAll = restParam(function(collection, iteratees) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      var guard = iteratees[2];\n\t      if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) {\n\t        iteratees.length = 1;\n\t      }\n\t      return baseSortByOrder(collection, baseFlatten(iteratees), []);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.sortByAll` except that it allows specifying the\n\t     * sort orders of the iteratees to sort by. A truthy value in `orders` will\n\t     * sort the corresponding property name in ascending order while a falsey\n\t     * value will sort it in descending order.\n\t     *\n\t     * If a property name is provided for an iteratee the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for an iteratee the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n\t     * @param {boolean[]} orders The sort orders of `iteratees`.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 34 },\n\t     *   { 'user': 'fred',   'age': 42 },\n\t     *   { 'user': 'barney', 'age': 36 }\n\t     * ];\n\t     *\n\t     * // sort by `user` in ascending order and by `age` in descending order\n\t     * _.map(_.sortByOrder(users, ['user', 'age'], [true, false]), _.values);\n\t     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n\t     */\n\t    function sortByOrder(collection, iteratees, orders, guard) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      if (guard && isIterateeCall(iteratees, orders, guard)) {\n\t        orders = null;\n\t      }\n\t      if (!isArray(iteratees)) {\n\t        iteratees = iteratees == null ? [] : [iteratees];\n\t      }\n\t      if (!isArray(orders)) {\n\t        orders = orders == null ? [] : [orders];\n\t      }\n\t      return baseSortByOrder(collection, iteratees, orders);\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between each element in `collection` and the\n\t     * source object, returning an array of all elements that have equivalent\n\t     * property values.\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties. For comparing a single\n\t     * own or inherited property value see `_.matchesProperty`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n\t     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n\t     * ];\n\t     *\n\t     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n\t     * // => ['fred']\n\t     */\n\t    function where(collection, source) {\n\t      return filter(collection, baseMatches(source));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Gets the number of milliseconds that have elapsed since the Unix epoch\n\t     * (1 January 1970 00:00:00 UTC).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Date\n\t     * @example\n\t     *\n\t     * _.defer(function(stamp) {\n\t     *   console.log(_.now() - stamp);\n\t     * }, _.now());\n\t     * // => logs the number of milliseconds it took for the deferred function to be invoked\n\t     */\n\t    var now = nativeNow || function() {\n\t      return new Date().getTime();\n\t    };\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The opposite of `_.before`; this method creates a function that invokes\n\t     * `func` once it is called `n` or more times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {number} n The number of calls before `func` is invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var saves = ['profile', 'settings'];\n\t     *\n\t     * var done = _.after(saves.length, function() {\n\t     *   console.log('done saving!');\n\t     * });\n\t     *\n\t     * _.forEach(saves, function(type) {\n\t     *   asyncSave({ 'type': type, 'complete': done });\n\t     * });\n\t     * // => logs 'done saving!' after the two async saves have completed\n\t     */\n\t    function after(n, func) {\n\t      if (typeof func != 'function') {\n\t        if (typeof n == 'function') {\n\t          var temp = n;\n\t          n = func;\n\t          func = temp;\n\t        } else {\n\t          throw new TypeError(FUNC_ERROR_TEXT);\n\t        }\n\t      }\n\t      n = nativeIsFinite(n = +n) ? n : 0;\n\t      return function() {\n\t        if (--n < 1) {\n\t          return func.apply(this, arguments);\n\t        }\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that accepts up to `n` arguments ignoring any\n\t     * additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @param {number} [n=func.length] The arity cap.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function ary(func, n, guard) {\n\t      if (guard && isIterateeCall(func, n, guard)) {\n\t        n = null;\n\t      }\n\t      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);\n\t      return createWrapper(func, ARY_FLAG, null, null, null, null, n);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func`, with the `this` binding and arguments\n\t     * of the created function, while it is called less than `n` times. Subsequent\n\t     * calls to the created function return the result of the last `func` invocation.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {number} n The number of calls at which `func` is no longer invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * jQuery('#add').on('click', _.before(5, addContactToList));\n\t     * // => allows adding up to 4 contacts to the list\n\t     */\n\t    function before(n, func) {\n\t      var result;\n\t      if (typeof func != 'function') {\n\t        if (typeof n == 'function') {\n\t          var temp = n;\n\t          n = func;\n\t          func = temp;\n\t        } else {\n\t          throw new TypeError(FUNC_ERROR_TEXT);\n\t        }\n\t      }\n\t      return function() {\n\t        if (--n > 0) {\n\t          result = func.apply(this, arguments);\n\t        }\n\t        if (n <= 1) {\n\t          func = null;\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n\t     * and prepends any additional `_.bind` arguments to those provided to the\n\t     * bound function.\n\t     *\n\t     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** Unlike native `Function#bind` this method does not set the \"length\"\n\t     * property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, punctuation) {\n\t     *   return greeting + ' ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * var bound = _.bind(greet, object, 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * // using placeholders\n\t     * var bound = _.bind(greet, object, _, '!');\n\t     * bound('hi');\n\t     * // => 'hi fred!'\n\t     */\n\t    var bind = restParam(function(func, thisArg, partials) {\n\t      var bitmask = BIND_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, bind.placeholder);\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrapper(func, bitmask, thisArg, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Binds methods of an object to the object itself, overwriting the existing\n\t     * method. Method names may be specified as individual arguments or as arrays\n\t     * of method names. If no method names are provided all enumerable function\n\t     * properties, own and inherited, of `object` are bound.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Object} object The object to bind and assign the bound methods to.\n\t     * @param {...(string|string[])} [methodNames] The object method names to bind,\n\t     *  specified as individual method names or arrays of method names.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var view = {\n\t     *   'label': 'docs',\n\t     *   'onClick': function() {\n\t     *     console.log('clicked ' + this.label);\n\t     *   }\n\t     * };\n\t     *\n\t     * _.bindAll(view);\n\t     * jQuery('#docs').on('click', view.onClick);\n\t     * // => logs 'clicked docs' when the element is clicked\n\t     */\n\t    var bindAll = restParam(function(object, methodNames) {\n\t      methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);\n\t\n\t      var index = -1,\n\t          length = methodNames.length;\n\t\n\t      while (++index < length) {\n\t        var key = methodNames[index];\n\t        object[key] = createWrapper(object[key], BIND_FLAG, object);\n\t      }\n\t      return object;\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `object[key]` and prepends\n\t     * any additional `_.bindKey` arguments to those provided to the bound function.\n\t     *\n\t     * This method differs from `_.bind` by allowing bound functions to reference\n\t     * methods that may be redefined or don't yet exist.\n\t     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n\t     * for more details.\n\t     *\n\t     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Object} object The object the method belongs to.\n\t     * @param {string} key The key of the method.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var object = {\n\t     *   'user': 'fred',\n\t     *   'greet': function(greeting, punctuation) {\n\t     *     return greeting + ' ' + this.user + punctuation;\n\t     *   }\n\t     * };\n\t     *\n\t     * var bound = _.bindKey(object, 'greet', 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * object.greet = function(greeting, punctuation) {\n\t     *   return greeting + 'ya ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * bound('!');\n\t     * // => 'hiya fred!'\n\t     *\n\t     * // using placeholders\n\t     * var bound = _.bindKey(object, 'greet', _, '!');\n\t     * bound('hi');\n\t     * // => 'hiya fred!'\n\t     */\n\t    var bindKey = restParam(function(object, key, partials) {\n\t      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, bindKey.placeholder);\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrapper(key, bitmask, object, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that accepts one or more arguments of `func` that when\n\t     * called either invokes `func` returning its result, if all `func` arguments\n\t     * have been provided, or returns a function that accepts one or more of the\n\t     * remaining `func` arguments, and so on. The arity of `func` may be specified\n\t     * if `func.length` is not sufficient.\n\t     *\n\t     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curry(abc);\n\t     *\n\t     * curried(1)(2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // using placeholders\n\t     * curried(1)(_, 3)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    var curry = createCurry(CURRY_FLAG);\n\t\n\t    /**\n\t     * This method is like `_.curry` except that arguments are applied to `func`\n\t     * in the manner of `_.partialRight` instead of `_.partial`.\n\t     *\n\t     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curryRight(abc);\n\t     *\n\t     * curried(3)(2)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(2, 3)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // using placeholders\n\t     * curried(3)(1, _)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    var curryRight = createCurry(CURRY_RIGHT_FLAG);\n\t\n\t    /**\n\t     * Creates a function that delays invoking `func` until after `wait` milliseconds\n\t     * have elapsed since the last time it was invoked. The created function comes\n\t     * with a `cancel` method to cancel delayed invocations. Provide an options\n\t     * object to indicate that `func` should be invoked on the leading and/or\n\t     * trailing edge of the `wait` timeout. Subsequent calls to the debounced\n\t     * function return the result of the last `func` invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n\t     * on the trailing edge of the timeout only if the the debounced function is\n\t     * invoked more than once during the `wait` timeout.\n\t     *\n\t     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n\t     * for details over the differences between `_.debounce` and `_.throttle`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to debounce.\n\t     * @param {number} [wait=0] The number of milliseconds to delay.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.leading=false] Specify invoking on the leading\n\t     *  edge of the timeout.\n\t     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n\t     *  delayed before it is invoked.\n\t     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n\t     *  edge of the timeout.\n\t     * @returns {Function} Returns the new debounced function.\n\t     * @example\n\t     *\n\t     * // avoid costly calculations while the window size is in flux\n\t     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n\t     *\n\t     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n\t     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n\t     *   'leading': true,\n\t     *   'trailing': false\n\t     * }));\n\t     *\n\t     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n\t     * var source = new EventSource('/stream');\n\t     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n\t     *   'maxWait': 1000\n\t     * }));\n\t     *\n\t     * // cancel a debounced call\n\t     * var todoChanges = _.debounce(batchLog, 1000);\n\t     * Object.observe(models.todo, todoChanges);\n\t     *\n\t     * Object.observe(models, function(changes) {\n\t     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n\t     *     todoChanges.cancel();\n\t     *   }\n\t     * }, ['delete']);\n\t     *\n\t     * // ...at some point `models.todo` is changed\n\t     * models.todo.completed = true;\n\t     *\n\t     * // ...before 1 second has passed `models.todo` is deleted\n\t     * // which cancels the debounced `todoChanges` call\n\t     * delete models.todo;\n\t     */\n\t    function debounce(func, wait, options) {\n\t      var args,\n\t          maxTimeoutId,\n\t          result,\n\t          stamp,\n\t          thisArg,\n\t          timeoutId,\n\t          trailingCall,\n\t          lastCalled = 0,\n\t          maxWait = false,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      wait = wait < 0 ? 0 : (+wait || 0);\n\t      if (options === true) {\n\t        var leading = true;\n\t        trailing = false;\n\t      } else if (isObject(options)) {\n\t        leading = options.leading;\n\t        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n\t        trailing = 'trailing' in options ? options.trailing : trailing;\n\t      }\n\t\n\t      function cancel() {\n\t        if (timeoutId) {\n\t          clearTimeout(timeoutId);\n\t        }\n\t        if (maxTimeoutId) {\n\t          clearTimeout(maxTimeoutId);\n\t        }\n\t        maxTimeoutId = timeoutId = trailingCall = undefined;\n\t      }\n\t\n\t      function delayed() {\n\t        var remaining = wait - (now() - stamp);\n\t        if (remaining <= 0 || remaining > wait) {\n\t          if (maxTimeoutId) {\n\t            clearTimeout(maxTimeoutId);\n\t          }\n\t          var isCalled = trailingCall;\n\t          maxTimeoutId = timeoutId = trailingCall = undefined;\n\t          if (isCalled) {\n\t            lastCalled = now();\n\t            result = func.apply(thisArg, args);\n\t            if (!timeoutId && !maxTimeoutId) {\n\t              args = thisArg = null;\n\t            }\n\t          }\n\t        } else {\n\t          timeoutId = setTimeout(delayed, remaining);\n\t        }\n\t      }\n\t\n\t      function maxDelayed() {\n\t        if (timeoutId) {\n\t          clearTimeout(timeoutId);\n\t        }\n\t        maxTimeoutId = timeoutId = trailingCall = undefined;\n\t        if (trailing || (maxWait !== wait)) {\n\t          lastCalled = now();\n\t          result = func.apply(thisArg, args);\n\t          if (!timeoutId && !maxTimeoutId) {\n\t            args = thisArg = null;\n\t          }\n\t        }\n\t      }\n\t\n\t      function debounced() {\n\t        args = arguments;\n\t        stamp = now();\n\t        thisArg = this;\n\t        trailingCall = trailing && (timeoutId || !leading);\n\t\n\t        if (maxWait === false) {\n\t          var leadingCall = leading && !timeoutId;\n\t        } else {\n\t          if (!maxTimeoutId && !leading) {\n\t            lastCalled = stamp;\n\t          }\n\t          var remaining = maxWait - (stamp - lastCalled),\n\t              isCalled = remaining <= 0 || remaining > maxWait;\n\t\n\t          if (isCalled) {\n\t            if (maxTimeoutId) {\n\t              maxTimeoutId = clearTimeout(maxTimeoutId);\n\t            }\n\t            lastCalled = stamp;\n\t            result = func.apply(thisArg, args);\n\t          }\n\t          else if (!maxTimeoutId) {\n\t            maxTimeoutId = setTimeout(maxDelayed, remaining);\n\t          }\n\t        }\n\t        if (isCalled && timeoutId) {\n\t          timeoutId = clearTimeout(timeoutId);\n\t        }\n\t        else if (!timeoutId && wait !== maxWait) {\n\t          timeoutId = setTimeout(delayed, wait);\n\t        }\n\t        if (leadingCall) {\n\t          isCalled = true;\n\t          result = func.apply(thisArg, args);\n\t        }\n\t        if (isCalled && !timeoutId && !maxTimeoutId) {\n\t          args = thisArg = null;\n\t        }\n\t        return result;\n\t      }\n\t      debounced.cancel = cancel;\n\t      return debounced;\n\t    }\n\t\n\t    /**\n\t     * Defers invoking the `func` until the current call stack has cleared. Any\n\t     * additional arguments are provided to `func` when it is invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to defer.\n\t     * @param {...*} [args] The arguments to invoke the function with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.defer(function(text) {\n\t     *   console.log(text);\n\t     * }, 'deferred');\n\t     * // logs 'deferred' after one or more milliseconds\n\t     */\n\t    var defer = restParam(function(func, args) {\n\t      return baseDelay(func, 1, args);\n\t    });\n\t\n\t    /**\n\t     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n\t     * provided to `func` when it is invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {...*} [args] The arguments to invoke the function with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.delay(function(text) {\n\t     *   console.log(text);\n\t     * }, 1000, 'later');\n\t     * // => logs 'later' after one second\n\t     */\n\t    var delay = restParam(function(func, wait, args) {\n\t      return baseDelay(func, wait, args);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that returns the result of invoking the provided\n\t     * functions with the `this` binding of the created function, where each\n\t     * successive invocation is supplied the return value of the previous.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {...Function} [funcs] Functions to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flow(_.add, square);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flow = createFlow();\n\t\n\t    /**\n\t     * This method is like `_.flow` except that it creates a function that\n\t     * invokes the provided functions from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias backflow, compose\n\t     * @category Function\n\t     * @param {...Function} [funcs] Functions to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flowRight(square, _.add);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flowRight = createFlow(true);\n\t\n\t    /**\n\t     * Creates a function that memoizes the result of `func`. If `resolver` is\n\t     * provided it determines the cache key for storing the result based on the\n\t     * arguments provided to the memoized function. By default, the first argument\n\t     * provided to the memoized function is coerced to a string and used as the\n\t     * cache key. The `func` is invoked with the `this` binding of the memoized\n\t     * function.\n\t     *\n\t     * **Note:** The cache is exposed as the `cache` property on the memoized\n\t     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n\t     * constructor with one whose instances implement the [`Map`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-properties-of-the-map-prototype-object)\n\t     * method interface of `get`, `has`, and `set`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to have its output memoized.\n\t     * @param {Function} [resolver] The function to resolve the cache key.\n\t     * @returns {Function} Returns the new memoizing function.\n\t     * @example\n\t     *\n\t     * var upperCase = _.memoize(function(string) {\n\t     *   return string.toUpperCase();\n\t     * });\n\t     *\n\t     * upperCase('fred');\n\t     * // => 'FRED'\n\t     *\n\t     * // modifying the result cache\n\t     * upperCase.cache.set('fred', 'BARNEY');\n\t     * upperCase('fred');\n\t     * // => 'BARNEY'\n\t     *\n\t     * // replacing `_.memoize.Cache`\n\t     * var object = { 'user': 'fred' };\n\t     * var other = { 'user': 'barney' };\n\t     * var identity = _.memoize(_.identity);\n\t     *\n\t     * identity(object);\n\t     * // => { 'user': 'fred' }\n\t     * identity(other);\n\t     * // => { 'user': 'fred' }\n\t     *\n\t     * _.memoize.Cache = WeakMap;\n\t     * var identity = _.memoize(_.identity);\n\t     *\n\t     * identity(object);\n\t     * // => { 'user': 'fred' }\n\t     * identity(other);\n\t     * // => { 'user': 'barney' }\n\t     */\n\t    function memoize(func, resolver) {\n\t      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var memoized = function() {\n\t        var args = arguments,\n\t            cache = memoized.cache,\n\t            key = resolver ? resolver.apply(this, args) : args[0];\n\t\n\t        if (cache.has(key)) {\n\t          return cache.get(key);\n\t        }\n\t        var result = func.apply(this, args);\n\t        cache.set(key, result);\n\t        return result;\n\t      };\n\t      memoized.cache = new memoize.Cache;\n\t      return memoized;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that negates the result of the predicate `func`. The\n\t     * `func` predicate is invoked with the `this` binding and arguments of the\n\t     * created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} predicate The predicate to negate.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function isEven(n) {\n\t     *   return n % 2 == 0;\n\t     * }\n\t     *\n\t     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n\t     * // => [1, 3, 5]\n\t     */\n\t    function negate(predicate) {\n\t      if (typeof predicate != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return function() {\n\t        return !predicate.apply(this, arguments);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that is restricted to invoking `func` once. Repeat calls\n\t     * to the function return the value of the first call. The `func` is invoked\n\t     * with the `this` binding and arguments of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var initialize = _.once(createApplication);\n\t     * initialize();\n\t     * initialize();\n\t     * // `initialize` invokes `createApplication` once\n\t     */\n\t    function once(func) {\n\t      return before(2, func);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with `partial` arguments prepended\n\t     * to those provided to the new function. This method is like `_.bind` except\n\t     * it does **not** alter the `this` binding.\n\t     *\n\t     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * };\n\t     *\n\t     * var sayHelloTo = _.partial(greet, 'hello');\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     *\n\t     * // using placeholders\n\t     * var greetFred = _.partial(greet, _, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     */\n\t    var partial = createPartial(PARTIAL_FLAG);\n\t\n\t    /**\n\t     * This method is like `_.partial` except that partially applied arguments\n\t     * are appended to those provided to the new function.\n\t     *\n\t     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * };\n\t     *\n\t     * var greetFred = _.partialRight(greet, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     *\n\t     * // using placeholders\n\t     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     */\n\t    var partialRight = createPartial(PARTIAL_RIGHT_FLAG);\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments arranged according\n\t     * to the specified indexes where the argument value at the first index is\n\t     * provided as the first argument, the argument value at the second index is\n\t     * provided as the second argument, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to rearrange arguments for.\n\t     * @param {...(number|number[])} indexes The arranged argument indexes,\n\t     *  specified as individual indexes or arrays of indexes.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var rearged = _.rearg(function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * }, 2, 0, 1);\n\t     *\n\t     * rearged('b', 'c', 'a')\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * var map = _.rearg(_.map, [1, 0]);\n\t     * map(function(n) {\n\t     *   return n * 3;\n\t     * }, [1, 2, 3]);\n\t     * // => [3, 6, 9]\n\t     */\n\t    var rearg = restParam(function(func, indexes) {\n\t      return createWrapper(func, REARG_FLAG, null, null, null, baseFlatten(indexes));\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the\n\t     * created function and arguments from `start` and beyond provided as an array.\n\t     *\n\t     * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.restParam(function(what, names) {\n\t     *   return what + ' ' + _.initial(names).join(', ') +\n\t     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n\t     * });\n\t     *\n\t     * say('hello', 'fred', 'barney', 'pebbles');\n\t     * // => 'hello fred, barney, & pebbles'\n\t     */\n\t    function restParam(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n\t      return function() {\n\t        var args = arguments,\n\t            index = -1,\n\t            length = nativeMax(args.length - start, 0),\n\t            rest = Array(length);\n\t\n\t        while (++index < length) {\n\t          rest[index] = args[start + index];\n\t        }\n\t        switch (start) {\n\t          case 0: return func.call(this, rest);\n\t          case 1: return func.call(this, args[0], rest);\n\t          case 2: return func.call(this, args[0], args[1], rest);\n\t        }\n\t        var otherArgs = Array(start + 1);\n\t        index = -1;\n\t        while (++index < start) {\n\t          otherArgs[index] = args[index];\n\t        }\n\t        otherArgs[start] = rest;\n\t        return func.apply(this, otherArgs);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the created\n\t     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n\t     *\n\t     * **Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to spread arguments over.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.spread(function(who, what) {\n\t     *   return who + ' says ' + what;\n\t     * });\n\t     *\n\t     * say(['fred', 'hello']);\n\t     * // => 'fred says hello'\n\t     *\n\t     * // with a Promise\n\t     * var numbers = Promise.all([\n\t     *   Promise.resolve(40),\n\t     *   Promise.resolve(36)\n\t     * ]);\n\t     *\n\t     * numbers.then(_.spread(function(x, y) {\n\t     *   return x + y;\n\t     * }));\n\t     * // => a Promise of 76\n\t     */\n\t    function spread(func) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return function(array) {\n\t        return func.apply(this, array);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that only invokes `func` at most once per every `wait`\n\t     * milliseconds. The created function comes with a `cancel` method to cancel\n\t     * delayed invocations. Provide an options object to indicate that `func`\n\t     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n\t     * Subsequent calls to the throttled function return the result of the last\n\t     * `func` call.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n\t     * on the trailing edge of the timeout only if the the throttled function is\n\t     * invoked more than once during the `wait` timeout.\n\t     *\n\t     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n\t     * for details over the differences between `_.throttle` and `_.debounce`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to throttle.\n\t     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.leading=true] Specify invoking on the leading\n\t     *  edge of the timeout.\n\t     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n\t     *  edge of the timeout.\n\t     * @returns {Function} Returns the new throttled function.\n\t     * @example\n\t     *\n\t     * // avoid excessively updating the position while scrolling\n\t     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n\t     *\n\t     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n\t     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n\t     *   'trailing': false\n\t     * }));\n\t     *\n\t     * // cancel a trailing throttled call\n\t     * jQuery(window).on('popstate', throttled.cancel);\n\t     */\n\t    function throttle(func, wait, options) {\n\t      var leading = true,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      if (options === false) {\n\t        leading = false;\n\t      } else if (isObject(options)) {\n\t        leading = 'leading' in options ? !!options.leading : leading;\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t      debounceOptions.leading = leading;\n\t      debounceOptions.maxWait = +wait;\n\t      debounceOptions.trailing = trailing;\n\t      return debounce(func, wait, debounceOptions);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that provides `value` to the wrapper function as its\n\t     * first argument. Any additional arguments provided to the function are\n\t     * appended to those provided to the wrapper function. The wrapper is invoked\n\t     * with the `this` binding of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {*} value The value to wrap.\n\t     * @param {Function} wrapper The wrapper function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var p = _.wrap(_.escape, function(func, text) {\n\t     *   return '<p>' + func(text) + '</p>';\n\t     * });\n\t     *\n\t     * p('fred, barney, & pebbles');\n\t     * // => '<p>fred, barney, &amp; pebbles</p>'\n\t     */\n\t    function wrap(value, wrapper) {\n\t      wrapper = wrapper == null ? identity : wrapper;\n\t      return createWrapper(wrapper, PARTIAL_FLAG, null, [value], []);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n\t     * otherwise they are assigned by reference. If `customizer` is provided it is\n\t     * invoked to produce the cloned values. If `customizer` returns `undefined`\n\t     * cloning is handled by the method instead. The `customizer` is bound to\n\t     * `thisArg` and invoked with two argument; (value [, index|key, object]).\n\t     *\n\t     * **Note:** This method is loosely based on the\n\t     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n\t     * The enumerable properties of `arguments` objects and objects created by\n\t     * constructors other than `Object` are cloned to plain `Object` objects. An\n\t     * empty object is returned for uncloneable values such as functions, DOM nodes,\n\t     * Maps, Sets, and WeakMaps.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @param {Function} [customizer] The function to customize cloning values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {*} Returns the cloned value.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * var shallow = _.clone(users);\n\t     * shallow[0] === users[0];\n\t     * // => true\n\t     *\n\t     * var deep = _.clone(users, true);\n\t     * deep[0] === users[0];\n\t     * // => false\n\t     *\n\t     * // using a customizer callback\n\t     * var el = _.clone(document.body, function(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(false);\n\t     *   }\n\t     * });\n\t     *\n\t     * el === document.body\n\t     * // => false\n\t     * el.nodeName\n\t     * // => BODY\n\t     * el.childNodes.length;\n\t     * // => 0\n\t     */\n\t    function clone(value, isDeep, customizer, thisArg) {\n\t      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n\t        isDeep = false;\n\t      }\n\t      else if (typeof isDeep == 'function') {\n\t        thisArg = customizer;\n\t        customizer = isDeep;\n\t        isDeep = false;\n\t      }\n\t      customizer = typeof customizer == 'function' && bindCallback(customizer, thisArg, 1);\n\t      return baseClone(value, isDeep, customizer);\n\t    }\n\t\n\t    /**\n\t     * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n\t     * to produce the cloned values. If `customizer` returns `undefined` cloning\n\t     * is handled by the method instead. The `customizer` is bound to `thisArg`\n\t     * and invoked with two argument; (value [, index|key, object]).\n\t     *\n\t     * **Note:** This method is loosely based on the\n\t     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n\t     * The enumerable properties of `arguments` objects and objects created by\n\t     * constructors other than `Object` are cloned to plain `Object` objects. An\n\t     * empty object is returned for uncloneable values such as functions, DOM nodes,\n\t     * Maps, Sets, and WeakMaps.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to deep clone.\n\t     * @param {Function} [customizer] The function to customize cloning values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * var deep = _.cloneDeep(users);\n\t     * deep[0] === users[0];\n\t     * // => false\n\t     *\n\t     * // using a customizer callback\n\t     * var el = _.cloneDeep(document.body, function(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(true);\n\t     *   }\n\t     * });\n\t     *\n\t     * el === document.body\n\t     * // => false\n\t     * el.nodeName\n\t     * // => BODY\n\t     * el.childNodes.length;\n\t     * // => 20\n\t     */\n\t    function cloneDeep(value, customizer, thisArg) {\n\t      customizer = typeof customizer == 'function' && bindCallback(customizer, thisArg, 1);\n\t      return baseClone(value, true, customizer);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `arguments` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArguments(function() { return arguments; }());\n\t     * // => true\n\t     *\n\t     * _.isArguments([1, 2, 3]);\n\t     * // => false\n\t     */\n\t    function isArguments(value) {\n\t      var length = isObjectLike(value) ? value.length : undefined;\n\t      return isLength(length) && objToString.call(value) == argsTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `Array` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArray([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArray(function() { return arguments; }());\n\t     * // => false\n\t     */\n\t    var isArray = nativeIsArray || function(value) {\n\t      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n\t    };\n\t\n\t    /**\n\t     * Checks if `value` is classified as a boolean primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isBoolean(false);\n\t     * // => true\n\t     *\n\t     * _.isBoolean(null);\n\t     * // => false\n\t     */\n\t    function isBoolean(value) {\n\t      return value === true || value === false || (isObjectLike(value) && objToString.call(value) == boolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Date` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isDate(new Date);\n\t     * // => true\n\t     *\n\t     * _.isDate('Mon April 23 2012');\n\t     * // => false\n\t     */\n\t    function isDate(value) {\n\t      return isObjectLike(value) && objToString.call(value) == dateTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a DOM element.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n\t     * @example\n\t     *\n\t     * _.isElement(document.body);\n\t     * // => true\n\t     *\n\t     * _.isElement('<body>');\n\t     * // => false\n\t     */\n\t    function isElement(value) {\n\t      return !!value && value.nodeType === 1 && isObjectLike(value) &&\n\t        (objToString.call(value).indexOf('Element') > -1);\n\t    }\n\t    // Fallback for environments without DOM support.\n\t    if (!support.dom) {\n\t      isElement = function(value) {\n\t        return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is empty. A value is considered empty unless it is an\n\t     * `arguments` object, array, string, or jQuery-like collection with a length\n\t     * greater than `0` or an object with own enumerable properties.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {Array|Object|string} value The value to inspect.\n\t     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n\t     * @example\n\t     *\n\t     * _.isEmpty(null);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(true);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(1);\n\t     * // => true\n\t     *\n\t     * _.isEmpty([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isEmpty({ 'a': 1 });\n\t     * // => false\n\t     */\n\t    function isEmpty(value) {\n\t      if (value == null) {\n\t        return true;\n\t      }\n\t      var length = getLength(value);\n\t      if (isLength(length) && (isArray(value) || isString(value) || isArguments(value) ||\n\t          (isObjectLike(value) && isFunction(value.splice)))) {\n\t        return !length;\n\t      }\n\t      return !keys(value).length;\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between two values to determine if they are\n\t     * equivalent. If `customizer` is provided it is invoked to compare values.\n\t     * If `customizer` returns `undefined` comparisons are handled by the method\n\t     * instead. The `customizer` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, other [, index|key]).\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties. Functions and DOM nodes\n\t     * are **not** supported. Provide a customizer function to extend support\n\t     * for comparing other values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize value comparisons.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var other = { 'user': 'fred' };\n\t     *\n\t     * object == other;\n\t     * // => false\n\t     *\n\t     * _.isEqual(object, other);\n\t     * // => true\n\t     *\n\t     * // using a customizer callback\n\t     * var array = ['hello', 'goodbye'];\n\t     * var other = ['hi', 'goodbye'];\n\t     *\n\t     * _.isEqual(array, other, function(value, other) {\n\t     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n\t     *     return true;\n\t     *   }\n\t     * });\n\t     * // => true\n\t     */\n\t    function isEqual(value, other, customizer, thisArg) {\n\t      customizer = typeof customizer == 'function' && bindCallback(customizer, thisArg, 3);\n\t      if (!customizer && isStrictComparable(value) && isStrictComparable(other)) {\n\t        return value === other;\n\t      }\n\t      var result = customizer ? customizer(value, other) : undefined;\n\t      return result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n\t     * `SyntaxError`, `TypeError`, or `URIError` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isError(new Error);\n\t     * // => true\n\t     *\n\t     * _.isError(Error);\n\t     * // => false\n\t     */\n\t    function isError(value) {\n\t      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a finite primitive number.\n\t     *\n\t     * **Note:** This method is based on [`Number.isFinite`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isfinite).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFinite(10);\n\t     * // => true\n\t     *\n\t     * _.isFinite('10');\n\t     * // => false\n\t     *\n\t     * _.isFinite(true);\n\t     * // => false\n\t     *\n\t     * _.isFinite(Object(10));\n\t     * // => false\n\t     *\n\t     * _.isFinite(Infinity);\n\t     * // => false\n\t     */\n\t    var isFinite = nativeNumIsFinite || function(value) {\n\t      return typeof value == 'number' && nativeIsFinite(value);\n\t    };\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Function` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFunction(_);\n\t     * // => true\n\t     *\n\t     * _.isFunction(/abc/);\n\t     * // => false\n\t     */\n\t    var isFunction = !(baseIsFunction(/x/) || (Uint8Array && !baseIsFunction(Uint8Array))) ? baseIsFunction : function(value) {\n\t      // The use of `Object#toString` avoids issues with the `typeof` operator\n\t      // in older versions of Chrome and Safari which return 'function' for regexes\n\t      // and Safari 8 equivalents which return 'object' for typed array constructors.\n\t      return objToString.call(value) == funcTag;\n\t    };\n\t\n\t    /**\n\t     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n\t     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObject({});\n\t     * // => true\n\t     *\n\t     * _.isObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObject(1);\n\t     * // => false\n\t     */\n\t    function isObject(value) {\n\t      // Avoid a V8 JIT bug in Chrome 19-20.\n\t      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n\t      var type = typeof value;\n\t      return type == 'function' || (!!value && type == 'object');\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between `object` and `source` to determine if\n\t     * `object` contains equivalent property values. If `customizer` is provided\n\t     * it is invoked to compare values. If `customizer` returns `undefined`\n\t     * comparisons are handled by the method instead. The `customizer` is bound\n\t     * to `thisArg` and invoked with three arguments: (value, other, index|key).\n\t     *\n\t     * **Note:** This method supports comparing properties of arrays, booleans,\n\t     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n\t     * and DOM nodes are **not** supported. Provide a customizer function to extend\n\t     * support for comparing other values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Function} [customizer] The function to customize value comparisons.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred', 'age': 40 };\n\t     *\n\t     * _.isMatch(object, { 'age': 40 });\n\t     * // => true\n\t     *\n\t     * _.isMatch(object, { 'age': 36 });\n\t     * // => false\n\t     *\n\t     * // using a customizer callback\n\t     * var object = { 'greeting': 'hello' };\n\t     * var source = { 'greeting': 'hi' };\n\t     *\n\t     * _.isMatch(object, source, function(value, other) {\n\t     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n\t     * });\n\t     * // => true\n\t     */\n\t    function isMatch(object, source, customizer, thisArg) {\n\t      var props = keys(source),\n\t          length = props.length;\n\t\n\t      if (!length) {\n\t        return true;\n\t      }\n\t      if (object == null) {\n\t        return false;\n\t      }\n\t      customizer = typeof customizer == 'function' && bindCallback(customizer, thisArg, 3);\n\t      object = toObject(object);\n\t      if (!customizer && length == 1) {\n\t        var key = props[0],\n\t            value = source[key];\n\t\n\t        if (isStrictComparable(value)) {\n\t          return value === object[key] && (value !== undefined || (key in object));\n\t        }\n\t      }\n\t      var values = Array(length),\n\t          strictCompareFlags = Array(length);\n\t\n\t      while (length--) {\n\t        value = values[length] = source[props[length]];\n\t        strictCompareFlags[length] = isStrictComparable(value);\n\t      }\n\t      return baseIsMatch(object, props, values, strictCompareFlags, customizer);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `NaN`.\n\t     *\n\t     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n\t     * which returns `true` for `undefined` and other non-numeric values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNaN(NaN);\n\t     * // => true\n\t     *\n\t     * _.isNaN(new Number(NaN));\n\t     * // => true\n\t     *\n\t     * isNaN(undefined);\n\t     * // => true\n\t     *\n\t     * _.isNaN(undefined);\n\t     * // => false\n\t     */\n\t    function isNaN(value) {\n\t      // An `NaN` primitive is the only value that is not equal to itself.\n\t      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n\t      return isNumber(value) && value != +value;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a native function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNative(Array.prototype.push);\n\t     * // => true\n\t     *\n\t     * _.isNative(_);\n\t     * // => false\n\t     */\n\t    function isNative(value) {\n\t      if (value == null) {\n\t        return false;\n\t      }\n\t      if (objToString.call(value) == funcTag) {\n\t        return reIsNative.test(fnToString.call(value));\n\t      }\n\t      return isObjectLike(value) && reIsHostCtor.test(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNull(null);\n\t     * // => true\n\t     *\n\t     * _.isNull(void 0);\n\t     * // => false\n\t     */\n\t    function isNull(value) {\n\t      return value === null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Number` primitive or object.\n\t     *\n\t     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n\t     * as numbers, use the `_.isFinite` method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNumber(8.4);\n\t     * // => true\n\t     *\n\t     * _.isNumber(NaN);\n\t     * // => true\n\t     *\n\t     * _.isNumber('8.4');\n\t     * // => false\n\t     */\n\t    function isNumber(value) {\n\t      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a plain object, that is, an object created by the\n\t     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n\t     *\n\t     * **Note:** This method assumes objects created by the `Object` constructor\n\t     * have no inherited enumerable properties.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * _.isPlainObject(new Foo);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject({ 'x': 0, 'y': 0 });\n\t     * // => true\n\t     *\n\t     * _.isPlainObject(Object.create(null));\n\t     * // => true\n\t     */\n\t    var isPlainObject = !getPrototypeOf ? shimIsPlainObject : function(value) {\n\t      if (!(value && objToString.call(value) == objectTag)) {\n\t        return false;\n\t      }\n\t      var valueOf = value.valueOf,\n\t          objProto = isNative(valueOf) && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);\n\t\n\t      return objProto\n\t        ? (value == objProto || getPrototypeOf(value) == objProto)\n\t        : shimIsPlainObject(value);\n\t    };\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `RegExp` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isRegExp(/abc/);\n\t     * // => true\n\t     *\n\t     * _.isRegExp('/abc/');\n\t     * // => false\n\t     */\n\t    function isRegExp(value) {\n\t      return (isObjectLike(value) && objToString.call(value) == regexpTag) || false;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `String` primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isString('abc');\n\t     * // => true\n\t     *\n\t     * _.isString(1);\n\t     * // => false\n\t     */\n\t    function isString(value) {\n\t      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a typed array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isTypedArray(new Uint8Array);\n\t     * // => true\n\t     *\n\t     * _.isTypedArray([]);\n\t     * // => false\n\t     */\n\t    function isTypedArray(value) {\n\t      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isUndefined(void 0);\n\t     * // => true\n\t     *\n\t     * _.isUndefined(null);\n\t     * // => false\n\t     */\n\t    function isUndefined(value) {\n\t      return value === undefined;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the converted array.\n\t     * @example\n\t     *\n\t     * (function() {\n\t     *   return _.toArray(arguments).slice(1);\n\t     * }(1, 2, 3));\n\t     * // => [2, 3]\n\t     */\n\t    function toArray(value) {\n\t      var length = value ? getLength(value) : 0;\n\t      if (!isLength(length)) {\n\t        return values(value);\n\t      }\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      return arrayCopy(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a plain object flattening inherited enumerable\n\t     * properties of `value` to own properties of the plain object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Object} Returns the converted plain object.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.assign({ 'a': 1 }, new Foo);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     *\n\t     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n\t     * // => { 'a': 1, 'b': 2, 'c': 3 }\n\t     */\n\t    function toPlainObject(value) {\n\t      return baseCopy(value, keysIn(value));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Assigns own enumerable properties of source object(s) to the destination\n\t     * object. Subsequent sources overwrite property assignments of previous sources.\n\t     * If `customizer` is provided it is invoked to produce the assigned values.\n\t     * The `customizer` is bound to `thisArg` and invoked with five arguments:\n\t     * (objectValue, sourceValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object` and is based on\n\t     * [`Object.assign`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign).\n\t     *\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias extend\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n\t     * // => { 'user': 'fred', 'age': 40 }\n\t     *\n\t     * // using a customizer callback\n\t     * var defaults = _.partialRight(_.assign, function(value, other) {\n\t     *   return _.isUndefined(value) ? other : value;\n\t     * });\n\t     *\n\t     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     */\n\t    var assign = createAssigner(function(object, source, customizer) {\n\t      return customizer\n\t        ? assignWith(object, source, customizer)\n\t        : baseAssign(object, source);\n\t    });\n\t\n\t    /**\n\t     * Creates an object that inherits from the given `prototype` object. If a\n\t     * `properties` object is provided its own enumerable properties are assigned\n\t     * to the created object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @param {Object} [properties] The properties to assign to the object.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * function Shape() {\n\t     *   this.x = 0;\n\t     *   this.y = 0;\n\t     * }\n\t     *\n\t     * function Circle() {\n\t     *   Shape.call(this);\n\t     * }\n\t     *\n\t     * Circle.prototype = _.create(Shape.prototype, {\n\t     *   'constructor': Circle\n\t     * });\n\t     *\n\t     * var circle = new Circle;\n\t     * circle instanceof Circle;\n\t     * // => true\n\t     *\n\t     * circle instanceof Shape;\n\t     * // => true\n\t     */\n\t    function create(prototype, properties, guard) {\n\t      var result = baseCreate(prototype);\n\t      if (guard && isIterateeCall(prototype, properties, guard)) {\n\t        properties = null;\n\t      }\n\t      return properties ? baseAssign(result, properties) : result;\n\t    }\n\t\n\t    /**\n\t     * Assigns own enumerable properties of source object(s) to the destination\n\t     * object for all destination properties that resolve to `undefined`. Once a\n\t     * property is set, additional values of the same property are ignored.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     */\n\t    var defaults = restParam(function(args) {\n\t      var object = args[0];\n\t      if (object == null) {\n\t        return object;\n\t      }\n\t      args.push(assignDefaults);\n\t      return assign.apply(undefined, args);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the key of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findKey(users, function(chr) {\n\t     *   return chr.age < 40;\n\t     * });\n\t     * // => 'barney' (iteration order is not guaranteed)\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.findKey(users, { 'age': 1, 'active': true });\n\t     * // => 'pebbles'\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.findKey(users, 'active', false);\n\t     * // => 'fred'\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.findKey(users, 'active');\n\t     * // => 'barney'\n\t     */\n\t    var findKey = createFindKey(baseForOwn);\n\t\n\t    /**\n\t     * This method is like `_.findKey` except that it iterates over elements of\n\t     * a collection in the opposite order.\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findLastKey(users, function(chr) {\n\t     *   return chr.age < 40;\n\t     * });\n\t     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.findLastKey(users, { 'age': 36, 'active': true });\n\t     * // => 'barney'\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.findLastKey(users, 'active', false);\n\t     * // => 'fred'\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.findLastKey(users, 'active');\n\t     * // => 'pebbles'\n\t     */\n\t    var findLastKey = createFindKey(baseForOwnRight);\n\t\n\t    /**\n\t     * Iterates over own and inherited enumerable properties of an object invoking\n\t     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n\t     * with three arguments: (value, key, object). Iteratee functions may exit\n\t     * iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forIn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n\t     */\n\t    var forIn = createForIn(baseFor);\n\t\n\t    /**\n\t     * This method is like `_.forIn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forInRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n\t     */\n\t    var forInRight = createForIn(baseForRight);\n\t\n\t    /**\n\t     * Iterates over own enumerable properties of an object invoking `iteratee`\n\t     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n\t     * three arguments: (value, key, object). Iteratee functions may exit iteration\n\t     * early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'a' and 'b' (iteration order is not guaranteed)\n\t     */\n\t    var forOwn = createForOwn(baseForOwn);\n\t\n\t    /**\n\t     * This method is like `_.forOwn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwnRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'\n\t     */\n\t    var forOwnRight = createForOwn(baseForOwnRight);\n\t\n\t    /**\n\t     * Creates an array of function property names from all enumerable properties,\n\t     * own and inherited, of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias methods\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the new array of property names.\n\t     * @example\n\t     *\n\t     * _.functions(_);\n\t     * // => ['after', 'ary', 'assign', ...]\n\t     */\n\t    function functions(object) {\n\t      return baseFunctions(object, keysIn(object));\n\t    }\n\t\n\t    /**\n\t     * Gets the property value of `path` on `object`. If the resolved value is\n\t     * `undefined` the `defaultValue` is used in its place.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.get(object, 'a[0].b.c');\n\t     * // => 3\n\t     *\n\t     * _.get(object, ['a', '0', 'b', 'c']);\n\t     * // => 3\n\t     *\n\t     * _.get(object, 'a.b.c', 'default');\n\t     * // => 'default'\n\t     */\n\t    function get(object, path, defaultValue) {\n\t      var result = object == null ? undefined : baseGet(object, toPath(path), path + '');\n\t      return result === undefined ? defaultValue : result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct property.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` is a direct property, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': { 'b': { 'c': 3 } } };\n\t     *\n\t     * _.has(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.has(object, 'a.b.c');\n\t     * // => true\n\t     *\n\t     * _.has(object, ['a', 'b', 'c']);\n\t     * // => true\n\t     */\n\t    function has(object, path) {\n\t      if (object == null) {\n\t        return false;\n\t      }\n\t      var result = hasOwnProperty.call(object, path);\n\t      if (!result && !isKey(path)) {\n\t        path = toPath(path);\n\t        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t        path = last(path);\n\t        result = object != null && hasOwnProperty.call(object, path);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the inverted keys and values of `object`.\n\t     * If `object` contains duplicate values, subsequent values overwrite property\n\t     * assignments of previous values unless `multiValue` is `true`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @param {boolean} [multiValue] Allow multiple values per key.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invert(object);\n\t     * // => { '1': 'c', '2': 'b' }\n\t     *\n\t     * // with `multiValue`\n\t     * _.invert(object, true);\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     */\n\t    function invert(object, multiValue, guard) {\n\t      if (guard && isIterateeCall(object, multiValue, guard)) {\n\t        multiValue = null;\n\t      }\n\t      var index = -1,\n\t          props = keys(object),\n\t          length = props.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var key = props[index],\n\t            value = object[key];\n\t\n\t        if (multiValue) {\n\t          if (hasOwnProperty.call(result, value)) {\n\t            result[value].push(key);\n\t          } else {\n\t            result[value] = [key];\n\t          }\n\t        }\n\t        else {\n\t          result[value] = key;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects. See the\n\t     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.keys)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keys(new Foo);\n\t     * // => ['a', 'b'] (iteration order is not guaranteed)\n\t     *\n\t     * _.keys('hi');\n\t     * // => ['0', '1']\n\t     */\n\t    var keys = !nativeKeys ? shimKeys : function(object) {\n\t      if (object) {\n\t        var Ctor = object.constructor,\n\t            length = object.length;\n\t      }\n\t      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n\t          (typeof object != 'function' && isLength(length))) {\n\t        return shimKeys(object);\n\t      }\n\t      return isObject(object) ? nativeKeys(object) : [];\n\t    };\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keysIn(new Foo);\n\t     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n\t     */\n\t    function keysIn(object) {\n\t      if (object == null) {\n\t        return [];\n\t      }\n\t      if (!isObject(object)) {\n\t        object = Object(object);\n\t      }\n\t      var length = object.length;\n\t      length = (length && isLength(length) &&\n\t        (isArray(object) || (support.nonEnumArgs && isArguments(object))) && length) || 0;\n\t\n\t      var Ctor = object.constructor,\n\t          index = -1,\n\t          isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n\t          result = Array(length),\n\t          skipIndexes = length > 0;\n\t\n\t      while (++index < length) {\n\t        result[index] = (index + '');\n\t      }\n\t      for (var key in object) {\n\t        if (!(skipIndexes && isIndex(key, length)) &&\n\t            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an object with the same keys as `object` and values generated by\n\t     * running each own enumerable property of `object` through `iteratee`. The\n\t     * iteratee function is bound to `thisArg` and invoked with three arguments:\n\t     * (value, key, object).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @example\n\t     *\n\t     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {\n\t     *   return n * 3;\n\t     * });\n\t     * // => { 'a': 3, 'b': 6 }\n\t     *\n\t     * var users = {\n\t     *   'fred':    { 'user': 'fred',    'age': 40 },\n\t     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n\t     * };\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.mapValues(users, 'age');\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     */\n\t    function mapValues(object, iteratee, thisArg) {\n\t      var result = {};\n\t      iteratee = getCallback(iteratee, thisArg, 3);\n\t\n\t      baseForOwn(object, function(value, key, object) {\n\t        result[key] = iteratee(value, key, object);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Recursively merges own enumerable properties of the source object(s), that\n\t     * don't resolve to `undefined` into the destination object. Subsequent sources\n\t     * overwrite property assignments of previous sources. If `customizer` is\n\t     * provided it is invoked to produce the merged values of the destination and\n\t     * source properties. If `customizer` returns `undefined` merging is handled\n\t     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n\t     * with five arguments: (objectValue, sourceValue, key, object, source).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n\t     * };\n\t     *\n\t     * var ages = {\n\t     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n\t     * };\n\t     *\n\t     * _.merge(users, ages);\n\t     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n\t     *\n\t     * // using a customizer callback\n\t     * var object = {\n\t     *   'fruits': ['apple'],\n\t     *   'vegetables': ['beet']\n\t     * };\n\t     *\n\t     * var other = {\n\t     *   'fruits': ['banana'],\n\t     *   'vegetables': ['carrot']\n\t     * };\n\t     *\n\t     * _.merge(object, other, function(a, b) {\n\t     *   if (_.isArray(a)) {\n\t     *     return a.concat(b);\n\t     *   }\n\t     * });\n\t     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n\t     */\n\t    var merge = createAssigner(baseMerge);\n\t\n\t    /**\n\t     * The opposite of `_.pick`; this method creates an object composed of the\n\t     * own and inherited enumerable properties of `object` that are not omitted.\n\t     * Property names may be specified as individual arguments or as arrays of\n\t     * property names. If `predicate` is provided it is invoked for each property\n\t     * of `object` omitting the properties `predicate` returns truthy for. The\n\t     * predicate is bound to `thisArg` and invoked with three arguments:\n\t     * (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function|...(string|string[])} [predicate] The function invoked per\n\t     *  iteration or property names to omit, specified as individual property\n\t     *  names or arrays of property names.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred', 'age': 40 };\n\t     *\n\t     * _.omit(object, 'age');\n\t     * // => { 'user': 'fred' }\n\t     *\n\t     * _.omit(object, _.isNumber);\n\t     * // => { 'user': 'fred' }\n\t     */\n\t    var omit = restParam(function(object, props) {\n\t      if (object == null) {\n\t        return {};\n\t      }\n\t      if (typeof props[0] != 'function') {\n\t        var props = arrayMap(baseFlatten(props), String);\n\t        return pickByArray(object, baseDifference(keysIn(object), props));\n\t      }\n\t      var predicate = bindCallback(props[0], props[1], 3);\n\t      return pickByCallback(object, function(value, key, object) {\n\t        return !predicate(value, key, object);\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a two dimensional array of the key-value pairs for `object`,\n\t     * e.g. `[[key1, value1], [key2, value2]]`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the new array of key-value pairs.\n\t     * @example\n\t     *\n\t     * _.pairs({ 'barney': 36, 'fred': 40 });\n\t     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n\t     */\n\t    function pairs(object) {\n\t      var index = -1,\n\t          props = keys(object),\n\t          length = props.length,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        result[index] = [key, object[key]];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the picked `object` properties. Property\n\t     * names may be specified as individual arguments or as arrays of property\n\t     * names. If `predicate` is provided it is invoked for each property of `object`\n\t     * picking the properties `predicate` returns truthy for. The predicate is\n\t     * bound to `thisArg` and invoked with three arguments: (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function|...(string|string[])} [predicate] The function invoked per\n\t     *  iteration or property names to pick, specified as individual property\n\t     *  names or arrays of property names.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred', 'age': 40 };\n\t     *\n\t     * _.pick(object, 'user');\n\t     * // => { 'user': 'fred' }\n\t     *\n\t     * _.pick(object, _.isString);\n\t     * // => { 'user': 'fred' }\n\t     */\n\t    var pick = restParam(function(object, props) {\n\t      if (object == null) {\n\t        return {};\n\t      }\n\t      return typeof props[0] == 'function'\n\t        ? pickByCallback(object, bindCallback(props[0], props[1], 3))\n\t        : pickByArray(object, baseFlatten(props));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.get` except that if the resolved value is a function\n\t     * it is invoked with the `this` binding of its parent object and its result\n\t     * is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to resolve.\n\t     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n\t     *\n\t     * _.result(object, 'a[0].b.c1');\n\t     * // => 3\n\t     *\n\t     * _.result(object, 'a[0].b.c2');\n\t     * // => 4\n\t     *\n\t     * _.result(object, 'a.b.c', 'default');\n\t     * // => 'default'\n\t     *\n\t     * _.result(object, 'a.b.c', _.constant('default'));\n\t     * // => 'default'\n\t     */\n\t    function result(object, path, defaultValue) {\n\t      var result = object == null ? undefined : object[path];\n\t      if (result === undefined) {\n\t        if (object != null && !isKey(path, object)) {\n\t          path = toPath(path);\n\t          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t          result = object == null ? undefined : object[last(path)];\n\t        }\n\t        result = result === undefined ? defaultValue : result;\n\t      }\n\t      return isFunction(result) ? result.call(object) : result;\n\t    }\n\t\n\t    /**\n\t     * Sets the property value of `path` on `object`. If a portion of `path`\n\t     * does not exist it is created.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to augment.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.set(object, 'a[0].b.c', 4);\n\t     * console.log(object.a[0].b.c);\n\t     * // => 4\n\t     *\n\t     * _.set(object, 'x[0].y.z', 5);\n\t     * console.log(object.x[0].y.z);\n\t     * // => 5\n\t     */\n\t    function set(object, path, value) {\n\t      if (object == null) {\n\t        return object;\n\t      }\n\t      var pathKey = (path + '');\n\t      path = (object[pathKey] != null || isKey(path, object)) ? [pathKey] : toPath(path);\n\t\n\t      var index = -1,\n\t          length = path.length,\n\t          endIndex = length - 1,\n\t          nested = object;\n\t\n\t      while (nested != null && ++index < length) {\n\t        var key = path[index];\n\t        if (isObject(nested)) {\n\t          if (index == endIndex) {\n\t            nested[key] = value;\n\t          } else if (nested[key] == null) {\n\t            nested[key] = isIndex(path[index + 1]) ? [] : {};\n\t          }\n\t        }\n\t        nested = nested[key];\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * An alternative to `_.reduce`; this method transforms `object` to a new\n\t     * `accumulator` object which is the result of running each of its own enumerable\n\t     * properties through `iteratee`, with each invocation potentially mutating\n\t     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n\t     * with four arguments: (accumulator, value, key, object). Iteratee functions\n\t     * may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Array|Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The custom accumulator value.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * _.transform([2, 3, 4], function(result, n) {\n\t     *   result.push(n *= n);\n\t     *   return n % 2 == 0;\n\t     * });\n\t     * // => [4, 9]\n\t     *\n\t     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\n\t     *   result[key] = n * 3;\n\t     * });\n\t     * // => { 'a': 3, 'b': 6 }\n\t     */\n\t    function transform(object, iteratee, accumulator, thisArg) {\n\t      var isArr = isArray(object) || isTypedArray(object);\n\t      iteratee = getCallback(iteratee, thisArg, 4);\n\t\n\t      if (accumulator == null) {\n\t        if (isArr || isObject(object)) {\n\t          var Ctor = object.constructor;\n\t          if (isArr) {\n\t            accumulator = isArray(object) ? new Ctor : [];\n\t          } else {\n\t            accumulator = baseCreate(isFunction(Ctor) && Ctor.prototype);\n\t          }\n\t        } else {\n\t          accumulator = {};\n\t        }\n\t      }\n\t      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n\t        return iteratee(accumulator, value, index, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable property values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.values(new Foo);\n\t     * // => [1, 2] (iteration order is not guaranteed)\n\t     *\n\t     * _.values('hi');\n\t     * // => ['h', 'i']\n\t     */\n\t    function values(object) {\n\t      return baseValues(object, keys(object));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property values\n\t     * of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.valuesIn(new Foo);\n\t     * // => [1, 2, 3] (iteration order is not guaranteed)\n\t     */\n\t    function valuesIn(object) {\n\t      return baseValues(object, keysIn(object));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Checks if `n` is between `start` and up to but not including, `end`. If\n\t     * `end` is not specified it is set to `start` with `start` then set to `0`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Number\n\t     * @param {number} n The number to check.\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.\n\t     * @example\n\t     *\n\t     * _.inRange(3, 2, 4);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 8);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(2, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(1.2, 2);\n\t     * // => true\n\t     *\n\t     * _.inRange(5.2, 4);\n\t     * // => false\n\t     */\n\t    function inRange(value, start, end) {\n\t      start = +start || 0;\n\t      if (typeof end === 'undefined') {\n\t        end = start;\n\t        start = 0;\n\t      } else {\n\t        end = +end || 0;\n\t      }\n\t      return value >= nativeMin(start, end) && value < nativeMax(start, end);\n\t    }\n\t\n\t    /**\n\t     * Produces a random number between `min` and `max` (inclusive). If only one\n\t     * argument is provided a number between `0` and the given number is returned.\n\t     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n\t     * number is returned instead of an integer.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Number\n\t     * @param {number} [min=0] The minimum possible value.\n\t     * @param {number} [max=1] The maximum possible value.\n\t     * @param {boolean} [floating] Specify returning a floating-point number.\n\t     * @returns {number} Returns the random number.\n\t     * @example\n\t     *\n\t     * _.random(0, 5);\n\t     * // => an integer between 0 and 5\n\t     *\n\t     * _.random(5);\n\t     * // => also an integer between 0 and 5\n\t     *\n\t     * _.random(5, true);\n\t     * // => a floating-point number between 0 and 5\n\t     *\n\t     * _.random(1.2, 5.2);\n\t     * // => a floating-point number between 1.2 and 5.2\n\t     */\n\t    function random(min, max, floating) {\n\t      if (floating && isIterateeCall(min, max, floating)) {\n\t        max = floating = null;\n\t      }\n\t      var noMin = min == null,\n\t          noMax = max == null;\n\t\n\t      if (floating == null) {\n\t        if (noMax && typeof min == 'boolean') {\n\t          floating = min;\n\t          min = 1;\n\t        }\n\t        else if (typeof max == 'boolean') {\n\t          floating = max;\n\t          noMax = true;\n\t        }\n\t      }\n\t      if (noMin && noMax) {\n\t        max = 1;\n\t        noMax = false;\n\t      }\n\t      min = +min || 0;\n\t      if (noMax) {\n\t        max = min;\n\t        min = 0;\n\t      } else {\n\t        max = +max || 0;\n\t      }\n\t      if (floating || min % 1 || max % 1) {\n\t        var rand = nativeRandom();\n\t        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);\n\t      }\n\t      return baseRandom(min, max);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the camel cased string.\n\t     * @example\n\t     *\n\t     * _.camelCase('Foo Bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('--foo-bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('__foo_bar__');\n\t     * // => 'fooBar'\n\t     */\n\t    var camelCase = createCompounder(function(result, word, index) {\n\t      word = word.toLowerCase();\n\t      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);\n\t    });\n\t\n\t    /**\n\t     * Capitalizes the first character of `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to capitalize.\n\t     * @returns {string} Returns the capitalized string.\n\t     * @example\n\t     *\n\t     * _.capitalize('fred');\n\t     * // => 'Fred'\n\t     */\n\t    function capitalize(string) {\n\t      string = baseToString(string);\n\t      return string && (string.charAt(0).toUpperCase() + string.slice(1));\n\t    }\n\t\n\t    /**\n\t     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n\t     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to deburr.\n\t     * @returns {string} Returns the deburred string.\n\t     * @example\n\t     *\n\t     * _.deburr('déjà vu');\n\t     * // => 'deja vu'\n\t     */\n\t    function deburr(string) {\n\t      string = baseToString(string);\n\t      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n\t    }\n\t\n\t    /**\n\t     * Checks if `string` ends with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=string.length] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n\t     * @example\n\t     *\n\t     * _.endsWith('abc', 'c');\n\t     * // => true\n\t     *\n\t     * _.endsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.endsWith('abc', 'b', 2);\n\t     * // => true\n\t     */\n\t    function endsWith(string, target, position) {\n\t      string = baseToString(string);\n\t      target = (target + '');\n\t\n\t      var length = string.length;\n\t      position = position === undefined\n\t        ? length\n\t        : nativeMin(position < 0 ? 0 : (+position || 0), length);\n\t\n\t      position -= target.length;\n\t      return position >= 0 && string.indexOf(target, position) == position;\n\t    }\n\t\n\t    /**\n\t     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\", in `string` to\n\t     * their corresponding HTML entities.\n\t     *\n\t     * **Note:** No other characters are escaped. To escape additional characters\n\t     * use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * Though the \">\" character is escaped for symmetry, characters like\n\t     * \">\" and \"/\" don't require escaping in HTML and have no special meaning\n\t     * unless they're part of a tag or unquoted attribute value.\n\t     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n\t     * (under \"semi-related fun fact\") for more details.\n\t     *\n\t     * Backticks are escaped because in Internet Explorer < 9, they can break out\n\t     * of attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n\t     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n\t     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n\t     * for more details.\n\t     *\n\t     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n\t     * to reduce XSS vectors.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escape('fred, barney, & pebbles');\n\t     * // => 'fred, barney, &amp; pebbles'\n\t     */\n\t    function escape(string) {\n\t      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n\t      string = baseToString(string);\n\t      return (string && reHasUnescapedHtml.test(string))\n\t        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n\t     * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escapeRegExp('[lodash](https://lodash.com/)');\n\t     * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n\t     */\n\t    function escapeRegExp(string) {\n\t      string = baseToString(string);\n\t      return (string && reHasRegExpChars.test(string))\n\t        ? string.replace(reRegExpChars, '\\\\$&')\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the kebab cased string.\n\t     * @example\n\t     *\n\t     * _.kebabCase('Foo Bar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('fooBar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('__foo_bar__');\n\t     * // => 'foo-bar'\n\t     */\n\t    var kebabCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '-' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Pads `string` on the left and right sides if it is shorter than `length`.\n\t     * Padding characters are truncated if they can't be evenly divided by `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.pad('abc', 8);\n\t     * // => '  abc   '\n\t     *\n\t     * _.pad('abc', 8, '_-');\n\t     * // => '_-abc_-_'\n\t     *\n\t     * _.pad('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function pad(string, length, chars) {\n\t      string = baseToString(string);\n\t      length = +length;\n\t\n\t      var strLength = string.length;\n\t      if (strLength >= length || !nativeIsFinite(length)) {\n\t        return string;\n\t      }\n\t      var mid = (length - strLength) / 2,\n\t          leftLength = floor(mid),\n\t          rightLength = ceil(mid);\n\t\n\t      chars = createPadding('', rightLength, chars);\n\t      return chars.slice(0, leftLength) + string + chars;\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the left side if it is shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padLeft('abc', 6);\n\t     * // => '   abc'\n\t     *\n\t     * _.padLeft('abc', 6, '_-');\n\t     * // => '_-_abc'\n\t     *\n\t     * _.padLeft('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    var padLeft = createPadDir();\n\t\n\t    /**\n\t     * Pads `string` on the right side if it is shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padRight('abc', 6);\n\t     * // => 'abc   '\n\t     *\n\t     * _.padRight('abc', 6, '_-');\n\t     * // => 'abc_-_'\n\t     *\n\t     * _.padRight('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    var padRight = createPadDir(true);\n\t\n\t    /**\n\t     * Converts `string` to an integer of the specified radix. If `radix` is\n\t     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n\t     * in which case a `radix` of `16` is used.\n\t     *\n\t     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)\n\t     * of `parseInt`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} string The string to convert.\n\t     * @param {number} [radix] The radix to interpret `value` by.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.parseInt('08');\n\t     * // => 8\n\t     *\n\t     * _.map(['6', '08', '10'], _.parseInt);\n\t     * // => [6, 8, 10]\n\t     */\n\t    function parseInt(string, radix, guard) {\n\t      if (guard && isIterateeCall(string, radix, guard)) {\n\t        radix = 0;\n\t      }\n\t      return nativeParseInt(string, radix);\n\t    }\n\t    // Fallback for environments with pre-ES5 implementations.\n\t    if (nativeParseInt(whitespace + '08') != 8) {\n\t      parseInt = function(string, radix, guard) {\n\t        // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n\t        // Chrome fails to trim leading <BOM> whitespace characters.\n\t        // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n\t        if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n\t          radix = 0;\n\t        } else if (radix) {\n\t          radix = +radix;\n\t        }\n\t        string = trim(string);\n\t        return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Repeats the given string `n` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to repeat.\n\t     * @param {number} [n=0] The number of times to repeat the string.\n\t     * @returns {string} Returns the repeated string.\n\t     * @example\n\t     *\n\t     * _.repeat('*', 3);\n\t     * // => '***'\n\t     *\n\t     * _.repeat('abc', 2);\n\t     * // => 'abcabc'\n\t     *\n\t     * _.repeat('abc', 0);\n\t     * // => ''\n\t     */\n\t    function repeat(string, n) {\n\t      var result = '';\n\t      string = baseToString(string);\n\t      n = +n;\n\t      if (n < 1 || !string || !nativeIsFinite(n)) {\n\t        return result;\n\t      }\n\t      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n\t      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n\t      do {\n\t        if (n % 2) {\n\t          result += string;\n\t        }\n\t        n = floor(n / 2);\n\t        string += string;\n\t      } while (n);\n\t\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the snake cased string.\n\t     * @example\n\t     *\n\t     * _.snakeCase('Foo Bar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('fooBar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('--foo-bar');\n\t     * // => 'foo_bar'\n\t     */\n\t    var snakeCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '_' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the start cased string.\n\t     * @example\n\t     *\n\t     * _.startCase('--foo-bar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('fooBar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('__foo_bar__');\n\t     * // => 'Foo Bar'\n\t     */\n\t    var startCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n\t    });\n\t\n\t    /**\n\t     * Checks if `string` starts with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=0] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n\t     * @example\n\t     *\n\t     * _.startsWith('abc', 'a');\n\t     * // => true\n\t     *\n\t     * _.startsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.startsWith('abc', 'b', 1);\n\t     * // => true\n\t     */\n\t    function startsWith(string, target, position) {\n\t      string = baseToString(string);\n\t      position = position == null\n\t        ? 0\n\t        : nativeMin(position < 0 ? 0 : (+position || 0), string.length);\n\t\n\t      return string.lastIndexOf(target, position) == position;\n\t    }\n\t\n\t    /**\n\t     * Creates a compiled template function that can interpolate data properties\n\t     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n\t     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n\t     * properties may be accessed as free variables in the template. If a setting\n\t     * object is provided it takes precedence over `_.templateSettings` values.\n\t     *\n\t     * **Note:** In the development build `_.template` utilizes\n\t     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n\t     * for easier debugging.\n\t     *\n\t     * For more information on precompiling templates see\n\t     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n\t     *\n\t     * For more information on Chrome extension sandboxes see\n\t     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The template string.\n\t     * @param {Object} [options] The options object.\n\t     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n\t     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n\t     * @param {Object} [options.imports] An object to import into the template as free variables.\n\t     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n\t     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n\t     * @param {string} [options.variable] The data object variable name.\n\t     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n\t     * @returns {Function} Returns the compiled template function.\n\t     * @example\n\t     *\n\t     * // using the \"interpolate\" delimiter to create a compiled template\n\t     * var compiled = _.template('hello <%= user %>!');\n\t     * compiled({ 'user': 'fred' });\n\t     * // => 'hello fred!'\n\t     *\n\t     * // using the HTML \"escape\" delimiter to escape data property values\n\t     * var compiled = _.template('<b><%- value %></b>');\n\t     * compiled({ 'value': '<script>' });\n\t     * // => '<b>&lt;script&gt;</b>'\n\t     *\n\t     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n\t     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // using the internal `print` function in \"evaluate\" delimiters\n\t     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n\t     * compiled({ 'user': 'barney' });\n\t     * // => 'hello barney!'\n\t     *\n\t     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n\t     * var compiled = _.template('hello ${ user }!');\n\t     * compiled({ 'user': 'pebbles' });\n\t     * // => 'hello pebbles!'\n\t     *\n\t     * // using custom template delimiters\n\t     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n\t     * var compiled = _.template('hello {{ user }}!');\n\t     * compiled({ 'user': 'mustache' });\n\t     * // => 'hello mustache!'\n\t     *\n\t     * // using backslashes to treat delimiters as plain text\n\t     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n\t     * compiled({ 'value': 'ignored' });\n\t     * // => '<%- value %>'\n\t     *\n\t     * // using the `imports` option to import `jQuery` as `jq`\n\t     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n\t     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // using the `sourceURL` option to specify a custom sourceURL for the template\n\t     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n\t     * compiled(data);\n\t     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n\t     *\n\t     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n\t     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n\t     * compiled.source;\n\t     * // => function(data) {\n\t     * //   var __t, __p = '';\n\t     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n\t     * //   return __p;\n\t     * // }\n\t     *\n\t     * // using the `source` property to inline compiled templates for meaningful\n\t     * // line numbers in error messages and a stack trace\n\t     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n\t     *   var JST = {\\\n\t     *     \"main\": ' + _.template(mainText).source + '\\\n\t     *   };\\\n\t     * ');\n\t     */\n\t    function template(string, options, otherOptions) {\n\t      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n\t      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n\t      var settings = lodash.templateSettings;\n\t\n\t      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n\t        options = otherOptions = null;\n\t      }\n\t      string = baseToString(string);\n\t      options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n\t\n\t      var imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n\t          importsKeys = keys(imports),\n\t          importsValues = baseValues(imports, importsKeys);\n\t\n\t      var isEscaping,\n\t          isEvaluating,\n\t          index = 0,\n\t          interpolate = options.interpolate || reNoMatch,\n\t          source = \"__p += '\";\n\t\n\t      // Compile the regexp to match each delimiter.\n\t      var reDelimiters = RegExp(\n\t        (options.escape || reNoMatch).source + '|' +\n\t        interpolate.source + '|' +\n\t        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n\t        (options.evaluate || reNoMatch).source + '|$'\n\t      , 'g');\n\t\n\t      // Use a sourceURL for easier debugging.\n\t      var sourceURL = '//# sourceURL=' +\n\t        ('sourceURL' in options\n\t          ? options.sourceURL\n\t          : ('lodash.templateSources[' + (++templateCounter) + ']')\n\t        ) + '\\n';\n\t\n\t      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n\t        interpolateValue || (interpolateValue = esTemplateValue);\n\t\n\t        // Escape characters that can't be included in string literals.\n\t        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\t\n\t        // Replace delimiters with snippets.\n\t        if (escapeValue) {\n\t          isEscaping = true;\n\t          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n\t        }\n\t        if (evaluateValue) {\n\t          isEvaluating = true;\n\t          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n\t        }\n\t        if (interpolateValue) {\n\t          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n\t        }\n\t        index = offset + match.length;\n\t\n\t        // The JS engine embedded in Adobe products requires returning the `match`\n\t        // string in order to produce the correct `offset` value.\n\t        return match;\n\t      });\n\t\n\t      source += \"';\\n\";\n\t\n\t      // If `variable` is not specified wrap a with-statement around the generated\n\t      // code to add the data object to the top of the scope chain.\n\t      var variable = options.variable;\n\t      if (!variable) {\n\t        source = 'with (obj) {\\n' + source + '\\n}\\n';\n\t      }\n\t      // Cleanup code by stripping empty strings.\n\t      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n\t        .replace(reEmptyStringMiddle, '$1')\n\t        .replace(reEmptyStringTrailing, '$1;');\n\t\n\t      // Frame code as the function body.\n\t      source = 'function(' + (variable || 'obj') + ') {\\n' +\n\t        (variable\n\t          ? ''\n\t          : 'obj || (obj = {});\\n'\n\t        ) +\n\t        \"var __t, __p = ''\" +\n\t        (isEscaping\n\t           ? ', __e = _.escape'\n\t           : ''\n\t        ) +\n\t        (isEvaluating\n\t          ? ', __j = Array.prototype.join;\\n' +\n\t            \"function print() { __p += __j.call(arguments, '') }\\n\"\n\t          : ';\\n'\n\t        ) +\n\t        source +\n\t        'return __p\\n}';\n\t\n\t      var result = attempt(function() {\n\t        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n\t      });\n\t\n\t      // Provide the compiled function's source by its `toString` method or\n\t      // the `source` property as a convenience for inlining compiled templates.\n\t      result.source = source;\n\t      if (isError(result)) {\n\t        throw result;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Removes leading and trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trim('  abc  ');\n\t     * // => 'abc'\n\t     *\n\t     * _.trim('-_-abc-_-', '_-');\n\t     * // => 'abc'\n\t     *\n\t     * _.map(['  foo  ', '  bar  '], _.trim);\n\t     * // => ['foo', 'bar']\n\t     */\n\t    function trim(string, chars, guard) {\n\t      var value = string;\n\t      string = baseToString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n\t        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n\t      }\n\t      chars = (chars + '');\n\t      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n\t    }\n\t\n\t    /**\n\t     * Removes leading whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimLeft('  abc  ');\n\t     * // => 'abc  '\n\t     *\n\t     * _.trimLeft('-_-abc-_-', '_-');\n\t     * // => 'abc-_-'\n\t     */\n\t    function trimLeft(string, chars, guard) {\n\t      var value = string;\n\t      string = baseToString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n\t        return string.slice(trimmedLeftIndex(string));\n\t      }\n\t      return string.slice(charsLeftIndex(string, (chars + '')));\n\t    }\n\t\n\t    /**\n\t     * Removes trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimRight('  abc  ');\n\t     * // => '  abc'\n\t     *\n\t     * _.trimRight('-_-abc-_-', '_-');\n\t     * // => '-_-abc'\n\t     */\n\t    function trimRight(string, chars, guard) {\n\t      var value = string;\n\t      string = baseToString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n\t        return string.slice(0, trimmedRightIndex(string) + 1);\n\t      }\n\t      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n\t    }\n\t\n\t    /**\n\t     * Truncates `string` if it is longer than the given maximum string length.\n\t     * The last characters of the truncated string are replaced with the omission\n\t     * string which defaults to \"...\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to truncate.\n\t     * @param {Object|number} [options] The options object or maximum string length.\n\t     * @param {number} [options.length=30] The maximum string length.\n\t     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n\t     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {string} Returns the truncated string.\n\t     * @example\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino');\n\t     * // => 'hi-diddly-ho there, neighbo...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino', 24);\n\t     * // => 'hi-diddly-ho there, n...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': ' '\n\t     * });\n\t     * // => 'hi-diddly-ho there,...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': /,? +/\n\t     * });\n\t     * // => 'hi-diddly-ho there...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino', {\n\t     *   'omission': ' [...]'\n\t     * });\n\t     * // => 'hi-diddly-ho there, neig [...]'\n\t     */\n\t    function trunc(string, options, guard) {\n\t      if (guard && isIterateeCall(string, options, guard)) {\n\t        options = null;\n\t      }\n\t      var length = DEFAULT_TRUNC_LENGTH,\n\t          omission = DEFAULT_TRUNC_OMISSION;\n\t\n\t      if (options != null) {\n\t        if (isObject(options)) {\n\t          var separator = 'separator' in options ? options.separator : separator;\n\t          length = 'length' in options ? (+options.length || 0) : length;\n\t          omission = 'omission' in options ? baseToString(options.omission) : omission;\n\t        } else {\n\t          length = +options || 0;\n\t        }\n\t      }\n\t      string = baseToString(string);\n\t      if (length >= string.length) {\n\t        return string;\n\t      }\n\t      var end = length - omission.length;\n\t      if (end < 1) {\n\t        return omission;\n\t      }\n\t      var result = string.slice(0, end);\n\t      if (separator == null) {\n\t        return result + omission;\n\t      }\n\t      if (isRegExp(separator)) {\n\t        if (string.slice(end).search(separator)) {\n\t          var match,\n\t              newEnd,\n\t              substring = string.slice(0, end);\n\t\n\t          if (!separator.global) {\n\t            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n\t          }\n\t          separator.lastIndex = 0;\n\t          while ((match = separator.exec(substring))) {\n\t            newEnd = match.index;\n\t          }\n\t          result = result.slice(0, newEnd == null ? end : newEnd);\n\t        }\n\t      } else if (string.indexOf(separator, end) != end) {\n\t        var index = result.lastIndexOf(separator);\n\t        if (index > -1) {\n\t          result = result.slice(0, index);\n\t        }\n\t      }\n\t      return result + omission;\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.escape`; this method converts the HTML entities\n\t     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n\t     * corresponding characters.\n\t     *\n\t     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n\t     * entities use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to unescape.\n\t     * @returns {string} Returns the unescaped string.\n\t     * @example\n\t     *\n\t     * _.unescape('fred, barney, &amp; pebbles');\n\t     * // => 'fred, barney, & pebbles'\n\t     */\n\t    function unescape(string) {\n\t      string = baseToString(string);\n\t      return (string && reHasEscapedHtml.test(string))\n\t        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Splits `string` into an array of its words.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to inspect.\n\t     * @param {RegExp|string} [pattern] The pattern to match words.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the words of `string`.\n\t     * @example\n\t     *\n\t     * _.words('fred, barney, & pebbles');\n\t     * // => ['fred', 'barney', 'pebbles']\n\t     *\n\t     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n\t     * // => ['fred', 'barney', '&', 'pebbles']\n\t     */\n\t    function words(string, pattern, guard) {\n\t      if (guard && isIterateeCall(string, pattern, guard)) {\n\t        pattern = null;\n\t      }\n\t      string = baseToString(string);\n\t      return string.match(pattern || reWords) || [];\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Attempts to invoke `func`, returning either the result or the caught error\n\t     * object. Any additional arguments are provided to `func` when it is invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Function} func The function to attempt.\n\t     * @returns {*} Returns the `func` result or error object.\n\t     * @example\n\t     *\n\t     * // avoid throwing errors for invalid selectors\n\t     * var elements = _.attempt(function(selector) {\n\t     *   return document.querySelectorAll(selector);\n\t     * }, '>_>');\n\t     *\n\t     * if (_.isError(elements)) {\n\t     *   elements = [];\n\t     * }\n\t     */\n\t    var attempt = restParam(function(func, args) {\n\t      try {\n\t        return func.apply(undefined, args);\n\t      } catch(e) {\n\t        return isError(e) ? e : new Error(e);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n\t     * and arguments of the created function. If `func` is a property name the\n\t     * created callback returns the property value for a given element. If `func`\n\t     * is an object the created callback returns `true` for elements that contain\n\t     * the equivalent object properties, otherwise it returns `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias iteratee\n\t     * @category Utility\n\t     * @param {*} [func=_.identity] The value to convert to a callback.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Function} Returns the callback.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // wrap to create custom callback shorthands\n\t     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n\t     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n\t     *   if (!match) {\n\t     *     return callback(func, thisArg);\n\t     *   }\n\t     *   return function(object) {\n\t     *     return match[2] == 'gt'\n\t     *       ? object[match[1]] > match[3]\n\t     *       : object[match[1]] < match[3];\n\t     *   };\n\t     * });\n\t     *\n\t     * _.filter(users, 'age__gt36');\n\t     * // => [{ 'user': 'fred', 'age': 40 }]\n\t     */\n\t    function callback(func, thisArg, guard) {\n\t      if (guard && isIterateeCall(func, thisArg, guard)) {\n\t        thisArg = null;\n\t      }\n\t      return baseCallback(func, thisArg);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {*} value The value to return from the new function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var getter = _.constant(object);\n\t     *\n\t     * getter() === object;\n\t     * // => true\n\t     */\n\t    function constant(value) {\n\t      return function() {\n\t        return value;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * This method returns the first argument provided to it.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {*} value Any value.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * _.identity(object) === object;\n\t     * // => true\n\t     */\n\t    function identity(value) {\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * Creates a function which performs a deep comparison between a given object\n\t     * and `source`, returning `true` if the given object has equivalent property\n\t     * values, else `false`.\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties. For comparing a single\n\t     * own or inherited property value see `_.matchesProperty`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n\t     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n\t     */\n\t    function matches(source) {\n\t      return baseMatches(baseClone(source, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function which compares the property value of `path` on a given\n\t     * object to `value`.\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} value The value to compare.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * _.find(users, _.matchesProperty('user', 'fred'));\n\t     * // => { 'user': 'fred' }\n\t     */\n\t    function matchesProperty(path, value) {\n\t      return baseMatchesProperty(path, baseClone(value, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function which invokes the method at `path` on a given object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n\t     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.method('a.b.c'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n\t     * // => [1, 2]\n\t     */\n\t    var method = restParam(function(path, args) {\n\t      return function(object) {\n\t        return invokePath(object, path, args);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.method`; this method creates a function which invokes\n\t     * the method at a given path on `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Object} object The object to query.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var array = _.times(3, _.constant),\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    var methodOf = restParam(function(object, args) {\n\t      return function(path) {\n\t        return invokePath(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * Adds all own enumerable function properties of a source object to the\n\t     * destination object. If `object` is a function then methods are added to\n\t     * its prototype as well.\n\t     *\n\t     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n\t     * avoid conflicts caused by modifying the original.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Function|Object} [object=lodash] The destination object.\n\t     * @param {Object} source The object of functions to add.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.chain=true] Specify whether the functions added\n\t     *  are chainable.\n\t     * @returns {Function|Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function vowels(string) {\n\t     *   return _.filter(string, function(v) {\n\t     *     return /[aeiou]/i.test(v);\n\t     *   });\n\t     * }\n\t     *\n\t     * // use `_.runInContext` to avoid conflicts (esp. in Node.js)\n\t     * var _ = require('lodash').runInContext();\n\t     *\n\t     * _.mixin({ 'vowels': vowels });\n\t     * _.vowels('fred');\n\t     * // => ['e']\n\t     *\n\t     * _('fred').vowels().value();\n\t     * // => ['e']\n\t     *\n\t     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n\t     * _('fred').vowels();\n\t     * // => ['e']\n\t     */\n\t    function mixin(object, source, options) {\n\t      if (options == null) {\n\t        var isObj = isObject(source),\n\t            props = isObj && keys(source),\n\t            methodNames = props && props.length && baseFunctions(source, props);\n\t\n\t        if (!(methodNames ? methodNames.length : isObj)) {\n\t          methodNames = false;\n\t          options = source;\n\t          source = object;\n\t          object = this;\n\t        }\n\t      }\n\t      if (!methodNames) {\n\t        methodNames = baseFunctions(source, keys(source));\n\t      }\n\t      var chain = true,\n\t          index = -1,\n\t          isFunc = isFunction(object),\n\t          length = methodNames.length;\n\t\n\t      if (options === false) {\n\t        chain = false;\n\t      } else if (isObject(options) && 'chain' in options) {\n\t        chain = options.chain;\n\t      }\n\t      while (++index < length) {\n\t        var methodName = methodNames[index],\n\t            func = source[methodName];\n\t\n\t        object[methodName] = func;\n\t        if (isFunc) {\n\t          object.prototype[methodName] = (function(func) {\n\t            return function() {\n\t              var chainAll = this.__chain__;\n\t              if (chain || chainAll) {\n\t                var result = object(this.__wrapped__),\n\t                    actions = result.__actions__ = arrayCopy(this.__actions__);\n\t\n\t                actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n\t                result.__chain__ = chainAll;\n\t                return result;\n\t              }\n\t              var args = [this.value()];\n\t              push.apply(args, arguments);\n\t              return func.apply(object, args);\n\t            };\n\t          }(func));\n\t        }\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Reverts the `_` variable to its previous value and returns a reference to\n\t     * the `lodash` function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @returns {Function} Returns the `lodash` function.\n\t     * @example\n\t     *\n\t     * var lodash = _.noConflict();\n\t     */\n\t    function noConflict() {\n\t      context._ = oldDash;\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * A no-operation function which returns `undefined` regardless of the\n\t     * arguments it receives.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * _.noop(object) === undefined;\n\t     * // => true\n\t     */\n\t    function noop() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * Creates a function which returns the property value at `path` on a\n\t     * given object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': { 'c': 2 } } },\n\t     *   { 'a': { 'b': { 'c': 1 } } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.property('a.b.c'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n\t     * // => [1, 2]\n\t     */\n\t    function property(path) {\n\t      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.property`; this method creates a function which returns\n\t     * the property value at a given path on `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Object} object The object to query.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var array = [0, 1, 2],\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    function propertyOf(object) {\n\t      return function(path) {\n\t        return baseGet(object, toPath(path), path + '');\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates an array of numbers (positive and/or negative) progressing from\n\t     * `start` up to, but not including, `end`. If `end` is not specified it is\n\t     * set to `start` with `start` then set to `0`. If `end` is less than `start`\n\t     * a zero-length range is created unless a negative `step` is specified.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the new array of numbers.\n\t     * @example\n\t     *\n\t     * _.range(4);\n\t     * // => [0, 1, 2, 3]\n\t     *\n\t     * _.range(1, 5);\n\t     * // => [1, 2, 3, 4]\n\t     *\n\t     * _.range(0, 20, 5);\n\t     * // => [0, 5, 10, 15]\n\t     *\n\t     * _.range(0, -4, -1);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.range(0);\n\t     * // => []\n\t     */\n\t    function range(start, end, step) {\n\t      if (step && isIterateeCall(start, end, step)) {\n\t        end = step = null;\n\t      }\n\t      start = +start || 0;\n\t      step = step == null ? 1 : (+step || 0);\n\t\n\t      if (end == null) {\n\t        end = start;\n\t        start = 0;\n\t      } else {\n\t        end = +end || 0;\n\t      }\n\t      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n\t      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n\t      var index = -1,\n\t          length = nativeMax(ceil((end - start) / (step || 1)), 0),\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        result[index] = start;\n\t        start += step;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Invokes the iteratee function `n` times, returning an array of the results\n\t     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n\t     * one argument; (index).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {number} n The number of times to invoke `iteratee`.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n\t     * // => [3, 6, 4]\n\t     *\n\t     * _.times(3, function(n) {\n\t     *   mage.castSpell(n);\n\t     * });\n\t     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`\n\t     *\n\t     * _.times(3, function(n) {\n\t     *   this.cast(n);\n\t     * }, mage);\n\t     * // => also invokes `mage.castSpell(n)` three times\n\t     */\n\t    function times(n, iteratee, thisArg) {\n\t      n = floor(n);\n\t\n\t      // Exit early to avoid a JSC JIT bug in Safari 8\n\t      // where `Array(0)` is treated as `Array(1)`.\n\t      if (n < 1 || !nativeIsFinite(n)) {\n\t        return [];\n\t      }\n\t      var index = -1,\n\t          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n\t\n\t      iteratee = bindCallback(iteratee, thisArg, 1);\n\t      while (++index < n) {\n\t        if (index < MAX_ARRAY_LENGTH) {\n\t          result[index] = iteratee(index);\n\t        } else {\n\t          iteratee(index);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {string} [prefix] The value to prefix the ID with.\n\t     * @returns {string} Returns the unique ID.\n\t     * @example\n\t     *\n\t     * _.uniqueId('contact_');\n\t     * // => 'contact_104'\n\t     *\n\t     * _.uniqueId();\n\t     * // => '105'\n\t     */\n\t    function uniqueId(prefix) {\n\t      var id = ++idCounter;\n\t      return baseToString(prefix) + id;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Adds two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} augend The first number to add.\n\t     * @param {number} addend The second number to add.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * _.add(6, 4);\n\t     * // => 10\n\t     */\n\t    function add(augend, addend) {\n\t      return (+augend || 0) + (+addend || 0);\n\t    }\n\t\n\t    /**\n\t     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n\t     * `-Infinity` is returned. If an iteratee function is provided it is invoked\n\t     * for each value in `collection` to generate the criterion by which the value\n\t     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, index, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * _.max([4, 2, 8, 6]);\n\t     * // => 8\n\t     *\n\t     * _.max([]);\n\t     * // => -Infinity\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * _.max(users, function(chr) {\n\t     *   return chr.age;\n\t     * });\n\t     * // => { 'user': 'fred', 'age': 40 }\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.max(users, 'age');\n\t     * // => { 'user': 'fred', 'age': 40 }\n\t     */\n\t    var max = createExtremum(arrayMax);\n\t\n\t    /**\n\t     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n\t     * `Infinity` is returned. If an iteratee function is provided it is invoked\n\t     * for each value in `collection` to generate the criterion by which the value\n\t     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, index, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * _.min([4, 2, 8, 6]);\n\t     * // => 2\n\t     *\n\t     * _.min([]);\n\t     * // => Infinity\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * _.min(users, function(chr) {\n\t     *   return chr.age;\n\t     * });\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.min(users, 'age');\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     */\n\t    var min = createExtremum(arrayMin, true);\n\t\n\t    /**\n\t     * Gets the sum of the values in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * _.sum([4, 6]);\n\t     * // => 10\n\t     *\n\t     * _.sum({ 'a': 4, 'b': 6 });\n\t     * // => 10\n\t     *\n\t     * var objects = [\n\t     *   { 'n': 4 },\n\t     *   { 'n': 6 }\n\t     * ];\n\t     *\n\t     * _.sum(objects, function(object) {\n\t     *   return object.n;\n\t     * });\n\t     * // => 10\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.sum(objects, 'n');\n\t     * // => 10\n\t     */\n\t    function sum(collection, iteratee, thisArg) {\n\t      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n\t        iteratee = null;\n\t      }\n\t      var func = getCallback(),\n\t          noIteratee = iteratee == null;\n\t\n\t      if (!(func === baseCallback && noIteratee)) {\n\t        noIteratee = false;\n\t        iteratee = func(iteratee, thisArg, 3);\n\t      }\n\t      return noIteratee\n\t        ? arraySum(isArray(collection) ? collection : toIterable(collection))\n\t        : baseSum(collection, iteratee);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Ensure wrappers are instances of `baseLodash`.\n\t    lodash.prototype = baseLodash.prototype;\n\t\n\t    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LodashWrapper.prototype.constructor = LodashWrapper;\n\t\n\t    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LazyWrapper.prototype.constructor = LazyWrapper;\n\t\n\t    // Add functions to the `Map` cache.\n\t    MapCache.prototype['delete'] = mapDelete;\n\t    MapCache.prototype.get = mapGet;\n\t    MapCache.prototype.has = mapHas;\n\t    MapCache.prototype.set = mapSet;\n\t\n\t    // Add functions to the `Set` cache.\n\t    SetCache.prototype.push = cachePush;\n\t\n\t    // Assign cache to `_.memoize`.\n\t    memoize.Cache = MapCache;\n\t\n\t    // Add functions that return wrapped values when chaining.\n\t    lodash.after = after;\n\t    lodash.ary = ary;\n\t    lodash.assign = assign;\n\t    lodash.at = at;\n\t    lodash.before = before;\n\t    lodash.bind = bind;\n\t    lodash.bindAll = bindAll;\n\t    lodash.bindKey = bindKey;\n\t    lodash.callback = callback;\n\t    lodash.chain = chain;\n\t    lodash.chunk = chunk;\n\t    lodash.compact = compact;\n\t    lodash.constant = constant;\n\t    lodash.countBy = countBy;\n\t    lodash.create = create;\n\t    lodash.curry = curry;\n\t    lodash.curryRight = curryRight;\n\t    lodash.debounce = debounce;\n\t    lodash.defaults = defaults;\n\t    lodash.defer = defer;\n\t    lodash.delay = delay;\n\t    lodash.difference = difference;\n\t    lodash.drop = drop;\n\t    lodash.dropRight = dropRight;\n\t    lodash.dropRightWhile = dropRightWhile;\n\t    lodash.dropWhile = dropWhile;\n\t    lodash.fill = fill;\n\t    lodash.filter = filter;\n\t    lodash.flatten = flatten;\n\t    lodash.flattenDeep = flattenDeep;\n\t    lodash.flow = flow;\n\t    lodash.flowRight = flowRight;\n\t    lodash.forEach = forEach;\n\t    lodash.forEachRight = forEachRight;\n\t    lodash.forIn = forIn;\n\t    lodash.forInRight = forInRight;\n\t    lodash.forOwn = forOwn;\n\t    lodash.forOwnRight = forOwnRight;\n\t    lodash.functions = functions;\n\t    lodash.groupBy = groupBy;\n\t    lodash.indexBy = indexBy;\n\t    lodash.initial = initial;\n\t    lodash.intersection = intersection;\n\t    lodash.invert = invert;\n\t    lodash.invoke = invoke;\n\t    lodash.keys = keys;\n\t    lodash.keysIn = keysIn;\n\t    lodash.map = map;\n\t    lodash.mapValues = mapValues;\n\t    lodash.matches = matches;\n\t    lodash.matchesProperty = matchesProperty;\n\t    lodash.memoize = memoize;\n\t    lodash.merge = merge;\n\t    lodash.method = method;\n\t    lodash.methodOf = methodOf;\n\t    lodash.mixin = mixin;\n\t    lodash.negate = negate;\n\t    lodash.omit = omit;\n\t    lodash.once = once;\n\t    lodash.pairs = pairs;\n\t    lodash.partial = partial;\n\t    lodash.partialRight = partialRight;\n\t    lodash.partition = partition;\n\t    lodash.pick = pick;\n\t    lodash.pluck = pluck;\n\t    lodash.property = property;\n\t    lodash.propertyOf = propertyOf;\n\t    lodash.pull = pull;\n\t    lodash.pullAt = pullAt;\n\t    lodash.range = range;\n\t    lodash.rearg = rearg;\n\t    lodash.reject = reject;\n\t    lodash.remove = remove;\n\t    lodash.rest = rest;\n\t    lodash.restParam = restParam;\n\t    lodash.set = set;\n\t    lodash.shuffle = shuffle;\n\t    lodash.slice = slice;\n\t    lodash.sortBy = sortBy;\n\t    lodash.sortByAll = sortByAll;\n\t    lodash.sortByOrder = sortByOrder;\n\t    lodash.spread = spread;\n\t    lodash.take = take;\n\t    lodash.takeRight = takeRight;\n\t    lodash.takeRightWhile = takeRightWhile;\n\t    lodash.takeWhile = takeWhile;\n\t    lodash.tap = tap;\n\t    lodash.throttle = throttle;\n\t    lodash.thru = thru;\n\t    lodash.times = times;\n\t    lodash.toArray = toArray;\n\t    lodash.toPlainObject = toPlainObject;\n\t    lodash.transform = transform;\n\t    lodash.union = union;\n\t    lodash.uniq = uniq;\n\t    lodash.unzip = unzip;\n\t    lodash.values = values;\n\t    lodash.valuesIn = valuesIn;\n\t    lodash.where = where;\n\t    lodash.without = without;\n\t    lodash.wrap = wrap;\n\t    lodash.xor = xor;\n\t    lodash.zip = zip;\n\t    lodash.zipObject = zipObject;\n\t\n\t    // Add aliases.\n\t    lodash.backflow = flowRight;\n\t    lodash.collect = map;\n\t    lodash.compose = flowRight;\n\t    lodash.each = forEach;\n\t    lodash.eachRight = forEachRight;\n\t    lodash.extend = assign;\n\t    lodash.iteratee = callback;\n\t    lodash.methods = functions;\n\t    lodash.object = zipObject;\n\t    lodash.select = filter;\n\t    lodash.tail = rest;\n\t    lodash.unique = uniq;\n\t\n\t    // Add functions to `lodash.prototype`.\n\t    mixin(lodash, lodash);\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add functions that return unwrapped values when chaining.\n\t    lodash.add = add;\n\t    lodash.attempt = attempt;\n\t    lodash.camelCase = camelCase;\n\t    lodash.capitalize = capitalize;\n\t    lodash.clone = clone;\n\t    lodash.cloneDeep = cloneDeep;\n\t    lodash.deburr = deburr;\n\t    lodash.endsWith = endsWith;\n\t    lodash.escape = escape;\n\t    lodash.escapeRegExp = escapeRegExp;\n\t    lodash.every = every;\n\t    lodash.find = find;\n\t    lodash.findIndex = findIndex;\n\t    lodash.findKey = findKey;\n\t    lodash.findLast = findLast;\n\t    lodash.findLastIndex = findLastIndex;\n\t    lodash.findLastKey = findLastKey;\n\t    lodash.findWhere = findWhere;\n\t    lodash.first = first;\n\t    lodash.get = get;\n\t    lodash.has = has;\n\t    lodash.identity = identity;\n\t    lodash.includes = includes;\n\t    lodash.indexOf = indexOf;\n\t    lodash.inRange = inRange;\n\t    lodash.isArguments = isArguments;\n\t    lodash.isArray = isArray;\n\t    lodash.isBoolean = isBoolean;\n\t    lodash.isDate = isDate;\n\t    lodash.isElement = isElement;\n\t    lodash.isEmpty = isEmpty;\n\t    lodash.isEqual = isEqual;\n\t    lodash.isError = isError;\n\t    lodash.isFinite = isFinite;\n\t    lodash.isFunction = isFunction;\n\t    lodash.isMatch = isMatch;\n\t    lodash.isNaN = isNaN;\n\t    lodash.isNative = isNative;\n\t    lodash.isNull = isNull;\n\t    lodash.isNumber = isNumber;\n\t    lodash.isObject = isObject;\n\t    lodash.isPlainObject = isPlainObject;\n\t    lodash.isRegExp = isRegExp;\n\t    lodash.isString = isString;\n\t    lodash.isTypedArray = isTypedArray;\n\t    lodash.isUndefined = isUndefined;\n\t    lodash.kebabCase = kebabCase;\n\t    lodash.last = last;\n\t    lodash.lastIndexOf = lastIndexOf;\n\t    lodash.max = max;\n\t    lodash.min = min;\n\t    lodash.noConflict = noConflict;\n\t    lodash.noop = noop;\n\t    lodash.now = now;\n\t    lodash.pad = pad;\n\t    lodash.padLeft = padLeft;\n\t    lodash.padRight = padRight;\n\t    lodash.parseInt = parseInt;\n\t    lodash.random = random;\n\t    lodash.reduce = reduce;\n\t    lodash.reduceRight = reduceRight;\n\t    lodash.repeat = repeat;\n\t    lodash.result = result;\n\t    lodash.runInContext = runInContext;\n\t    lodash.size = size;\n\t    lodash.snakeCase = snakeCase;\n\t    lodash.some = some;\n\t    lodash.sortedIndex = sortedIndex;\n\t    lodash.sortedLastIndex = sortedLastIndex;\n\t    lodash.startCase = startCase;\n\t    lodash.startsWith = startsWith;\n\t    lodash.sum = sum;\n\t    lodash.template = template;\n\t    lodash.trim = trim;\n\t    lodash.trimLeft = trimLeft;\n\t    lodash.trimRight = trimRight;\n\t    lodash.trunc = trunc;\n\t    lodash.unescape = unescape;\n\t    lodash.uniqueId = uniqueId;\n\t    lodash.words = words;\n\t\n\t    // Add aliases.\n\t    lodash.all = every;\n\t    lodash.any = some;\n\t    lodash.contains = includes;\n\t    lodash.detect = find;\n\t    lodash.foldl = reduce;\n\t    lodash.foldr = reduceRight;\n\t    lodash.head = first;\n\t    lodash.include = includes;\n\t    lodash.inject = reduce;\n\t\n\t    mixin(lodash, (function() {\n\t      var source = {};\n\t      baseForOwn(lodash, function(func, methodName) {\n\t        if (!lodash.prototype[methodName]) {\n\t          source[methodName] = func;\n\t        }\n\t      });\n\t      return source;\n\t    }()), false);\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add functions capable of returning wrapped and unwrapped values when chaining.\n\t    lodash.sample = sample;\n\t\n\t    lodash.prototype.sample = function(n) {\n\t      if (!this.__chain__ && n == null) {\n\t        return sample(this.value());\n\t      }\n\t      return this.thru(function(value) {\n\t        return sample(value, n);\n\t      });\n\t    };\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The semantic version number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type string\n\t     */\n\t    lodash.VERSION = VERSION;\n\t\n\t    // Assign default placeholders.\n\t    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n\t      lodash[methodName].placeholder = lodash;\n\t    });\n\t\n\t    // Add `LazyWrapper` methods that accept an `iteratee` value.\n\t    arrayEach(['dropWhile', 'filter', 'map', 'takeWhile'], function(methodName, type) {\n\t      var isFilter = type != LAZY_MAP_FLAG,\n\t          isDropWhile = type == LAZY_DROP_WHILE_FLAG;\n\t\n\t      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {\n\t        var filtered = this.__filtered__,\n\t            result = (filtered && isDropWhile) ? new LazyWrapper(this) : this.clone(),\n\t            iteratees = result.__iteratees__ || (result.__iteratees__ = []);\n\t\n\t        iteratees.push({\n\t          'done': false,\n\t          'count': 0,\n\t          'index': 0,\n\t          'iteratee': getCallback(iteratee, thisArg, 1),\n\t          'limit': -1,\n\t          'type': type\n\t        });\n\t\n\t        result.__filtered__ = filtered || isFilter;\n\t        return result;\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n\t    arrayEach(['drop', 'take'], function(methodName, index) {\n\t      var whileName = methodName + 'While';\n\t\n\t      LazyWrapper.prototype[methodName] = function(n) {\n\t        var filtered = this.__filtered__,\n\t            result = (filtered && !index) ? this.dropWhile() : this.clone();\n\t\n\t        n = n == null ? 1 : nativeMax(floor(n) || 0, 0);\n\t        if (filtered) {\n\t          if (index) {\n\t            result.__takeCount__ = nativeMin(result.__takeCount__, n);\n\t          } else {\n\t            last(result.__iteratees__).limit = n;\n\t          }\n\t        } else {\n\t          var views = result.__views__ || (result.__views__ = []);\n\t          views.push({ 'size': n, 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });\n\t        }\n\t        return result;\n\t      };\n\t\n\t      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n\t        return this.reverse()[methodName](n).reverse();\n\t      };\n\t\n\t      LazyWrapper.prototype[methodName + 'RightWhile'] = function(predicate, thisArg) {\n\t        return this.reverse()[whileName](predicate, thisArg).reverse();\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.first` and `_.last`.\n\t    arrayEach(['first', 'last'], function(methodName, index) {\n\t      var takeName = 'take' + (index ? 'Right' : '');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this[takeName](1).value()[0];\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n\t    arrayEach(['initial', 'rest'], function(methodName, index) {\n\t      var dropName = 'drop' + (index ? '' : 'Right');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this[dropName](1);\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n\t    arrayEach(['pluck', 'where'], function(methodName, index) {\n\t      var operationName = index ? 'filter' : 'map',\n\t          createCallback = index ? baseMatches : property;\n\t\n\t      LazyWrapper.prototype[methodName] = function(value) {\n\t        return this[operationName](createCallback(value));\n\t      };\n\t    });\n\t\n\t    LazyWrapper.prototype.compact = function() {\n\t      return this.filter(identity);\n\t    };\n\t\n\t    LazyWrapper.prototype.reject = function(predicate, thisArg) {\n\t      predicate = getCallback(predicate, thisArg, 1);\n\t      return this.filter(function(value) {\n\t        return !predicate(value);\n\t      });\n\t    };\n\t\n\t    LazyWrapper.prototype.slice = function(start, end) {\n\t      start = start == null ? 0 : (+start || 0);\n\t      var result = start < 0 ? this.takeRight(-start) : this.drop(start);\n\t\n\t      if (end !== undefined) {\n\t        end = (+end || 0);\n\t        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n\t      }\n\t      return result;\n\t    };\n\t\n\t    LazyWrapper.prototype.toArray = function() {\n\t      return this.drop(0);\n\t    };\n\t\n\t    // Add `LazyWrapper` methods to `lodash.prototype`.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var lodashFunc = lodash[methodName];\n\t      if (!lodashFunc) {\n\t        return;\n\t      }\n\t      var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName),\n\t          retUnwrapped = /^(?:first|last)$/.test(methodName);\n\t\n\t      lodash.prototype[methodName] = function() {\n\t        var args = arguments,\n\t            length = args.length,\n\t            chainAll = this.__chain__,\n\t            value = this.__wrapped__,\n\t            isHybrid = !!this.__actions__.length,\n\t            isLazy = value instanceof LazyWrapper,\n\t            iteratee = args[0],\n\t            useLazy = isLazy || isArray(value);\n\t\n\t        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n\t          // avoid lazy use if the iteratee has a \"length\" value other than `1`\n\t          isLazy = useLazy = false;\n\t        }\n\t        var onlyLazy = isLazy && !isHybrid;\n\t        if (retUnwrapped && !chainAll) {\n\t          return onlyLazy\n\t            ? func.call(value)\n\t            : lodashFunc.call(lodash, this.value());\n\t        }\n\t        var interceptor = function(value) {\n\t          var otherArgs = [value];\n\t          push.apply(otherArgs, args);\n\t          return lodashFunc.apply(lodash, otherArgs);\n\t        };\n\t        if (useLazy) {\n\t          var wrapper = onlyLazy ? value : new LazyWrapper(this),\n\t              result = func.apply(wrapper, args);\n\t\n\t          if (!retUnwrapped && (isHybrid || result.__actions__)) {\n\t            var actions = result.__actions__ || (result.__actions__ = []);\n\t            actions.push({ 'func': thru, 'args': [interceptor], 'thisArg': lodash });\n\t          }\n\t          return new LodashWrapper(result, chainAll);\n\t        }\n\t        return this.thru(interceptor);\n\t      };\n\t    });\n\t\n\t    // Add `Array` and `String` methods to `lodash.prototype`.\n\t    arrayEach(['concat', 'join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function(methodName) {\n\t      var func = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName],\n\t          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n\t          retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);\n\t\n\t      lodash.prototype[methodName] = function() {\n\t        var args = arguments;\n\t        if (retUnwrapped && !this.__chain__) {\n\t          return func.apply(this.value(), args);\n\t        }\n\t        return this[chainName](function(value) {\n\t          return func.apply(value, args);\n\t        });\n\t      };\n\t    });\n\t\n\t    // Map minified function names to their real names.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var lodashFunc = lodash[methodName];\n\t      if (lodashFunc) {\n\t        var key = lodashFunc.name,\n\t            names = realNames[key] || (realNames[key] = []);\n\t\n\t        names.push({ 'name': methodName, 'func': lodashFunc });\n\t      }\n\t    });\n\t\n\t    realNames[createHybridWrapper(null, BIND_KEY_FLAG).name] = [{ 'name': 'wrapper', 'func': null }];\n\t\n\t    // Add functions to the lazy wrapper.\n\t    LazyWrapper.prototype.clone = lazyClone;\n\t    LazyWrapper.prototype.reverse = lazyReverse;\n\t    LazyWrapper.prototype.value = lazyValue;\n\t\n\t    // Add chaining functions to the `lodash` wrapper.\n\t    lodash.prototype.chain = wrapperChain;\n\t    lodash.prototype.commit = wrapperCommit;\n\t    lodash.prototype.plant = wrapperPlant;\n\t    lodash.prototype.reverse = wrapperReverse;\n\t    lodash.prototype.toString = wrapperToString;\n\t    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\t\n\t    // Add function aliases to the `lodash` wrapper.\n\t    lodash.prototype.collect = lodash.prototype.map;\n\t    lodash.prototype.head = lodash.prototype.first;\n\t    lodash.prototype.select = lodash.prototype.filter;\n\t    lodash.prototype.tail = lodash.prototype.rest;\n\t\n\t    return lodash;\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  // Export lodash.\n\t  var _ = runInContext();\n\t\n\t  // Some AMD build optimizers like r.js check for condition patterns like the following:\n\t  if (true) {\n\t    // Expose lodash to the global object when an AMD loader is present to avoid\n\t    // errors in cases where lodash is loaded by a script tag and not intended\n\t    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n\t    // more details.\n\t    root._ = _;\n\t\n\t    // Define as an anonymous module so, through path mapping, it can be\n\t    // referenced as the \"underscore\" module.\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t      return _;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n\t  else if (freeExports && freeModule) {\n\t    // Export for Node.js or RingoJS.\n\t    if (moduleExports) {\n\t      (freeModule.exports = _)._ = _;\n\t    }\n\t    // Export for Narwhal or Rhino -require.\n\t    else {\n\t      freeExports._ = _;\n\t    }\n\t  }\n\t  else {\n\t    // Export for a browser or Rhino.\n\t    root._ = _;\n\t  }\n\t}.call(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(15)(module), (function() { return this; }())))\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\t * numeral.js\n\t * version : 1.5.3\n\t * author : Adam Draper\n\t * license : MIT\n\t * http://adamwdraper.github.com/Numeral-js/\n\t */\n\t\n\t(function () {\n\t\n\t    /************************************\n\t        Constants\n\t    ************************************/\n\t\n\t    var numeral,\n\t        VERSION = '1.5.3',\n\t        // internal storage for language config files\n\t        languages = {},\n\t        currentLanguage = 'en',\n\t        zeroFormat = null,\n\t        defaultFormat = '0,0',\n\t        // check for nodeJS\n\t        hasModule = (typeof module !== 'undefined' && module.exports);\n\t\n\t\n\t    /************************************\n\t        Constructors\n\t    ************************************/\n\t\n\t\n\t    // Numeral prototype object\n\t    function Numeral (number) {\n\t        this._value = number;\n\t    }\n\t\n\t    /**\n\t     * Implementation of toFixed() that treats floats more like decimals\n\t     *\n\t     * Fixes binary rounding issues (eg. (0.615).toFixed(2) === '0.61') that present\n\t     * problems for accounting- and finance-related software.\n\t     */\n\t    function toFixed (value, precision, roundingFunction, optionals) {\n\t        var power = Math.pow(10, precision),\n\t            optionalsRegExp,\n\t            output;\n\t            \n\t        //roundingFunction = (roundingFunction !== undefined ? roundingFunction : Math.round);\n\t        // Multiply up by precision, round accurately, then divide and use native toFixed():\n\t        output = (roundingFunction(value * power) / power).toFixed(precision);\n\t\n\t        if (optionals) {\n\t            optionalsRegExp = new RegExp('0{1,' + optionals + '}$');\n\t            output = output.replace(optionalsRegExp, '');\n\t        }\n\t\n\t        return output;\n\t    }\n\t\n\t    /************************************\n\t        Formatting\n\t    ************************************/\n\t\n\t    // determine what type of formatting we need to do\n\t    function formatNumeral (n, format, roundingFunction) {\n\t        var output;\n\t\n\t        // figure out what kind of format we are dealing with\n\t        if (format.indexOf('$') > -1) { // currency!!!!!\n\t            output = formatCurrency(n, format, roundingFunction);\n\t        } else if (format.indexOf('%') > -1) { // percentage\n\t            output = formatPercentage(n, format, roundingFunction);\n\t        } else if (format.indexOf(':') > -1) { // time\n\t            output = formatTime(n, format);\n\t        } else { // plain ol' numbers or bytes\n\t            output = formatNumber(n._value, format, roundingFunction);\n\t        }\n\t\n\t        // return string\n\t        return output;\n\t    }\n\t\n\t    // revert to number\n\t    function unformatNumeral (n, string) {\n\t        var stringOriginal = string,\n\t            thousandRegExp,\n\t            millionRegExp,\n\t            billionRegExp,\n\t            trillionRegExp,\n\t            suffixes = ['KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n\t            bytesMultiplier = false,\n\t            power;\n\t\n\t        if (string.indexOf(':') > -1) {\n\t            n._value = unformatTime(string);\n\t        } else {\n\t            if (string === zeroFormat) {\n\t                n._value = 0;\n\t            } else {\n\t                if (languages[currentLanguage].delimiters.decimal !== '.') {\n\t                    string = string.replace(/\\./g,'').replace(languages[currentLanguage].delimiters.decimal, '.');\n\t                }\n\t\n\t                // see if abbreviations are there so that we can multiply to the correct number\n\t                thousandRegExp = new RegExp('[^a-zA-Z]' + languages[currentLanguage].abbreviations.thousand + '(?:\\\\)|(\\\\' + languages[currentLanguage].currency.symbol + ')?(?:\\\\))?)?$');\n\t                millionRegExp = new RegExp('[^a-zA-Z]' + languages[currentLanguage].abbreviations.million + '(?:\\\\)|(\\\\' + languages[currentLanguage].currency.symbol + ')?(?:\\\\))?)?$');\n\t                billionRegExp = new RegExp('[^a-zA-Z]' + languages[currentLanguage].abbreviations.billion + '(?:\\\\)|(\\\\' + languages[currentLanguage].currency.symbol + ')?(?:\\\\))?)?$');\n\t                trillionRegExp = new RegExp('[^a-zA-Z]' + languages[currentLanguage].abbreviations.trillion + '(?:\\\\)|(\\\\' + languages[currentLanguage].currency.symbol + ')?(?:\\\\))?)?$');\n\t\n\t                // see if bytes are there so that we can multiply to the correct number\n\t                for (power = 0; power <= suffixes.length; power++) {\n\t                    bytesMultiplier = (string.indexOf(suffixes[power]) > -1) ? Math.pow(1024, power + 1) : false;\n\t\n\t                    if (bytesMultiplier) {\n\t                        break;\n\t                    }\n\t                }\n\t\n\t                // do some math to create our number\n\t                n._value = ((bytesMultiplier) ? bytesMultiplier : 1) * ((stringOriginal.match(thousandRegExp)) ? Math.pow(10, 3) : 1) * ((stringOriginal.match(millionRegExp)) ? Math.pow(10, 6) : 1) * ((stringOriginal.match(billionRegExp)) ? Math.pow(10, 9) : 1) * ((stringOriginal.match(trillionRegExp)) ? Math.pow(10, 12) : 1) * ((string.indexOf('%') > -1) ? 0.01 : 1) * (((string.split('-').length + Math.min(string.split('(').length-1, string.split(')').length-1)) % 2)? 1: -1) * Number(string.replace(/[^0-9\\.]+/g, ''));\n\t\n\t                // round if we are talking about bytes\n\t                n._value = (bytesMultiplier) ? Math.ceil(n._value) : n._value;\n\t            }\n\t        }\n\t        return n._value;\n\t    }\n\t\n\t    function formatCurrency (n, format, roundingFunction) {\n\t        var symbolIndex = format.indexOf('$'),\n\t            openParenIndex = format.indexOf('('),\n\t            minusSignIndex = format.indexOf('-'),\n\t            space = '',\n\t            spliceIndex,\n\t            output;\n\t\n\t        // check for space before or after currency\n\t        if (format.indexOf(' $') > -1) {\n\t            space = ' ';\n\t            format = format.replace(' $', '');\n\t        } else if (format.indexOf('$ ') > -1) {\n\t            space = ' ';\n\t            format = format.replace('$ ', '');\n\t        } else {\n\t            format = format.replace('$', '');\n\t        }\n\t\n\t        // format the number\n\t        output = formatNumber(n._value, format, roundingFunction);\n\t\n\t        // position the symbol\n\t        if (symbolIndex <= 1) {\n\t            if (output.indexOf('(') > -1 || output.indexOf('-') > -1) {\n\t                output = output.split('');\n\t                spliceIndex = 1;\n\t                if (symbolIndex < openParenIndex || symbolIndex < minusSignIndex){\n\t                    // the symbol appears before the \"(\" or \"-\"\n\t                    spliceIndex = 0;\n\t                }\n\t                output.splice(spliceIndex, 0, languages[currentLanguage].currency.symbol + space);\n\t                output = output.join('');\n\t            } else {\n\t                output = languages[currentLanguage].currency.symbol + space + output;\n\t            }\n\t        } else {\n\t            if (output.indexOf(')') > -1) {\n\t                output = output.split('');\n\t                output.splice(-1, 0, space + languages[currentLanguage].currency.symbol);\n\t                output = output.join('');\n\t            } else {\n\t                output = output + space + languages[currentLanguage].currency.symbol;\n\t            }\n\t        }\n\t\n\t        return output;\n\t    }\n\t\n\t    function formatPercentage (n, format, roundingFunction) {\n\t        var space = '',\n\t            output,\n\t            value = n._value * 100;\n\t\n\t        // check for space before %\n\t        if (format.indexOf(' %') > -1) {\n\t            space = ' ';\n\t            format = format.replace(' %', '');\n\t        } else {\n\t            format = format.replace('%', '');\n\t        }\n\t\n\t        output = formatNumber(value, format, roundingFunction);\n\t        \n\t        if (output.indexOf(')') > -1 ) {\n\t            output = output.split('');\n\t            output.splice(-1, 0, space + '%');\n\t            output = output.join('');\n\t        } else {\n\t            output = output + space + '%';\n\t        }\n\t\n\t        return output;\n\t    }\n\t\n\t    function formatTime (n) {\n\t        var hours = Math.floor(n._value/60/60),\n\t            minutes = Math.floor((n._value - (hours * 60 * 60))/60),\n\t            seconds = Math.round(n._value - (hours * 60 * 60) - (minutes * 60));\n\t        return hours + ':' + ((minutes < 10) ? '0' + minutes : minutes) + ':' + ((seconds < 10) ? '0' + seconds : seconds);\n\t    }\n\t\n\t    function unformatTime (string) {\n\t        var timeArray = string.split(':'),\n\t            seconds = 0;\n\t        // turn hours and minutes into seconds and add them all up\n\t        if (timeArray.length === 3) {\n\t            // hours\n\t            seconds = seconds + (Number(timeArray[0]) * 60 * 60);\n\t            // minutes\n\t            seconds = seconds + (Number(timeArray[1]) * 60);\n\t            // seconds\n\t            seconds = seconds + Number(timeArray[2]);\n\t        } else if (timeArray.length === 2) {\n\t            // minutes\n\t            seconds = seconds + (Number(timeArray[0]) * 60);\n\t            // seconds\n\t            seconds = seconds + Number(timeArray[1]);\n\t        }\n\t        return Number(seconds);\n\t    }\n\t\n\t    function formatNumber (value, format, roundingFunction) {\n\t        var negP = false,\n\t            signed = false,\n\t            optDec = false,\n\t            abbr = '',\n\t            abbrK = false, // force abbreviation to thousands\n\t            abbrM = false, // force abbreviation to millions\n\t            abbrB = false, // force abbreviation to billions\n\t            abbrT = false, // force abbreviation to trillions\n\t            abbrForce = false, // force abbreviation\n\t            bytes = '',\n\t            ord = '',\n\t            abs = Math.abs(value),\n\t            suffixes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n\t            min,\n\t            max,\n\t            power,\n\t            w,\n\t            precision,\n\t            thousands,\n\t            d = '',\n\t            neg = false;\n\t\n\t        // check if number is zero and a custom zero format has been set\n\t        if (value === 0 && zeroFormat !== null) {\n\t            return zeroFormat;\n\t        } else {\n\t            // see if we should use parentheses for negative number or if we should prefix with a sign\n\t            // if both are present we default to parentheses\n\t            if (format.indexOf('(') > -1) {\n\t                negP = true;\n\t                format = format.slice(1, -1);\n\t            } else if (format.indexOf('+') > -1) {\n\t                signed = true;\n\t                format = format.replace(/\\+/g, '');\n\t            }\n\t\n\t            // see if abbreviation is wanted\n\t            if (format.indexOf('a') > -1) {\n\t                // check if abbreviation is specified\n\t                abbrK = format.indexOf('aK') >= 0;\n\t                abbrM = format.indexOf('aM') >= 0;\n\t                abbrB = format.indexOf('aB') >= 0;\n\t                abbrT = format.indexOf('aT') >= 0;\n\t                abbrForce = abbrK || abbrM || abbrB || abbrT;\n\t\n\t                // check for space before abbreviation\n\t                if (format.indexOf(' a') > -1) {\n\t                    abbr = ' ';\n\t                    format = format.replace(' a', '');\n\t                } else {\n\t                    format = format.replace('a', '');\n\t                }\n\t\n\t                if (abs >= Math.pow(10, 12) && !abbrForce || abbrT) {\n\t                    // trillion\n\t                    abbr = abbr + languages[currentLanguage].abbreviations.trillion;\n\t                    value = value / Math.pow(10, 12);\n\t                } else if (abs < Math.pow(10, 12) && abs >= Math.pow(10, 9) && !abbrForce || abbrB) {\n\t                    // billion\n\t                    abbr = abbr + languages[currentLanguage].abbreviations.billion;\n\t                    value = value / Math.pow(10, 9);\n\t                } else if (abs < Math.pow(10, 9) && abs >= Math.pow(10, 6) && !abbrForce || abbrM) {\n\t                    // million\n\t                    abbr = abbr + languages[currentLanguage].abbreviations.million;\n\t                    value = value / Math.pow(10, 6);\n\t                } else if (abs < Math.pow(10, 6) && abs >= Math.pow(10, 3) && !abbrForce || abbrK) {\n\t                    // thousand\n\t                    abbr = abbr + languages[currentLanguage].abbreviations.thousand;\n\t                    value = value / Math.pow(10, 3);\n\t                }\n\t            }\n\t\n\t            // see if we are formatting bytes\n\t            if (format.indexOf('b') > -1) {\n\t                // check for space before\n\t                if (format.indexOf(' b') > -1) {\n\t                    bytes = ' ';\n\t                    format = format.replace(' b', '');\n\t                } else {\n\t                    format = format.replace('b', '');\n\t                }\n\t\n\t                for (power = 0; power <= suffixes.length; power++) {\n\t                    min = Math.pow(1024, power);\n\t                    max = Math.pow(1024, power+1);\n\t\n\t                    if (value >= min && value < max) {\n\t                        bytes = bytes + suffixes[power];\n\t                        if (min > 0) {\n\t                            value = value / min;\n\t                        }\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t\n\t            // see if ordinal is wanted\n\t            if (format.indexOf('o') > -1) {\n\t                // check for space before\n\t                if (format.indexOf(' o') > -1) {\n\t                    ord = ' ';\n\t                    format = format.replace(' o', '');\n\t                } else {\n\t                    format = format.replace('o', '');\n\t                }\n\t\n\t                ord = ord + languages[currentLanguage].ordinal(value);\n\t            }\n\t\n\t            if (format.indexOf('[.]') > -1) {\n\t                optDec = true;\n\t                format = format.replace('[.]', '.');\n\t            }\n\t\n\t            w = value.toString().split('.')[0];\n\t            precision = format.split('.')[1];\n\t            thousands = format.indexOf(',');\n\t\n\t            if (precision) {\n\t                if (precision.indexOf('[') > -1) {\n\t                    precision = precision.replace(']', '');\n\t                    precision = precision.split('[');\n\t                    d = toFixed(value, (precision[0].length + precision[1].length), roundingFunction, precision[1].length);\n\t                } else {\n\t                    d = toFixed(value, precision.length, roundingFunction);\n\t                }\n\t\n\t                w = d.split('.')[0];\n\t\n\t                if (d.split('.')[1].length) {\n\t                    d = languages[currentLanguage].delimiters.decimal + d.split('.')[1];\n\t                } else {\n\t                    d = '';\n\t                }\n\t\n\t                if (optDec && Number(d.slice(1)) === 0) {\n\t                    d = '';\n\t                }\n\t            } else {\n\t                w = toFixed(value, null, roundingFunction);\n\t            }\n\t\n\t            // format number\n\t            if (w.indexOf('-') > -1) {\n\t                w = w.slice(1);\n\t                neg = true;\n\t            }\n\t\n\t            if (thousands > -1) {\n\t                w = w.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1' + languages[currentLanguage].delimiters.thousands);\n\t            }\n\t\n\t            if (format.indexOf('.') === 0) {\n\t                w = '';\n\t            }\n\t\n\t            return ((negP && neg) ? '(' : '') + ((!negP && neg) ? '-' : '') + ((!neg && signed) ? '+' : '') + w + d + ((ord) ? ord : '') + ((abbr) ? abbr : '') + ((bytes) ? bytes : '') + ((negP && neg) ? ')' : '');\n\t        }\n\t    }\n\t\n\t    /************************************\n\t        Top Level Functions\n\t    ************************************/\n\t\n\t    numeral = function (input) {\n\t        if (numeral.isNumeral(input)) {\n\t            input = input.value();\n\t        } else if (input === 0 || typeof input === 'undefined') {\n\t            input = 0;\n\t        } else if (!Number(input)) {\n\t            input = numeral.fn.unformat(input);\n\t        }\n\t\n\t        return new Numeral(Number(input));\n\t    };\n\t\n\t    // version number\n\t    numeral.version = VERSION;\n\t\n\t    // compare numeral object\n\t    numeral.isNumeral = function (obj) {\n\t        return obj instanceof Numeral;\n\t    };\n\t\n\t    // This function will load languages and then set the global language.  If\n\t    // no arguments are passed in, it will simply return the current global\n\t    // language key.\n\t    numeral.language = function (key, values) {\n\t        if (!key) {\n\t            return currentLanguage;\n\t        }\n\t\n\t        if (key && !values) {\n\t            if(!languages[key]) {\n\t                throw new Error('Unknown language : ' + key);\n\t            }\n\t            currentLanguage = key;\n\t        }\n\t\n\t        if (values || !languages[key]) {\n\t            loadLanguage(key, values);\n\t        }\n\t\n\t        return numeral;\n\t    };\n\t    \n\t    // This function provides access to the loaded language data.  If\n\t    // no arguments are passed in, it will simply return the current\n\t    // global language object.\n\t    numeral.languageData = function (key) {\n\t        if (!key) {\n\t            return languages[currentLanguage];\n\t        }\n\t        \n\t        if (!languages[key]) {\n\t            throw new Error('Unknown language : ' + key);\n\t        }\n\t        \n\t        return languages[key];\n\t    };\n\t\n\t    numeral.language('en', {\n\t        delimiters: {\n\t            thousands: ',',\n\t            decimal: '.'\n\t        },\n\t        abbreviations: {\n\t            thousand: 'k',\n\t            million: 'm',\n\t            billion: 'b',\n\t            trillion: 't'\n\t        },\n\t        ordinal: function (number) {\n\t            var b = number % 10;\n\t            return (~~ (number % 100 / 10) === 1) ? 'th' :\n\t                (b === 1) ? 'st' :\n\t                (b === 2) ? 'nd' :\n\t                (b === 3) ? 'rd' : 'th';\n\t        },\n\t        currency: {\n\t            symbol: '$'\n\t        }\n\t    });\n\t\n\t    numeral.zeroFormat = function (format) {\n\t        zeroFormat = typeof(format) === 'string' ? format : null;\n\t    };\n\t\n\t    numeral.defaultFormat = function (format) {\n\t        defaultFormat = typeof(format) === 'string' ? format : '0.0';\n\t    };\n\t\n\t    /************************************\n\t        Helpers\n\t    ************************************/\n\t\n\t    function loadLanguage(key, values) {\n\t        languages[key] = values;\n\t    }\n\t\n\t    /************************************\n\t        Floating-point helpers\n\t    ************************************/\n\t\n\t    // The floating-point helper functions and implementation\n\t    // borrows heavily from sinful.js: http://guipn.github.io/sinful.js/\n\t\n\t    /**\n\t     * Array.prototype.reduce for browsers that don't support it\n\t     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce#Compatibility\n\t     */\n\t    if ('function' !== typeof Array.prototype.reduce) {\n\t        Array.prototype.reduce = function (callback, opt_initialValue) {\n\t            'use strict';\n\t            \n\t            if (null === this || 'undefined' === typeof this) {\n\t                // At the moment all modern browsers, that support strict mode, have\n\t                // native implementation of Array.prototype.reduce. For instance, IE8\n\t                // does not support strict mode, so this check is actually useless.\n\t                throw new TypeError('Array.prototype.reduce called on null or undefined');\n\t            }\n\t            \n\t            if ('function' !== typeof callback) {\n\t                throw new TypeError(callback + ' is not a function');\n\t            }\n\t\n\t            var index,\n\t                value,\n\t                length = this.length >>> 0,\n\t                isValueSet = false;\n\t\n\t            if (1 < arguments.length) {\n\t                value = opt_initialValue;\n\t                isValueSet = true;\n\t            }\n\t\n\t            for (index = 0; length > index; ++index) {\n\t                if (this.hasOwnProperty(index)) {\n\t                    if (isValueSet) {\n\t                        value = callback(value, this[index], index, this);\n\t                    } else {\n\t                        value = this[index];\n\t                        isValueSet = true;\n\t                    }\n\t                }\n\t            }\n\t\n\t            if (!isValueSet) {\n\t                throw new TypeError('Reduce of empty array with no initial value');\n\t            }\n\t\n\t            return value;\n\t        };\n\t    }\n\t\n\t    \n\t    /**\n\t     * Computes the multiplier necessary to make x >= 1,\n\t     * effectively eliminating miscalculations caused by\n\t     * finite precision.\n\t     */\n\t    function multiplier(x) {\n\t        var parts = x.toString().split('.');\n\t        if (parts.length < 2) {\n\t            return 1;\n\t        }\n\t        return Math.pow(10, parts[1].length);\n\t    }\n\t\n\t    /**\n\t     * Given a variable number of arguments, returns the maximum\n\t     * multiplier that must be used to normalize an operation involving\n\t     * all of them.\n\t     */\n\t    function correctionFactor() {\n\t        var args = Array.prototype.slice.call(arguments);\n\t        return args.reduce(function (prev, next) {\n\t            var mp = multiplier(prev),\n\t                mn = multiplier(next);\n\t        return mp > mn ? mp : mn;\n\t        }, -Infinity);\n\t    }        \n\t\n\t\n\t    /************************************\n\t        Numeral Prototype\n\t    ************************************/\n\t\n\t\n\t    numeral.fn = Numeral.prototype = {\n\t\n\t        clone : function () {\n\t            return numeral(this);\n\t        },\n\t\n\t        format : function (inputString, roundingFunction) {\n\t            return formatNumeral(this, \n\t                  inputString ? inputString : defaultFormat, \n\t                  (roundingFunction !== undefined) ? roundingFunction : Math.round\n\t              );\n\t        },\n\t\n\t        unformat : function (inputString) {\n\t            if (Object.prototype.toString.call(inputString) === '[object Number]') { \n\t                return inputString; \n\t            }\n\t            return unformatNumeral(this, inputString ? inputString : defaultFormat);\n\t        },\n\t\n\t        value : function () {\n\t            return this._value;\n\t        },\n\t\n\t        valueOf : function () {\n\t            return this._value;\n\t        },\n\t\n\t        set : function (value) {\n\t            this._value = Number(value);\n\t            return this;\n\t        },\n\t\n\t        add : function (value) {\n\t            var corrFactor = correctionFactor.call(null, this._value, value);\n\t            function cback(accum, curr, currI, O) {\n\t                return accum + corrFactor * curr;\n\t            }\n\t            this._value = [this._value, value].reduce(cback, 0) / corrFactor;\n\t            return this;\n\t        },\n\t\n\t        subtract : function (value) {\n\t            var corrFactor = correctionFactor.call(null, this._value, value);\n\t            function cback(accum, curr, currI, O) {\n\t                return accum - corrFactor * curr;\n\t            }\n\t            this._value = [value].reduce(cback, this._value * corrFactor) / corrFactor;            \n\t            return this;\n\t        },\n\t\n\t        multiply : function (value) {\n\t            function cback(accum, curr, currI, O) {\n\t                var corrFactor = correctionFactor(accum, curr);\n\t                return (accum * corrFactor) * (curr * corrFactor) /\n\t                    (corrFactor * corrFactor);\n\t            }\n\t            this._value = [this._value, value].reduce(cback, 1);\n\t            return this;\n\t        },\n\t\n\t        divide : function (value) {\n\t            function cback(accum, curr, currI, O) {\n\t                var corrFactor = correctionFactor(accum, curr);\n\t                return (accum * corrFactor) / (curr * corrFactor);\n\t            }\n\t            this._value = [this._value, value].reduce(cback);            \n\t            return this;\n\t        },\n\t\n\t        difference : function (value) {\n\t            return Math.abs(numeral(this._value).subtract(value).value());\n\t        }\n\t\n\t    };\n\t\n\t    /************************************\n\t        Exposing Numeral\n\t    ************************************/\n\t\n\t    // CommonJS module is defined\n\t    if (hasModule) {\n\t        module.exports = numeral;\n\t    }\n\t\n\t    /*global ender:false */\n\t    if (typeof ender === 'undefined') {\n\t        // here, `this` means `window` in the browser, or `global` on the server\n\t        // add `numeral` as a global object via a string identifier,\n\t        // for Closure Compiler 'advanced' mode\n\t        this['numeral'] = numeral;\n\t    }\n\t\n\t    /*global define:false */\n\t    if (true) {\n\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t            return numeral;\n\t        }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    }\n\t}).call(this);\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar Emitter = __webpack_require__(16);\n\tvar reduce = __webpack_require__(17);\n\t\n\t/**\n\t * Root reference for iframes.\n\t */\n\t\n\tvar root = 'undefined' == typeof window\n\t  ? (this || self)\n\t  : window;\n\t\n\t/**\n\t * Noop.\n\t */\n\t\n\tfunction noop(){};\n\t\n\t/**\n\t * Check if `obj` is a host object,\n\t * we don't want to serialize these :)\n\t *\n\t * TODO: future proof, move to compoent land\n\t *\n\t * @param {Object} obj\n\t * @return {Boolean}\n\t * @api private\n\t */\n\t\n\tfunction isHost(obj) {\n\t  var str = {}.toString.call(obj);\n\t\n\t  switch (str) {\n\t    case '[object File]':\n\t    case '[object Blob]':\n\t    case '[object FormData]':\n\t      return true;\n\t    default:\n\t      return false;\n\t  }\n\t}\n\t\n\t/**\n\t * Determine XHR.\n\t */\n\t\n\trequest.getXHR = function () {\n\t  if (root.XMLHttpRequest\n\t      && (!root.location || 'file:' != root.location.protocol\n\t          || !root.ActiveXObject)) {\n\t    return new XMLHttpRequest;\n\t  } else {\n\t    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n\t    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n\t    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n\t    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n\t  }\n\t  return false;\n\t};\n\t\n\t/**\n\t * Removes leading and trailing whitespace, added to support IE.\n\t *\n\t * @param {String} s\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tvar trim = ''.trim\n\t  ? function(s) { return s.trim(); }\n\t  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\t\n\t/**\n\t * Check if `obj` is an object.\n\t *\n\t * @param {Object} obj\n\t * @return {Boolean}\n\t * @api private\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj === Object(obj);\n\t}\n\t\n\t/**\n\t * Serialize the given `obj`.\n\t *\n\t * @param {Object} obj\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction serialize(obj) {\n\t  if (!isObject(obj)) return obj;\n\t  var pairs = [];\n\t  for (var key in obj) {\n\t    if (null != obj[key]) {\n\t      pairs.push(encodeURIComponent(key)\n\t        + '=' + encodeURIComponent(obj[key]));\n\t    }\n\t  }\n\t  return pairs.join('&');\n\t}\n\t\n\t/**\n\t * Expose serialization method.\n\t */\n\t\n\t request.serializeObject = serialize;\n\t\n\t /**\n\t  * Parse the given x-www-form-urlencoded `str`.\n\t  *\n\t  * @param {String} str\n\t  * @return {Object}\n\t  * @api private\n\t  */\n\t\n\tfunction parseString(str) {\n\t  var obj = {};\n\t  var pairs = str.split('&');\n\t  var parts;\n\t  var pair;\n\t\n\t  for (var i = 0, len = pairs.length; i < len; ++i) {\n\t    pair = pairs[i];\n\t    parts = pair.split('=');\n\t    obj[decodeURIComponent(parts[0])] = decodeURIComponent(parts[1]);\n\t  }\n\t\n\t  return obj;\n\t}\n\t\n\t/**\n\t * Expose parser.\n\t */\n\t\n\trequest.parseString = parseString;\n\t\n\t/**\n\t * Default MIME type map.\n\t *\n\t *     superagent.types.xml = 'application/xml';\n\t *\n\t */\n\t\n\trequest.types = {\n\t  html: 'text/html',\n\t  json: 'application/json',\n\t  xml: 'application/xml',\n\t  urlencoded: 'application/x-www-form-urlencoded',\n\t  'form': 'application/x-www-form-urlencoded',\n\t  'form-data': 'application/x-www-form-urlencoded'\n\t};\n\t\n\t/**\n\t * Default serialization map.\n\t *\n\t *     superagent.serialize['application/xml'] = function(obj){\n\t *       return 'generated xml here';\n\t *     };\n\t *\n\t */\n\t\n\t request.serialize = {\n\t   'application/x-www-form-urlencoded': serialize,\n\t   'application/json': JSON.stringify\n\t };\n\t\n\t /**\n\t  * Default parsers.\n\t  *\n\t  *     superagent.parse['application/xml'] = function(str){\n\t  *       return { object parsed from str };\n\t  *     };\n\t  *\n\t  */\n\t\n\trequest.parse = {\n\t  'application/x-www-form-urlencoded': parseString,\n\t  'application/json': JSON.parse\n\t};\n\t\n\t/**\n\t * Parse the given header `str` into\n\t * an object containing the mapped fields.\n\t *\n\t * @param {String} str\n\t * @return {Object}\n\t * @api private\n\t */\n\t\n\tfunction parseHeader(str) {\n\t  var lines = str.split(/\\r?\\n/);\n\t  var fields = {};\n\t  var index;\n\t  var line;\n\t  var field;\n\t  var val;\n\t\n\t  lines.pop(); // trailing CRLF\n\t\n\t  for (var i = 0, len = lines.length; i < len; ++i) {\n\t    line = lines[i];\n\t    index = line.indexOf(':');\n\t    field = line.slice(0, index).toLowerCase();\n\t    val = trim(line.slice(index + 1));\n\t    fields[field] = val;\n\t  }\n\t\n\t  return fields;\n\t}\n\t\n\t/**\n\t * Return the mime type for the given `str`.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction type(str){\n\t  return str.split(/ *; */).shift();\n\t};\n\t\n\t/**\n\t * Return header field parameters.\n\t *\n\t * @param {String} str\n\t * @return {Object}\n\t * @api private\n\t */\n\t\n\tfunction params(str){\n\t  return reduce(str.split(/ *; */), function(obj, str){\n\t    var parts = str.split(/ *= */)\n\t      , key = parts.shift()\n\t      , val = parts.shift();\n\t\n\t    if (key && val) obj[key] = val;\n\t    return obj;\n\t  }, {});\n\t};\n\t\n\t/**\n\t * Initialize a new `Response` with the given `xhr`.\n\t *\n\t *  - set flags (.ok, .error, etc)\n\t *  - parse header\n\t *\n\t * Examples:\n\t *\n\t *  Aliasing `superagent` as `request` is nice:\n\t *\n\t *      request = superagent;\n\t *\n\t *  We can use the promise-like API, or pass callbacks:\n\t *\n\t *      request.get('/').end(function(res){});\n\t *      request.get('/', function(res){});\n\t *\n\t *  Sending data can be chained:\n\t *\n\t *      request\n\t *        .post('/user')\n\t *        .send({ name: 'tj' })\n\t *        .end(function(res){});\n\t *\n\t *  Or passed to `.send()`:\n\t *\n\t *      request\n\t *        .post('/user')\n\t *        .send({ name: 'tj' }, function(res){});\n\t *\n\t *  Or passed to `.post()`:\n\t *\n\t *      request\n\t *        .post('/user', { name: 'tj' })\n\t *        .end(function(res){});\n\t *\n\t * Or further reduced to a single call for simple cases:\n\t *\n\t *      request\n\t *        .post('/user', { name: 'tj' }, function(res){});\n\t *\n\t * @param {XMLHTTPRequest} xhr\n\t * @param {Object} options\n\t * @api private\n\t */\n\t\n\tfunction Response(req, options) {\n\t  options = options || {};\n\t  this.req = req;\n\t  this.xhr = this.req.xhr;\n\t  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n\t  this.text = ((this.req.method !='HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text')) || typeof this.xhr.responseType === 'undefined')\n\t     ? this.xhr.responseText\n\t     : null;\n\t  this.statusText = this.req.xhr.statusText;\n\t  this.setStatusProperties(this.xhr.status);\n\t  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n\t  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n\t  // getResponseHeader still works. so we get content-type even if getting\n\t  // other headers fails.\n\t  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n\t  this.setHeaderProperties(this.header);\n\t  this.body = this.req.method != 'HEAD'\n\t    ? this.parseBody(this.text ? this.text : this.xhr.response)\n\t    : null;\n\t}\n\t\n\t/**\n\t * Get case-insensitive `field` value.\n\t *\n\t * @param {String} field\n\t * @return {String}\n\t * @api public\n\t */\n\t\n\tResponse.prototype.get = function(field){\n\t  return this.header[field.toLowerCase()];\n\t};\n\t\n\t/**\n\t * Set header related properties:\n\t *\n\t *   - `.type` the content type without params\n\t *\n\t * A response of \"Content-Type: text/plain; charset=utf-8\"\n\t * will provide you with a `.type` of \"text/plain\".\n\t *\n\t * @param {Object} header\n\t * @api private\n\t */\n\t\n\tResponse.prototype.setHeaderProperties = function(header){\n\t  // content-type\n\t  var ct = this.header['content-type'] || '';\n\t  this.type = type(ct);\n\t\n\t  // params\n\t  var obj = params(ct);\n\t  for (var key in obj) this[key] = obj[key];\n\t};\n\t\n\t/**\n\t * Parse the given body `str`.\n\t *\n\t * Used for auto-parsing of bodies. Parsers\n\t * are defined on the `superagent.parse` object.\n\t *\n\t * @param {String} str\n\t * @return {Mixed}\n\t * @api private\n\t */\n\t\n\tResponse.prototype.parseBody = function(str){\n\t  var parse = request.parse[this.type];\n\t  return parse && str && (str.length || str instanceof Object)\n\t    ? parse(str)\n\t    : null;\n\t};\n\t\n\t/**\n\t * Set flags such as `.ok` based on `status`.\n\t *\n\t * For example a 2xx response will give you a `.ok` of __true__\n\t * whereas 5xx will be __false__ and `.error` will be __true__. The\n\t * `.clientError` and `.serverError` are also available to be more\n\t * specific, and `.statusType` is the class of error ranging from 1..5\n\t * sometimes useful for mapping respond colors etc.\n\t *\n\t * \"sugar\" properties are also defined for common cases. Currently providing:\n\t *\n\t *   - .noContent\n\t *   - .badRequest\n\t *   - .unauthorized\n\t *   - .notAcceptable\n\t *   - .notFound\n\t *\n\t * @param {Number} status\n\t * @api private\n\t */\n\t\n\tResponse.prototype.setStatusProperties = function(status){\n\t  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n\t  if (status === 1223) {\n\t    status = 204;\n\t  }\n\t\n\t  var type = status / 100 | 0;\n\t\n\t  // status / class\n\t  this.status = status;\n\t  this.statusType = type;\n\t\n\t  // basics\n\t  this.info = 1 == type;\n\t  this.ok = 2 == type;\n\t  this.clientError = 4 == type;\n\t  this.serverError = 5 == type;\n\t  this.error = (4 == type || 5 == type)\n\t    ? this.toError()\n\t    : false;\n\t\n\t  // sugar\n\t  this.accepted = 202 == status;\n\t  this.noContent = 204 == status;\n\t  this.badRequest = 400 == status;\n\t  this.unauthorized = 401 == status;\n\t  this.notAcceptable = 406 == status;\n\t  this.notFound = 404 == status;\n\t  this.forbidden = 403 == status;\n\t};\n\t\n\t/**\n\t * Return an `Error` representative of this response.\n\t *\n\t * @return {Error}\n\t * @api public\n\t */\n\t\n\tResponse.prototype.toError = function(){\n\t  var req = this.req;\n\t  var method = req.method;\n\t  var url = req.url;\n\t\n\t  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';\n\t  var err = new Error(msg);\n\t  err.status = this.status;\n\t  err.method = method;\n\t  err.url = url;\n\t\n\t  return err;\n\t};\n\t\n\t/**\n\t * Expose `Response`.\n\t */\n\t\n\trequest.Response = Response;\n\t\n\t/**\n\t * Initialize a new `Request` with the given `method` and `url`.\n\t *\n\t * @param {String} method\n\t * @param {String} url\n\t * @api public\n\t */\n\t\n\tfunction Request(method, url) {\n\t  var self = this;\n\t  Emitter.call(this);\n\t  this._query = this._query || [];\n\t  this.method = method;\n\t  this.url = url;\n\t  this.header = {};\n\t  this._header = {};\n\t  this.on('end', function(){\n\t    var err = null;\n\t    var res = null;\n\t\n\t    try {\n\t      res = new Response(self);\n\t    } catch(e) {\n\t      err = new Error('Parser is unable to parse the response');\n\t      err.parse = true;\n\t      err.original = e;\n\t      return self.callback(err);\n\t    }\n\t\n\t    self.emit('response', res);\n\t\n\t    if (err) {\n\t      return self.callback(err, res);\n\t    }\n\t\n\t    if (res.status >= 200 && res.status < 300) {\n\t      return self.callback(err, res);\n\t    }\n\t\n\t    var new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n\t    new_err.original = err;\n\t    new_err.response = res;\n\t    new_err.status = res.status;\n\t\n\t    self.callback(err || new_err, res);\n\t  });\n\t}\n\t\n\t/**\n\t * Mixin `Emitter`.\n\t */\n\t\n\tEmitter(Request.prototype);\n\t\n\t/**\n\t * Allow for extension\n\t */\n\t\n\tRequest.prototype.use = function(fn) {\n\t  fn(this);\n\t  return this;\n\t}\n\t\n\t/**\n\t * Set timeout to `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.timeout = function(ms){\n\t  this._timeout = ms;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Clear previous timeout.\n\t *\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.clearTimeout = function(){\n\t  this._timeout = 0;\n\t  clearTimeout(this._timer);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Abort the request, and clear potential timeout.\n\t *\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\tRequest.prototype.abort = function(){\n\t  if (this.aborted) return;\n\t  this.aborted = true;\n\t  this.xhr.abort();\n\t  this.clearTimeout();\n\t  this.emit('abort');\n\t  return this;\n\t};\n\t\n\t/**\n\t * Set header `field` to `val`, or multiple fields with one object.\n\t *\n\t * Examples:\n\t *\n\t *      req.get('/')\n\t *        .set('Accept', 'application/json')\n\t *        .set('X-API-Key', 'foobar')\n\t *        .end(callback);\n\t *\n\t *      req.get('/')\n\t *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n\t *        .end(callback);\n\t *\n\t * @param {String|Object} field\n\t * @param {String} val\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.set = function(field, val){\n\t  if (isObject(field)) {\n\t    for (var key in field) {\n\t      this.set(key, field[key]);\n\t    }\n\t    return this;\n\t  }\n\t  this._header[field.toLowerCase()] = val;\n\t  this.header[field] = val;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Remove header `field`.\n\t *\n\t * Example:\n\t *\n\t *      req.get('/')\n\t *        .unset('User-Agent')\n\t *        .end(callback);\n\t *\n\t * @param {String} field\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.unset = function(field){\n\t  delete this._header[field.toLowerCase()];\n\t  delete this.header[field];\n\t  return this;\n\t};\n\t\n\t/**\n\t * Get case-insensitive header `field` value.\n\t *\n\t * @param {String} field\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tRequest.prototype.getHeader = function(field){\n\t  return this._header[field.toLowerCase()];\n\t};\n\t\n\t/**\n\t * Set Content-Type to `type`, mapping values from `request.types`.\n\t *\n\t * Examples:\n\t *\n\t *      superagent.types.xml = 'application/xml';\n\t *\n\t *      request.post('/')\n\t *        .type('xml')\n\t *        .send(xmlstring)\n\t *        .end(callback);\n\t *\n\t *      request.post('/')\n\t *        .type('application/xml')\n\t *        .send(xmlstring)\n\t *        .end(callback);\n\t *\n\t * @param {String} type\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.type = function(type){\n\t  this.set('Content-Type', request.types[type] || type);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Set Accept to `type`, mapping values from `request.types`.\n\t *\n\t * Examples:\n\t *\n\t *      superagent.types.json = 'application/json';\n\t *\n\t *      request.get('/agent')\n\t *        .accept('json')\n\t *        .end(callback);\n\t *\n\t *      request.get('/agent')\n\t *        .accept('application/json')\n\t *        .end(callback);\n\t *\n\t * @param {String} accept\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.accept = function(type){\n\t  this.set('Accept', request.types[type] || type);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Set Authorization field value with `user` and `pass`.\n\t *\n\t * @param {String} user\n\t * @param {String} pass\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.auth = function(user, pass){\n\t  var str = btoa(user + ':' + pass);\n\t  this.set('Authorization', 'Basic ' + str);\n\t  return this;\n\t};\n\t\n\t/**\n\t* Add query-string `val`.\n\t*\n\t* Examples:\n\t*\n\t*   request.get('/shoes')\n\t*     .query('size=10')\n\t*     .query({ color: 'blue' })\n\t*\n\t* @param {Object|String} val\n\t* @return {Request} for chaining\n\t* @api public\n\t*/\n\t\n\tRequest.prototype.query = function(val){\n\t  if ('string' != typeof val) val = serialize(val);\n\t  if (val) this._query.push(val);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Write the field `name` and `val` for \"multipart/form-data\"\n\t * request bodies.\n\t *\n\t * ``` js\n\t * request.post('/upload')\n\t *   .field('foo', 'bar')\n\t *   .end(callback);\n\t * ```\n\t *\n\t * @param {String} name\n\t * @param {String|Blob|File} val\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.field = function(name, val){\n\t  if (!this._formData) this._formData = new root.FormData();\n\t  this._formData.append(name, val);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Queue the given `file` as an attachment to the specified `field`,\n\t * with optional `filename`.\n\t *\n\t * ``` js\n\t * request.post('/upload')\n\t *   .attach(new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n\t *   .end(callback);\n\t * ```\n\t *\n\t * @param {String} field\n\t * @param {Blob|File} file\n\t * @param {String} filename\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.attach = function(field, file, filename){\n\t  if (!this._formData) this._formData = new root.FormData();\n\t  this._formData.append(field, file, filename);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Send `data`, defaulting the `.type()` to \"json\" when\n\t * an object is given.\n\t *\n\t * Examples:\n\t *\n\t *       // querystring\n\t *       request.get('/search')\n\t *         .end(callback)\n\t *\n\t *       // multiple data \"writes\"\n\t *       request.get('/search')\n\t *         .send({ search: 'query' })\n\t *         .send({ range: '1..5' })\n\t *         .send({ order: 'desc' })\n\t *         .end(callback)\n\t *\n\t *       // manual json\n\t *       request.post('/user')\n\t *         .type('json')\n\t *         .send('{\"name\":\"tj\"})\n\t *         .end(callback)\n\t *\n\t *       // auto json\n\t *       request.post('/user')\n\t *         .send({ name: 'tj' })\n\t *         .end(callback)\n\t *\n\t *       // manual x-www-form-urlencoded\n\t *       request.post('/user')\n\t *         .type('form')\n\t *         .send('name=tj')\n\t *         .end(callback)\n\t *\n\t *       // auto x-www-form-urlencoded\n\t *       request.post('/user')\n\t *         .type('form')\n\t *         .send({ name: 'tj' })\n\t *         .end(callback)\n\t *\n\t *       // defaults to x-www-form-urlencoded\n\t  *      request.post('/user')\n\t  *        .send('name=tobi')\n\t  *        .send('species=ferret')\n\t  *        .end(callback)\n\t *\n\t * @param {String|Object} data\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.send = function(data){\n\t  var obj = isObject(data);\n\t  var type = this.getHeader('Content-Type');\n\t\n\t  // merge\n\t  if (obj && isObject(this._data)) {\n\t    for (var key in data) {\n\t      this._data[key] = data[key];\n\t    }\n\t  } else if ('string' == typeof data) {\n\t    if (!type) this.type('form');\n\t    type = this.getHeader('Content-Type');\n\t    if ('application/x-www-form-urlencoded' == type) {\n\t      this._data = this._data\n\t        ? this._data + '&' + data\n\t        : data;\n\t    } else {\n\t      this._data = (this._data || '') + data;\n\t    }\n\t  } else {\n\t    this._data = data;\n\t  }\n\t\n\t  if (!obj || isHost(data)) return this;\n\t  if (!type) this.type('json');\n\t  return this;\n\t};\n\t\n\t/**\n\t * Invoke the callback with `err` and `res`\n\t * and handle arity check.\n\t *\n\t * @param {Error} err\n\t * @param {Response} res\n\t * @api private\n\t */\n\t\n\tRequest.prototype.callback = function(err, res){\n\t  var fn = this._callback;\n\t  this.clearTimeout();\n\t  fn(err, res);\n\t};\n\t\n\t/**\n\t * Invoke callback with x-domain error.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.crossDomainError = function(){\n\t  var err = new Error('Origin is not allowed by Access-Control-Allow-Origin');\n\t  err.crossDomain = true;\n\t  this.callback(err);\n\t};\n\t\n\t/**\n\t * Invoke callback with timeout error.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.timeoutError = function(){\n\t  var timeout = this._timeout;\n\t  var err = new Error('timeout of ' + timeout + 'ms exceeded');\n\t  err.timeout = timeout;\n\t  this.callback(err);\n\t};\n\t\n\t/**\n\t * Enable transmission of cookies with x-domain requests.\n\t *\n\t * Note that for this to work the origin must not be\n\t * using \"Access-Control-Allow-Origin\" with a wildcard,\n\t * and also must set \"Access-Control-Allow-Credentials\"\n\t * to \"true\".\n\t *\n\t * @api public\n\t */\n\t\n\tRequest.prototype.withCredentials = function(){\n\t  this._withCredentials = true;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Initiate request, invoking callback `fn(res)`\n\t * with an instanceof `Response`.\n\t *\n\t * @param {Function} fn\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.end = function(fn){\n\t  var self = this;\n\t  var xhr = this.xhr = request.getXHR();\n\t  var query = this._query.join('&');\n\t  var timeout = this._timeout;\n\t  var data = this._formData || this._data;\n\t\n\t  // store callback\n\t  this._callback = fn || noop;\n\t\n\t  // state change\n\t  xhr.onreadystatechange = function(){\n\t    if (4 != xhr.readyState) return;\n\t\n\t    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n\t    // result in the error \"Could not complete the operation due to error c00c023f\"\n\t    var status;\n\t    try { status = xhr.status } catch(e) { status = 0; }\n\t\n\t    if (0 == status) {\n\t      if (self.timedout) return self.timeoutError();\n\t      if (self.aborted) return;\n\t      return self.crossDomainError();\n\t    }\n\t    self.emit('end');\n\t  };\n\t\n\t  // progress\n\t  var handleProgress = function(e){\n\t    if (e.total > 0) {\n\t      e.percent = e.loaded / e.total * 100;\n\t    }\n\t    self.emit('progress', e);\n\t  };\n\t  if (this.hasListeners('progress')) {\n\t    xhr.onprogress = handleProgress;\n\t  }\n\t  try {\n\t    if (xhr.upload && this.hasListeners('progress')) {\n\t      xhr.upload.onprogress = handleProgress;\n\t    }\n\t  } catch(e) {\n\t    // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n\t    // Reported here:\n\t    // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n\t  }\n\t\n\t  // timeout\n\t  if (timeout && !this._timer) {\n\t    this._timer = setTimeout(function(){\n\t      self.timedout = true;\n\t      self.abort();\n\t    }, timeout);\n\t  }\n\t\n\t  // querystring\n\t  if (query) {\n\t    query = request.serializeObject(query);\n\t    this.url += ~this.url.indexOf('?')\n\t      ? '&' + query\n\t      : '?' + query;\n\t  }\n\t\n\t  // initiate request\n\t  xhr.open(this.method, this.url, true);\n\t\n\t  // CORS\n\t  if (this._withCredentials) xhr.withCredentials = true;\n\t\n\t  // body\n\t  if ('GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !isHost(data)) {\n\t    // serialize stuff\n\t    var serialize = request.serialize[this.getHeader('Content-Type')];\n\t    if (serialize) data = serialize(data);\n\t  }\n\t\n\t  // set header fields\n\t  for (var field in this.header) {\n\t    if (null == this.header[field]) continue;\n\t    xhr.setRequestHeader(field, this.header[field]);\n\t  }\n\t\n\t  // send stuff\n\t  this.emit('request', this);\n\t  xhr.send(data);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Expose `Request`.\n\t */\n\t\n\trequest.Request = Request;\n\t\n\t/**\n\t * Issue a request:\n\t *\n\t * Examples:\n\t *\n\t *    request('GET', '/users').end(callback)\n\t *    request('/users').end(callback)\n\t *    request('/users', callback)\n\t *\n\t * @param {String} method\n\t * @param {String|Function} url or callback\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\tfunction request(method, url) {\n\t  // callback\n\t  if ('function' == typeof url) {\n\t    return new Request('GET', method).end(url);\n\t  }\n\t\n\t  // url first\n\t  if (1 == arguments.length) {\n\t    return new Request('GET', method);\n\t  }\n\t\n\t  return new Request(method, url);\n\t}\n\t\n\t/**\n\t * GET `url` with optional callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed|Function} data or fn\n\t * @param {Function} fn\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.get = function(url, data, fn){\n\t  var req = request('GET', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.query(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * HEAD `url` with optional callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed|Function} data or fn\n\t * @param {Function} fn\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.head = function(url, data, fn){\n\t  var req = request('HEAD', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * DELETE `url` with optional callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Function} fn\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.del = function(url, fn){\n\t  var req = request('DELETE', url);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * PATCH `url` with optional `data` and callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed} data\n\t * @param {Function} fn\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.patch = function(url, data, fn){\n\t  var req = request('PATCH', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * POST `url` with optional `data` and callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed} data\n\t * @param {Function} fn\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.post = function(url, data, fn){\n\t  var req = request('POST', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * PUT `url` with optional `data` and callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed|Function} data or fn\n\t * @param {Function} fn\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.put = function(url, data, fn){\n\t  var req = request('PUT', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * Expose `request`.\n\t */\n\t\n\tmodule.exports = request;\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Expose `Emitter`.\n\t */\n\t\n\tmodule.exports = Emitter;\n\t\n\t/**\n\t * Initialize a new `Emitter`.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction Emitter(obj) {\n\t  if (obj) return mixin(obj);\n\t};\n\t\n\t/**\n\t * Mixin the emitter properties.\n\t *\n\t * @param {Object} obj\n\t * @return {Object}\n\t * @api private\n\t */\n\t\n\tfunction mixin(obj) {\n\t  for (var key in Emitter.prototype) {\n\t    obj[key] = Emitter.prototype[key];\n\t  }\n\t  return obj;\n\t}\n\t\n\t/**\n\t * Listen on the given `event` with `fn`.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.on =\n\tEmitter.prototype.addEventListener = function(event, fn){\n\t  this._callbacks = this._callbacks || {};\n\t  (this._callbacks[event] = this._callbacks[event] || [])\n\t    .push(fn);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Adds an `event` listener that will be invoked a single\n\t * time then automatically removed.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.once = function(event, fn){\n\t  var self = this;\n\t  this._callbacks = this._callbacks || {};\n\t\n\t  function on() {\n\t    self.off(event, on);\n\t    fn.apply(this, arguments);\n\t  }\n\t\n\t  on.fn = fn;\n\t  this.on(event, on);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Remove the given callback for `event` or all\n\t * registered callbacks.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.off =\n\tEmitter.prototype.removeListener =\n\tEmitter.prototype.removeAllListeners =\n\tEmitter.prototype.removeEventListener = function(event, fn){\n\t  this._callbacks = this._callbacks || {};\n\t\n\t  // all\n\t  if (0 == arguments.length) {\n\t    this._callbacks = {};\n\t    return this;\n\t  }\n\t\n\t  // specific event\n\t  var callbacks = this._callbacks[event];\n\t  if (!callbacks) return this;\n\t\n\t  // remove all handlers\n\t  if (1 == arguments.length) {\n\t    delete this._callbacks[event];\n\t    return this;\n\t  }\n\t\n\t  // remove specific handler\n\t  var cb;\n\t  for (var i = 0; i < callbacks.length; i++) {\n\t    cb = callbacks[i];\n\t    if (cb === fn || cb.fn === fn) {\n\t      callbacks.splice(i, 1);\n\t      break;\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Emit `event` with the given args.\n\t *\n\t * @param {String} event\n\t * @param {Mixed} ...\n\t * @return {Emitter}\n\t */\n\t\n\tEmitter.prototype.emit = function(event){\n\t  this._callbacks = this._callbacks || {};\n\t  var args = [].slice.call(arguments, 1)\n\t    , callbacks = this._callbacks[event];\n\t\n\t  if (callbacks) {\n\t    callbacks = callbacks.slice(0);\n\t    for (var i = 0, len = callbacks.length; i < len; ++i) {\n\t      callbacks[i].apply(this, args);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Return array of callbacks for `event`.\n\t *\n\t * @param {String} event\n\t * @return {Array}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.listeners = function(event){\n\t  this._callbacks = this._callbacks || {};\n\t  return this._callbacks[event] || [];\n\t};\n\t\n\t/**\n\t * Check if this emitter has `event` handlers.\n\t *\n\t * @param {String} event\n\t * @return {Boolean}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.hasListeners = function(event){\n\t  return !! this.listeners(event).length;\n\t};\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Reduce `arr` with `fn`.\n\t *\n\t * @param {Array} arr\n\t * @param {Function} fn\n\t * @param {Mixed} initial\n\t *\n\t * TODO: combatible error handling?\n\t */\n\t\n\tmodule.exports = function(arr, fn, initial){  \n\t  var idx = 0;\n\t  var len = arr.length;\n\t  var curr = arguments.length == 3\n\t    ? initial\n\t    : arr[idx++];\n\t\n\t  while (idx < len) {\n\t    curr = fn.call(null, curr, arr[idx], ++idx, arr);\n\t  }\n\t  \n\t  return curr;\n\t};\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** dist/react-tabula.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap a63273a21c31ac1b470b\n **/","exports.ConfigureTable = require('./ConfigureTable');\nexports.ExportButton = require('./ExportButton');\nexports.DataMixin = require('./DataMixin');\nexports.DataTable = require('./DataTable');\nexports.PageItems = require('./PageItems');\nexports.PageSize = require('./PageSize');\nexports.Pagination = require('./Pagination');\nexports.SearchField = require('./SearchField');\nexports.Table = require('./Table');\nexports.utils = require('./utils');\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","'use strict';\n\nvar React = require('react');\nvar _ = require('lodash');\n\nclass ConfigureTable {\n  constructor() {\n    this.onChangeQuickConfig = this.onChangeQuickConfig.bind(this);\n    this.handleChangeLeaf = this.handleChangeLeaf.bind(this);\n  }\n\n  onChangeQuickConfig(e) {\n    e.preventDefault();\n    var title = e.target.textContent;\n    this.props.onChangeQuickConfig(title);\n  }\n\n  handleChangeLeaf(e) {\n    var current = e.currentTarget;\n    var parent = current.dataset.parent;\n    var section = current.dataset.section;\n    var leaf = current.dataset.leaf;\n\n    this.props.onChangeConfigLeaf(current, parent, section, leaf);\n    return e;\n  }\n\n  render() {\n    if (!this.props.enabled) {\n      return null;\n    }\n\n    var {columns, columnsPossible, configGroup, config} = this.props;\n    var configPrimary = this.props.configPrimary;\n\n    if (_.isEmpty(config) || _.isEmpty(config.children)) {\n      return null;\n    }\n\n    var isActive = (title) => {\n      return title === configPrimary ? 'active' : '';\n    };\n\n    var isActivePane = (title) => {\n      return title === configPrimary ? 'tab-pane active' : 'tab-pane';\n    };\n\n    var toKey = (key) => { return key.toLowerCase().replace(' ', '_'); };\n    var toId = (key) => { return \"#\" + toKey(key); };\n    var isChecked = (obj) => { return obj.selected ? \"checked\" : \"\"; };\n    var isDisabled = (obj) => { return obj.disabled ? \"disabled\" : \"\"; };\n\n    var makeRef = (conf, sect, leaf) => { return [conf.prop, sect.prop, leaf.prop].join(':'); }\n\n    var possible = columnsPossible && columnsPossible.length ?\n      columnsPossible : columns;\n\n    // TODO move shortCutConfigs to separate component class\n    var shortCutColumns = possible.map((col) => {\n      return col.group === configGroup ? col : null;\n    }).filter((col) => { return col; });\n\n    var shortCutConfigs = shortCutColumns.map((col) => {\n      return (\n        <li className={isActive(col.title)} onClick={this.onChangeQuickConfig}>\n          <a href=\"#\">{col.title}</a>\n        </li>\n      );\n    });\n\n    var onClickPrimary = this.props.onClickPrimary;\n    var tabHeaders = config.children.map((conf) => {\n      return (\n        <li className={isActive(conf.title)}>\n          <a href={toId(conf.title)}\n            onClick={onClickPrimary}\n            data-toggle=\"tab\">{conf.title}</a>\n        </li>\n      );\n    });\n\n    var handleChangeLeaf = this.handleChangeLeaf;\n    var tabPanes = config.children.map((conf) => {\n\n      var sectChildren = [];\n      conf.children.map((sect) => {\n        var leaves = sect.children.filter((o) => { return o; }).map((leaf) => {\n          return (\n            <div className=\"checkbox\"><label><input type=\"checkbox\"\n              defaultChecked={isChecked(leaf)}\n              disabled={isDisabled(leaf)}\n              onChange={handleChangeLeaf}\n              data-parent={conf.prop}\n              data-section={sect.prop}\n              data-leaf={leaf.prop}\n            />{leaf.title}</label></div>\n          );\n        });\n        sectChildren.push(leaves);\n      });\n\n      var counter = 0;\n      var sections = conf.children.map((sect) => {\n        return (\n          <div className=\"panel panel-default ns-panel-default\">\n            <div className=\"panel panel-heading ns-panel-heading\">{sect.title}</div>\n            <div className=\"panel panel-body ns-panel-body\">\n              {sectChildren[counter++]}\n            </div>\n          </div>\n        )\n      });\n\n      return (\n        <div className={isActivePane(conf.title)} id={toKey(conf.title)}>\n          {sections}\n        </div>\n      );\n\n    });\n\n    return (\n      <div className=\"configure-table-wrapper\">\n        <div className=\"btn-group\">\n          <button type=\"button\" className=\"btn btn-default\" data-toggle=\"modal\" data-target=\"#configure-table-modal\">Configure</button>\n\n          <button type=\"button\" className=\"btn btn-default dropdown-toggle\"\n            data-toggle=\"dropdown\" aria-expanded=\"false\">\n            <span className=\"caret\"></span>\n            <span className=\"sr-only\">Toggle Dropdown</span>\n          </button>\n          <ul className=\"dropdown-menu\" role=\"menu\">\n            {shortCutConfigs}\n            <li className=\"divider\"></li>\n            <li data-toggle=\"modal\" data-target=\"#configure-table-modal\"><a href=\"#\">Configure</a></li>\n          </ul>\n        </div>\n\n        <div className=\"modal fade\"\n          id=\"configure-table-modal\"\n          tabIndex=\"-1\" role=\"dialog\"\n          onClick={this.props.onConfigCancel}\n          aria-labelledby={this.props.configHeader}\n          aria-hidden=\"true\">\n          <div className=\"modal-dialog\">\n            <div className=\"modal-content\">\n\n              <div className=\"modal-header\">\n                <h4 className=\"modal-title\" id=\"configure-table-modal-title\">{this.props.configHeader}</h4>\n              </div>\n\n              <div className=\"modal-body\">\n                <div className=\"row\">\n                  <div className=\"col-xs-3\">\n                    <ul className=\"nav nav-tabs tabs-left\">\n                      <li>\n                        <h5 className=\"ns-primary-header\">{config.title}</h5>\n                       </li>\n                      {tabHeaders}\n                    </ul>\n                  </div>\n\n                  <div className=\"col-xs-9\">\n                    <div className=\"tab-content\">\n                      {tabPanes}\n                    </div>\n                  </div>\n\n                </div>\n\n              </div>\n\n              <div className=\"modal-footer\">\n                <div className=\"alert alert-danger\" role=\"alert\" hidden></div>\n                <button className=\"btn btn-default\" type=\"button\" data-dismiss=\"modal\" onClick={this.props.onConfigCancel}>Cancel</button>\n                <button className=\"btn btn-primary\" onClick={this.props.onConfigSave}>Save changes</button>\n              </div>\n\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nmodule.exports = ConfigureTable;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/ConfigureTable.js\n **/","'use strict';\n\nvar React = require('react');\n\nclass ExportButton {\n\n  render() {\n    if (!this.props.enabled) {\n      return null;\n    }\n\n    return (\n      <div className=\"btn-group\">\n        <button type=\"button\" className=\"btn btn-default\">Export</button>\n      </div>\n    );\n  }\n\n}\n\nmodule.exports = ExportButton;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/ExportButton.js\n **/","'use strict';\n\nvar { sort, filter } = require('./utils');\nvar React = require('react');\nvar _ = require('lodash');\nvar superagent = require('superagent');\n\nvar containsIgnoreCase = function(a, b) {\n  a = (a + '').toLowerCase().trim();\n  b = (b + '').toLowerCase().trim();\n  return b.indexOf(a) >= 0;\n};\n\n\nvar objectExists = (obj) => { return obj; }\n\n\nmodule.exports = {\n\n  getInitialState() {\n    return {\n      // Clone the initialData.\n      data: this.props.initialData.slice(0),\n      sortBy: this.props.initialSortBy,\n      filterValues: {},\n      currentPage: 0,\n      pageSize: this.props.initialPageSize,\n      config: this.props.config,\n      configPrimary: '',\n      configBackup: _.cloneDeep(this.props.config)\n    };\n  },\n\n  getDefaultProps() {\n    return {\n      columns: [],\n      columnsPossible: [],\n      configGroup: '',\n      configHeader: 'Configure',\n      configUrl: '',\n      configBaseRequest: {},\n      configSuccessCallback: function () {},\n      configErrorCallback: function () {},\n      enableConfig: false,\n      enableExport: false,\n      initialPageSize: 5,\n      keys: [],\n      pageSizeMax: 20,\n      pageSizeOptions: [ 5, 10, 20 ],\n      filters: {\n        globalSearch: {\n          filter: containsIgnoreCase\n        }\n      }\n    };\n  },\n\n  componentWillMount() {\n    // Do the initial sorting if specified.\n    var {sortBy, data} = this.state;\n    if (sortBy) {\n      this.setState({ data: sort(sortBy, data) });\n    }\n  },\n\n  onSort(sortBy) {\n    this.setState({\n      sortBy: sortBy,\n      data: sort(sortBy, this.state.data)\n    });\n  },\n\n  onFilter(filterName, filterValue) {\n    var {filterValues, sortBy} = this.state;\n    var {initialData, filters} = this.props;\n\n    filterValues[filterName] = filterValue;\n    var newData = filter(filters, filterValues, initialData);\n    newData = sort(sortBy, newData);\n\n    this.setState({\n      data: newData,\n      filterValues: filterValues,\n      currentPage: 0\n    });\n  },\n\n  // Pagination\n  buildPage() {\n    var {data, currentPage, pageSize, config} = this.state;\n    var start = pageSize * currentPage;\n    var end = start + pageSize;\n    var endIndex = data.length > end ? end : data.length;\n\n    return {\n      data: data.slice(start, end),\n      dataSize: data.length,\n      currentPage: currentPage,\n      startIndex: start,\n      endIndex: endIndex,\n      totalPages: Math.ceil(data.length / pageSize),\n      config: config\n    };\n  },\n\n  onChangePage(pageNumber) {\n    var pageSize = this.state.pageSize;\n    var start = pageSize * pageNumber;\n    var end = start + pageSize;\n\n    this.setState({\n      currentPage: pageNumber,\n      startIndex: start,\n      endIndex: end\n    });\n  },\n\n  onPageSizeChange(value) {\n    var newPageSize = +value;\n    var {currentPage, pageSize} = this.state;\n    var newPage = Math.floor((currentPage * pageSize) / newPageSize);\n\n    var start = newPageSize * currentPage;\n    var end = start + newPageSize;\n\n    this.setState({\n      pageSize: newPageSize,\n      currentPage: newPage,\n      startIndex: start,\n      endIndex: end\n    });\n  },\n\n  onConfigCancel() {\n    this.clearModalAlert();\n\n    var backup = _.cloneDeep(this.state.configBackup);\n    this.setState({ config: backup });\n  },\n\n  showModalAlert(text) {\n    $('.modal-footer .alert').text(text).show();\n  },\n\n  clearModalAlert() {\n    $('.modal-footer .alert').text('').hide();\n  },\n\n  saveConfig() {\n    var config = this.state.config;\n    var baseRequest = _.cloneDeep(this.props.configBaseRequest);\n    var payload = _.merge(baseRequest, { \"configuration\": config });\n    var url = this.props.configUrl;\n    var clearModalAlert = this.clearModalAlert;\n    var showModalAlert = this.showModalAlert;\n\n    var postCallback = this.props.configPostCallback;\n\n    superagent.post(url)\n      .send(payload)\n      .set('Accept', 'application/json')\n      .end(function(err, reply) {\n        if (reply.ok) {\n          // XXX should we be implicitly be using jquery here?\n          $('#configure-table-modal').modal('hide');\n          clearModalAlert();\n        } else {\n          // do not close but show notification in config modal\n          showModalAlert('cannot save configuration right now');\n        }\n\n        postCallback(reply);\n      });\n  },\n\n  onConfigSave(e) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    this.saveConfig();\n    return;\n  },\n\n  onChangeQuickConfig(title) {\n    var config = this.state.config;\n\n    config.children.forEach((child) => {\n      if (_.isEmpty(child)) {\n        return;\n      }\n\n      child.selected = child.title === title ? true : false;\n    });\n\n    this.props.configPrimary = title;\n    this.setState({ config: config });\n\n    // TODO POST current active config and reload report query\n    var callback = function(msg){\n        console.log('>>', msg);\n    };\n    this.saveConfig(callback);\n  },\n\n  findNode(list, prop) {\n    if (_.isEmpty(list)) { return []; }\n\n    return list.map(\n      (obj) => { return obj && obj.prop === prop ? obj : null; }\n    ).filter(objectExists);\n  },\n\n  findLeaf(config, parentProp, sectionProp, leafProp) {\n    // find branch\n    var branch = config && config.children.length ?\n      this.findNode(config.children, parentProp) : [];\n\n    // find section\n    var section = branch && branch.length ?\n      this.findNode(branch[0].children, sectionProp) : []; \n\n    // find leaf node\n    var leaf = section && section.length ?\n      this.findNode(section[0].children, leafProp) : [];\n\n    return {\n      section: section,\n      leaf: leaf && leaf.length ? leaf[0] : null\n    };\n  },\n\n  onChangeConfigLeaf(current, parentProp, sectionProp, leafProp) {\n    //var config = _.cloneDeep(this.state.config);\n    var config = this.state.config;\n    var match = this.findLeaf(config, parentProp, sectionProp, leafProp);\n    var section = match.section;\n    var leaf = match.leaf;\n    if (!leaf) { return; }\n\n    if (!current.checked) {\n      leaf.selected = false;\n      // TODO remove disabled attributes\n      this.setState({ config: config });\n      return;\n    }\n\n    // Check if MAX has been exceeded - selection limit rules\n    var MAX = leaf.group === this.props.configGroup ? 1 : 4;\n    var counts = section[0].children.filter(objectExists).map((obj) => {\n      return obj && obj.selected ? 1 : 0;\n    })\n    var selectedSize = 0;\n    selectedSize = counts.reduce((a, b) => { return a+b; });\n\n    // dis-allow over-selection\n    if (selectedSize > MAX) {\n      // TODO disable all other inputs\n      current.checked = false;\n      leaf.selected = false;\n      this.setState({ config: config });\n      return current;\n    } else {\n      // TODO remove disabled attributes\n    }\n\n    leaf.selected = !leaf.selected;\n\n    // update config\n    this.setState({ config: config });\n    return current;\n  },\n\n\n  onClickPrimary(e) {\n    var config = this.state.config;\n    var title = e.currentTarget.textContent;\n\n    config.children.forEach((child) => {\n      if (_.isEmpty(child)) {\n        return;\n      }\n\n      child.selected = child.title === title ? true : false;\n    });\n\n    this.setState({ config: config });\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/DataMixin.js\n **/","'use strict';\n\nvar React = require('react');\n\nvar ConfigureTable = require('./ConfigureTable');\nvar ExportButton = require('./ExportButton');\nvar PageItems = require('./PageItems');\nvar PageSize = require('./PageSize');\nvar Pagination = require('./Pagination');\nvar SearchField = require('./SearchField');\nvar Table = require('./Table');\n\nvar DataMixin = require('./DataMixin');\n\nvar DataTable = React.createClass({\n\n  mixins: [ DataMixin ],\n\n  render() {\n    var page = this.buildPage();\n\n    return (\n      <div className={this.props.className}>\n        <div className=\"row\">\n          <div className=\"col-xs-8\">\n\n            <div className=\"btn-toolbar ns-btn-toolbar\" role=\"toolbar\" aria-label=\"...\">\n              <ConfigureTable\n                columnsPossible={this.props.columnsPossible}\n                columns={this.props.columns}\n                config={this.state.config}\n                configGroup={this.props.configGroup}\n                configHeader={this.props.configHeader}\n                configPrimary={this.props.configPrimary}\n                enabled={this.props.enableConfig}\n                onConfigCancel={this.onConfigCancel}\n                onConfigSave={this.onConfigSave}\n                onChangeConfigLeaf={this.onChangeConfigLeaf}\n                onClickPrimary={this.onClickPrimary}\n                onChangeQuickConfig={this.onChangeQuickConfig}\n              />\n              <ExportButton enabled={this.props.enableExport} />\n\n            </div>\n\n          </div>\n          <div className=\"col-xs-4 pull-right\">\n            <SearchField\n              id=\"search-field\"\n              className=\"input-group pull-right\"\n              placeholder=\"Search Table\"\n              value={this.state.filterValues.globalSearch}\n              onChange={this.onFilter.bind(this, 'globalSearch')}\n            />\n          </div>\n        </div>\n        <div className=\"row ns-spacer-vertical\"></div>\n        <Table\n          className=\"table table-bordered\"\n          dataArray={page.data}\n          columns={this.props.columns}\n          keys={this.props.keys}\n          sortBy={this.state.sortBy}\n          onSort={this.onSort}\n        />\n        <div className=\"row\">\n          <div className=\"col-xs-7\">\n            <div className=\"row\">\n              <div className=\"col-xs-12 ns-page-items-size\">\n                <PageItems\n                  id=\"page-items\"\n                  className=\"page-items pull-left\"\n                  dataSize={page.dataSize}\n                  startIndex={page.startIndex}\n                  endIndex={page.endIndex}\n                />\n                <PageSize\n                  id=\"page-size\"\n                  className=\"page-size pull-left\"\n                  label=\"Show:\"\n                  dataSize={page.dataSize}\n                  value={this.state.pageSize}\n                  max={this.props.pageSizeMax}\n                  options={this.props.pageSizeOptions}\n                  onChange={this.onPageSizeChange}\n                />\n              </div>\n              </div>\n            </div>\n\n\n          <div className=\"col-xs-5\">\n            <Pagination\n              className=\"pagination pagination-sm pull-right ns-pagination-top\"\n              currentPage={page.currentPage}\n              totalPages={page.totalPages}\n              onChangePage={this.onChangePage}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n});\n\nmodule.exports = DataTable;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/DataTable.js\n **/","'use strict';\n\nvar React = require('react');\nvar numeral = require('numeral');\n\nfunction prettyInt(num) {\n  return numeral(num).format('0,0');\n}\n\nclass PageItems {\n\n  render() {\n    var {dataSize, startIndex, endIndex} = this.props;\n    var start = dataSize ? startIndex + 1 : 0;\n\n    if (!dataSize) {\n      return null;\n    }\n\n    return (\n      <div className=\"ns-inline-block pull-left ns-page-items\">\n        Items {prettyInt(start)} &ndash; {prettyInt(endIndex)} of {prettyInt(dataSize)}\n        <span className=\"ns-spacer-horizontal\"></span>\n      </div>\n    );\n  }\n\n}\n\nmodule.exports = PageItems;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/PageItems.js\n **/","'use strict';\n\nvar React = require('react');\n\nclass PageSize {\n\n  constructor() {\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(e) {\n    this.props.onChange(e.target.textContent);\n  }\n\n  render() {\n    var self = this;\n    var {options, value, dataSize} = this.props;\n\n    if (!dataSize) {\n      return null;\n    }\n\n    var isActive = (size) => size === value ? \"active\" : \"\";\n    var mappedOpts =\n      options.map(\n        (size) =>\n          <li role=\"presentation\" key={size} className={isActive(size)}>\n            <a className=\"ns-page-size-option\" href=\"#\" onClick={self.onChange}>{size}</a>\n          </li>\n      );\n\n    return (\n      <div className=\"ns-inline ns-page-size-width\">\n        <div className=\"ns-page-size-text pull-left\">\n          <span className=\"ns-pipe-separator\">|</span>\n          <span className=\"ns-spacer-horizontal\"></span>\n          <span className=\"ns-label\">Show:</span>\n        </div>\n        <ul className=\"nav nav-pills pull-left\">\n        {mappedOpts}\n        </ul>\n      </div>\n    );\n  }\n\n}\n\nmodule.exports = PageSize;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/PageSize.js\n **/","'use strict';\n\nvar React = require('react');\nvar { PropTypes } = React;\n\n// Used to cancel events.\nvar preventDefault = e => e.preventDefault();\n\nclass Pagination {\n\n  shouldComponentUpdate(nextProps) {\n    var props = this.props;\n\n    return props.totalPages !== nextProps.totalPages ||\n      props.currentPage !== nextProps.currentPage ||\n      props.showPages !== nextProps.showPages;\n  }\n\n  onChangePage(pageNumber, event) {\n    event.preventDefault();\n    this.props.onChangePage(pageNumber);\n  }\n\n  render() {\n    var { totalPages, showPages, currentPage } = this.props;\n\n    if (totalPages === 0) {\n      return null;\n    }\n\n    var diff = Math.floor(showPages / 2),\n        start = Math.max(currentPage - diff, 0),\n        end = Math.min(start + showPages, totalPages);\n\n    if (totalPages >= showPages && end >= totalPages) {\n      start = totalPages - showPages;\n    }\n\n    var buttons = [], btnEvent, isCurrent;\n    for (var i = start; i < end; i++) {\n      isCurrent = currentPage === i;\n      // If the button is for the current page then disable the event.\n      if (isCurrent) {\n        btnEvent = preventDefault;\n      } else {\n        btnEvent = this.onChangePage.bind(this, i);\n      }\n      buttons.push(\n        <li key={i} className={isCurrent ? 'active' : null}>\n          <a role=\"button\" href=\"#\" onClick={btnEvent} tabIndex=\"0\">\n            <span>{i + 1}</span>\n            {isCurrent ?\n              <span className=\"sr-only\">(current)</span> : null}\n          </a>\n        </li>\n      );\n    }\n\n    // First and Prev button handlers and class.\n    var firstHandler = preventDefault;\n    var prevHandler = preventDefault;\n    var isNotFirst = currentPage > 0;\n    if (isNotFirst) {\n      firstHandler = this.onChangePage.bind(this, 0);\n      prevHandler = this.onChangePage.bind(this, currentPage - 1);\n    }\n\n    // Next and Last button handlers and class.\n    var nextHandler = preventDefault;\n    var lastHandler = preventDefault;\n    var isNotLast = currentPage < totalPages - 1;\n    if (isNotLast) {\n      nextHandler = this.onChangePage.bind(this, currentPage + 1);\n      lastHandler = this.onChangePage.bind(this, totalPages - 1);\n    }\n\n    return (\n      <ul className={this.props.className} aria-label=\"Pagination\">\n        <li className={!isNotFirst ? 'disabled' : null}>\n          <a role=\"button\" href=\"#\" tabIndex=\"0\"\n            onClick={prevHandler}\n            aria-disabled={!isNotFirst}\n            aria-label=\"Previous\">\n            <span className=\"fa fa-angle-left\" aria-hidden=\"true\"></span>\n          </a>\n        </li>\n\n        {buttons}\n\n        <li className={!isNotLast ? 'disabled' : null}>\n          <a role=\"button\" href=\"#\" tabIndex=\"0\"\n            onClick={nextHandler}\n            aria-disabled={!isNotLast}\n            aria-label=\"Next\">\n            <span className=\"fa fa-angle-right\" aria-hidden=\"true\"></span>\n          </a>\n        </li>\n      </ul>\n    );\n  }\n}\n\nPagination.propTypes = {\n  onChangePage: PropTypes.func.isRequired,\n  totalPages: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  showPages: PropTypes.number\n};\n\nPagination.defaultProps = {\n  showPages: 5\n};\n\n\nmodule.exports = Pagination;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Pagination.js\n **/","'use strict';\n\nvar React = require('react');\n\nclass SearchField {\n\n  constructor() {\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(e) {\n    this.props.onChange(e.target.value);\n  }\n\n  render() {\n    return (\n      <form role=\"form\" className={this.props.className}>\n        <div className=\"form-group has-feedback\">\n          <input\n            id={this.props.id}\n            className=\"form-control\"\n            describedby=\"sizing-addon2\"\n            type=\"text\"\n            value={this.props.value}\n            placeholder={this.props.placeholder}\n            onChange={this.onChange}\n          />\n          <i className=\"form-control-feedback glyphicon glyphicon-search\"></i>\n        </div>\n      </form>\n    );\n  }\n\n}\n\nmodule.exports = SearchField;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/SearchField.js\n **/","'use strict';\n\nvar React = require('react');\nvar { PropTypes } = React;\n\nvar simpleGet = key => data => data[key];\nvar keyGetter = keys => data => keys.map(key => data[key]);\n\nvar isEmpty = value => value === undefined || value === null || value === '';\n\nvar getCellValue =\n  ({ prop, defaultContent, render }, row) =>\n    // Return `defaultContent` if the value is empty.\n    !isEmpty(prop) && isEmpty(row[prop]) ? defaultContent :\n      // Use the render function for the value.\n      render ? render(row[prop], row) :\n      // Otherwise just return the value.\n      row[prop];\n\nvar getCellClass =\n  ({ prop, className }, row) =>\n    !isEmpty(prop) && isEmpty(row[prop]) ? 'empty-cell' :\n      typeof className === 'function' ? className(row[prop], row) :\n      className;\n\nfunction buildSortProps(col, sortBy, onSort) {\n  var order = sortBy.prop === col.prop ? sortBy.order : 'none';\n  var nextOrder = order === 'ascending' ? 'descending' : 'ascending';\n  var sortEvent = onSort.bind(null, { prop: col.prop, order: nextOrder });\n\n  return {\n    'onClick': sortEvent,\n    // Fire the sort event on enter.\n    'onKeyDown': e => { if (e.keyCode === 13) sortEvent(); },\n    // Prevents selection with mouse.\n    'onMouseDown': e => e.preventDefault(),\n    'tabIndex': 0,\n    'aria-sort': order,\n    'aria-label': `${col.title}: activate to sort column ${nextOrder}`\n  };\n}\n\nclass Table {\n\n  constructor() {\n    this._headers = [];\n  }\n\n  componentDidMount() {\n    // If no width was specified, then set the width that the browser applied\n    // initially to avoid recalculating width between pages.\n    this._headers.forEach(header => {\n      var thDom = React.findDOMNode(header);\n      if (!thDom.style.width) {\n        thDom.style.width = `${thDom.offsetWidth}px`;\n      }\n    });\n  }\n\n  render() {\n    var { columns, keys, buildRowOptions, sortBy, onSort } = this.props;\n\n    var headers = columns.map((col, idx) => {\n      var sortProps, order;\n      // Only add sorting events if the column has a property and is sortable.\n      if (typeof onSort === 'function' &&\n          col.sortable !== false &&\n          'prop' in col) {\n        sortProps = buildSortProps(col, sortBy, onSort);\n        order = sortProps['aria-sort'];\n      }\n\n      return (\n        <th\n          ref={c => this._headers[idx] = c}\n          key={idx}\n          style={{width: col.width}}\n          role=\"columnheader\"\n          scope=\"col\"\n          {...sortProps}>\n          <span>{col.title}</span>\n          {typeof order !== 'undefined' ?\n            <span className={`sort-icon sort-${order}`} aria-hidden=\"true\" /> :\n            null}\n        </th>\n      );\n    });\n\n    var getKeys = Array.isArray(keys) ? keyGetter(keys) : simpleGet(keys);\n    var rows = this.props.dataArray.map(\n      row =>\n        <tr key={getKeys(row)} {...buildRowOptions(row)}>\n          {columns.map(\n            (col, i) =>\n              <td key={i} className={getCellClass(col, row)}>\n                {getCellValue(col, row)}\n              </td>\n          )}\n        </tr>);\n\n    return (\n      <table className={this.props.className}>\n        <caption className=\"sr-only\" role=\"alert\" aria-live=\"polite\">\n          {`Sorted by ${sortBy.prop}: ${sortBy.order} order`}\n        </caption>\n        <thead>\n          <tr>\n            {headers}\n          </tr>\n        </thead>\n        <tbody>\n          {rows.length > 0 ? rows :\n            <tr>\n              <td colSpan={columns.length} className=\"text-center\">No data</td>\n            </tr>}\n        </tbody>\n      </table>\n    );\n  }\n\n}\n\nTable.propTypes = {\n\n  keys: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string\n  ]).isRequired,\n\n  columns: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    prop: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number\n    ]),\n    render: PropTypes.func,\n    sortable: PropTypes.bool,\n    defaultContent: PropTypes.string,\n    width: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number\n    ]),\n    className: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func\n    ])\n  })).isRequired,\n\n  dataArray: PropTypes.arrayOf(PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.object\n  ])).isRequired,\n\n  buildRowOptions: PropTypes.func,\n\n  sortBy: PropTypes.shape({\n    prop: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number\n    ]),\n    order: PropTypes.oneOf([ 'ascending', 'descending' ])\n  }),\n\n  onSort: PropTypes.func\n};\n\nTable.defaultProps = {\n  buildRowOptions: () => ({}),\n  sortBy: {}\n};\n\nmodule.exports = Table;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Table.js\n **/","'use strict';\n\n/**\n * Determines if at least one element in the object matches a truth test.\n *\n * @param {function(val, key)} pred Predicate function.\n * @param {object|array} obj\n * @return {boolean}\n */\nfunction some(pred, obj) {\n  for (var key in obj) {\n    if (pred(obj[key], key) === true) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Creates a compare function with a property to sort on.\n *\n * @param {string} prop Property to sort.\n * @return {function(object, object)} Compare function.\n */\nvar sortByFunc =\n    (prop) =>\n        (a, b) => a[prop] < b[prop] ? -1 : a[prop] > b[prop] ? 1 : 0;\n\n/**\n * @param {object} sortBy Object containing `prop` and `order`.\n * @param {array} data Array to sort.\n * @return {array} Sorted array.\n */\nfunction sort(sortBy, data) {\n  var sortedData = data.sort(sortByFunc(sortBy.prop));\n  if (sortBy.order === 'descending') {\n    sortedData.reverse();\n  }\n  return sortedData;\n}\n\n/**\n * @param {!object} filters\n * @param {!array} data\n * @return {function(*, string)} Function to be executed for each entry in data.\n */\nfunction filterPass(filters, data) {\n  return function(filterValue, key) {\n    var filterDef = filters[key];\n    var partial = filterDef.filter.bind(null, filterValue);\n    if (!filterDef.prop) {\n      // Filter is for all properties\n      return some(each => partial(each), data);\n    } else {\n      // Filter is for one property\n      return partial(data[filterDef.prop]);\n    }\n  };\n}\n\n/**\n * Example of filter and filterValues.\n * filters = { globalSearch: { filter: containsIgnoreCase } }\n * filterValues = { globalSearch: 'filter value' }\n *\n * @param {object} filters Definition of the filters.\n * @param {object} filterValues Values of the filters.\n * @param {array} data Array to filter.\n * @return {array} Filtered array.\n */\nfunction filter(filters, filterValues, data) {\n  var filterFunc = filterPass.bind(null, filters);\n  return data.filter(each => some(filterFunc(each), filterValues));\n}\n\nmodule.exports = { filter, filterPass, sort, sortByFunc, some };\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_11__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":\"React\",\"amd\":\"react\",\"commonjs\":\"react\",\"commonjs2\":\"react\"}\n ** module id = 11\n ** module chunks = 0\n **/","/**\n * @license\n * lodash 3.7.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern -d -o ./index.js`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '3.7.0';\n\n  /** Used to compose bitmasks for wrapper metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256;\n\n  /** Used as default options for `_.trunc`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect when a function becomes hot. */\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_DROP_WHILE_FLAG = 0,\n      LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2;\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      weakMapTag = '[object WeakMap]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]+|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?)\\1\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\n  /**\n   * Used to match `RegExp` [special characters](http://www.regular-expressions.info/characters.html#special).\n   * In addition to special characters the forward slash is escaped to allow for\n   * easier `eval` use and `Function` compilation.\n   */\n  var reRegExpChars = /[.*+?^${}()|[\\]\\/\\\\]/g,\n      reHasRegExpChars = RegExp(reRegExpChars.source);\n\n  /** Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks). */\n  var reComboMark = /[\\u0300-\\u036f\\ufe20-\\ufe23]/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /** Used to match [ES template delimiters](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-template-literal-lexical-components). */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect hexadecimal string values. */\n  var reHasHexPrefix = /^0[xX]/;\n\n  /** Used to detect host constructors (Safari > 5). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to match words to create compound words. */\n  var reWords = (function() {\n    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n\n    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n  }());\n\n  /** Used to detect and test for whitespace. */\n  var whitespace = (\n    // Basic whitespace characters.\n    ' \\t\\x0b\\f\\xa0\\ufeff' +\n\n    // Line terminators.\n    '\\n\\r\\u2028\\u2029' +\n\n    // Unicode category \"Zs\" space separators.\n    '\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000'\n  );\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',\n    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'document',\n    'isFinite', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    'window'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[stringTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[mapTag] = cloneableTags[setTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used as an internal `_.debounce` options object by `_.throttle`. */\n  var debounceOptions = {\n    'leading': false,\n    'maxWait': 0,\n    'trailing': false\n  };\n\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n  var deburredLetters = {\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n\n  /** Used to determine if values are of the language type `Object`. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global && global.Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = objectTypes[typeof self] && self && self.Object && self;\n\n  /** Detect free variable `window`. */\n  var freeWindow = objectTypes[typeof window] && window && window.Object && window;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /**\n   * Used as a reference to the global object.\n   *\n   * The `this` value is used if it is the global object to avoid Greasemonkey's\n   * restricted `window` object, otherwise the `window` object is used.\n   */\n  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `compareAscending` which compares values and\n   * sorts them in ascending order without guaranteeing a stable sort.\n   *\n   * @private\n   * @param {*} value The value to compare to `other`.\n   * @param {*} other The value to compare to `value`.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function baseCompareAscending(value, other) {\n    if (value !== other) {\n      var valIsReflexive = value === value,\n          othIsReflexive = other === other;\n\n      if (value > other || !valIsReflexive || (value === undefined && othIsReflexive)) {\n        return 1;\n      }\n      if (value < other || !othIsReflexive || (other === undefined && valIsReflexive)) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromRight) {\n    var length = array.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return indexOfNaN(array, fromIndex);\n    }\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isFunction` without support for environments\n   * with incorrect `typeof` results.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n   */\n  function baseIsFunction(value) {\n    // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n    // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n    return typeof value == 'function' || false;\n  }\n\n  /**\n   * Converts `value` to a string if it is not one. An empty string is returned\n   * for `null` or `undefined` values.\n   *\n   * @private\n   * @param {*} value The value to process.\n   * @returns {string} Returns the string.\n   */\n  function baseToString(value) {\n    if (typeof value == 'string') {\n      return value;\n    }\n    return value == null ? '' : (value + '');\n  }\n\n  /**\n   * Used by `_.max` and `_.min` as the default callback for string values.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the code unit of the first character of the string.\n   */\n  function charAtCallback(string) {\n    return string.charCodeAt(0);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the first character not found in `chars`.\n   */\n  function charsLeftIndex(string, chars) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the last character not found in `chars`.\n   */\n  function charsRightIndex(string, chars) {\n    var index = string.length;\n\n    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n   * sort them in ascending order.\n   *\n   * @private\n   * @param {Object} object The object to compare to `other`.\n   * @param {Object} other The object to compare to `object`.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareAscending(object, other) {\n    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);\n  }\n\n  /**\n   * Used by `_.sortByOrder` to compare multiple properties of each element\n   * in a collection and stable sort them in the following order:\n   *\n   * If `orders` is unspecified, sort in ascending order for all properties.\n   * Otherwise, for each property, sort in ascending order if its corresponding value in\n   * orders is true, and descending order if false.\n   *\n   * @private\n   * @param {Object} object The object to compare to `other`.\n   * @param {Object} other The object to compare to `object`.\n   * @param {boolean[]} orders The order to sort by for each property.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareMultiple(object, other, orders) {\n    var index = -1,\n        objCriteria = object.criteria,\n        othCriteria = other.criteria,\n        length = objCriteria.length,\n        ordersLength = orders.length;\n\n    while (++index < length) {\n      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n      if (result) {\n        if (index >= ordersLength) {\n          return result;\n        }\n        return result * (orders[index] ? 1 : -1);\n      }\n    }\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to provide the same value for\n    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n    // for more details.\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  }\n\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  function deburrLetter(letter) {\n    return deburredLetters[letter];\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeHtmlChar(chr) {\n    return htmlEscapes[chr];\n  }\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled\n   * string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n   */\n  function indexOfNaN(array, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 0 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var other = array[index];\n      if (other !== other) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if `value` is object-like.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   */\n  function isObjectLike(value) {\n    return !!value && typeof value == 'object';\n  }\n\n  /**\n   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n   * character code is whitespace.\n   *\n   * @private\n   * @param {number} charCode The character code to inspect.\n   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n   */\n  function isSpace(charCode) {\n    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||\n      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      if (array[index] === placeholder) {\n        array[index] = PLACEHOLDER;\n        result[++resIndex] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * An implementation of `_.uniq` optimized for sorted arrays without support\n   * for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} [iteratee] The function invoked per iteration.\n   * @returns {Array} Returns the new duplicate-value-free array.\n   */\n  function sortedUniq(array, iteratee) {\n    var seen,\n        index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index],\n          computed = iteratee ? iteratee(value, index, array) : value;\n\n      if (!index || seen !== computed) {\n        seen = computed;\n        result[++resIndex] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the first non-whitespace character.\n   */\n  function trimmedLeftIndex(string) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedRightIndex(string) {\n    var index = string.length;\n\n    while (index-- && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  function unescapeHtmlChar(chr) {\n    return htmlUnescapes[chr];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the given `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utility\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // using `context` to mock `Date#getTime` use in `_.now`\n   * var mock = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': getTimeMock };\n   *   }\n   * });\n   *\n   * // or creating a suped-up `defer` in Node.js\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  function runInContext(context) {\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See https://es5.github.io/#x11.1.5 for more details.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Number = context.Number,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for native method references. */\n    var arrayProto = Array.prototype,\n        objectProto = Object.prototype,\n        stringProto = String.prototype;\n\n    /** Used to detect DOM support. */\n    var document = (document = context.window) && document.document;\n\n    /** Used to resolve the decompiled source of functions. */\n    var fnToString = Function.prototype.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /**\n     * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = context._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      escapeRegExp(objToString)\n      .replace(/toString|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Native method references. */\n    var ArrayBuffer = isNative(ArrayBuffer = context.ArrayBuffer) && ArrayBuffer,\n        bufferSlice = isNative(bufferSlice = ArrayBuffer && new ArrayBuffer(0).slice) && bufferSlice,\n        ceil = Math.ceil,\n        clearTimeout = context.clearTimeout,\n        floor = Math.floor,\n        getOwnPropertySymbols = isNative(getOwnPropertySymbols = Object.getOwnPropertySymbols) && getOwnPropertySymbols,\n        getPrototypeOf = isNative(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf,\n        push = arrayProto.push,\n        preventExtensions = isNative(Object.preventExtensions = Object.preventExtensions) && preventExtensions,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        Set = isNative(Set = context.Set) && Set,\n        setTimeout = context.setTimeout,\n        splice = arrayProto.splice,\n        Uint8Array = isNative(Uint8Array = context.Uint8Array) && Uint8Array,\n        WeakMap = isNative(WeakMap = context.WeakMap) && WeakMap;\n\n    /** Used to clone array buffers. */\n    var Float64Array = (function() {\n      // Safari 5 errors when using an array buffer to initialize a typed array\n      // where the array buffer's `byteLength` is not a multiple of the typed\n      // array's `BYTES_PER_ELEMENT`.\n      try {\n        var func = isNative(func = context.Float64Array) && func,\n            result = new func(new ArrayBuffer(10), 0, 1) && func;\n      } catch(e) {}\n      return result;\n    }());\n\n    /** Used as `baseAssign`. */\n    var nativeAssign = (function() {\n      // Avoid `Object.assign` in Firefox 34-37 which have an early implementation\n      // with a now defunct try/catch behavior. See https://bugzilla.mozilla.org/show_bug.cgi?id=1103344\n      // for more details.\n      //\n      // Use `Object.preventExtensions` on a plain object instead of simply using\n      // `Object('x')` because Chrome and IE fail to throw an error when attempting\n      // to assign values to readonly indexes of strings in strict mode.\n      var object = { '1': 0 },\n          func = preventExtensions && isNative(func = Object.assign) && func;\n\n      try { func(preventExtensions(object), 'xo'); } catch(e) {}\n      return !object[1] && func;\n    }());\n\n    /* Native method references for those with the same name as other `lodash` methods. */\n    var nativeIsArray = isNative(nativeIsArray = Array.isArray) && nativeIsArray,\n        nativeCreate = isNative(nativeCreate = Object.create) && nativeCreate,\n        nativeIsFinite = context.isFinite,\n        nativeKeys = isNative(nativeKeys = Object.keys) && nativeKeys,\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = isNative(nativeNow = Date.now) && nativeNow,\n        nativeNumIsFinite = isNative(nativeNumIsFinite = Number.isFinite) && nativeNumIsFinite,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random;\n\n    /** Used as references for `-Infinity` and `Infinity`. */\n    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\n    /** Used as references for the maximum length and index of an array. */\n    var MAX_ARRAY_LENGTH = Math.pow(2, 32) - 1,\n        MAX_ARRAY_INDEX =  MAX_ARRAY_LENGTH - 1,\n        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n    /** Used as the size, in bytes, of each `Float64Array` element. */\n    var FLOAT64_BYTES_PER_ELEMENT = Float64Array ? Float64Array.BYTES_PER_ELEMENT : 0;\n\n    /**\n     * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n     * of an array-like value.\n     */\n    var MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit chaining.\n     * Methods that operate on and return arrays, collections, and functions can\n     * be chained together. Methods that return a boolean or single value will\n     * automatically end the chain returning the unwrapped value. Explicit chaining\n     * may be enabled using `_.chain`. The execution of chained methods is lazy,\n     * that is, execution is deferred until `_#value` is implicitly or explicitly\n     * called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n     * fusion is an optimization that merges iteratees to avoid creating intermediate\n     * arrays and reduce the number of iteratee executions.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\n     * `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\n     * and `where`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defer`, `delay`,\n     * `difference`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `fill`,\n     * `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`, `forEach`,\n     * `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `functions`,\n     * `groupBy`, `indexBy`, `initial`, `intersection`, `invert`, `invoke`, `keys`,\n     * `keysIn`, `map`, `mapValues`, `matches`, `matchesProperty`, `memoize`,\n     * `merge`, `mixin`, `negate`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n     * `partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,\n     * `pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `reverse`,\n     * `shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`, `sortByOrder`, `splice`,\n     * `spread`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `tap`,\n     * `throttle`, `thru`, `times`, `toArray`, `toPlainObject`, `transform`,\n     * `union`, `uniq`, `unshift`, `unzip`, `values`, `valuesIn`, `where`,\n     * `without`, `wrap`, `xor`, `zip`, and `zipObject`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `clone`, `cloneDeep`, `deburr`,\n     * `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`,\n     * `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`, `has`,\n     * `identity`, `includes`, `indexOf`, `inRange`, `isArguments`, `isArray`,\n     * `isBoolean`, `isDate`, `isElement`, `isEmpty`, `isEqual`, `isError`, `isFinite`\n     * `isFunction`, `isMatch`, `isNative`, `isNaN`, `isNull`, `isNumber`, `isObject`,\n     * `isPlainObject`, `isRegExp`, `isString`, `isUndefined`, `isTypedArray`,\n     * `join`, `kebabCase`, `last`, `lastIndexOf`, `max`, `min`, `noConflict`,\n     * `noop`, `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`, `random`,\n     * `reduce`, `reduceRight`, `repeat`, `result`, `runInContext`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`, `startCase`, `startsWith`,\n     * `sum`, `template`, `trim`, `trimLeft`, `trimRight`, `trunc`, `unescape`,\n     * `uniqueId`, `value`, and `words`\n     *\n     * The wrapper method `sample` will return a wrapped value when `n` is provided,\n     * otherwise an unwrapped value is returned.\n     *\n     * @name _\n     * @constructor\n     * @category Chain\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // returns an unwrapped value\n     * wrapped.reduce(function(total, n) {\n     *   return total + n;\n     * });\n     * // => 6\n     *\n     * // returns a wrapped value\n     * var squares = wrapped.map(function(n) {\n     *   return n * n;\n     * });\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The function whose prototype all chaining wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n     */\n    function LodashWrapper(value, chainAll, actions) {\n      this.__wrapped__ = value;\n      this.__actions__ = actions || [];\n      this.__chain__ = !!chainAll;\n    }\n\n    /**\n     * An object environment feature flags.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    var support = lodash.support = {};\n\n    (function(x) {\n      var Ctor = function() { this.x = x; },\n          object = { '0': x, 'length': x },\n          props = [];\n\n      Ctor.prototype = { 'valueOf': x, 'y': x };\n      for (var key in new Ctor) { props.push(key); }\n\n      /**\n       * Detect if functions can be decompiled by `Function#toString`\n       * (all but Firefox OS certified apps, older Opera mobile browsers, and\n       * the PlayStation 3; forced `false` for Windows 8 apps).\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n      support.funcDecomp = /\\bthis\\b/.test(function() { return this; });\n\n      /**\n       * Detect if `Function#name` is supported (all but IE).\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n      support.funcNames = typeof Function.name == 'string';\n\n      /**\n       * Detect if the DOM is supported.\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n      try {\n        support.dom = document.createDocumentFragment().nodeType === 11;\n      } catch(e) {\n        support.dom = false;\n      }\n\n      /**\n       * Detect if `arguments` object indexes are non-enumerable.\n       *\n       * In Firefox < 4, IE < 9, PhantomJS, and Safari < 5.1 `arguments` object\n       * indexes are non-enumerable. Chrome < 25 and Node.js < 0.11.0 treat\n       * `arguments` object indexes as non-enumerable and fail `hasOwnProperty`\n       * checks for indexes that exceed the number of function parameters and\n       * whose associated argument values are `0`.\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n      try {\n        support.nonEnumArgs = !propertyIsEnumerable.call(arguments, 1);\n      } catch(e) {\n        support.nonEnumArgs = true;\n      }\n    }(1, 0));\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type string\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type Object\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type Function\n         */\n        '_': lodash\n      }\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = null;\n      this.__dir__ = 1;\n      this.__dropCount__ = 0;\n      this.__filtered__ = false;\n      this.__iteratees__ = null;\n      this.__takeCount__ = POSITIVE_INFINITY;\n      this.__views__ = null;\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var actions = this.__actions__,\n          iteratees = this.__iteratees__,\n          views = this.__views__,\n          result = new LazyWrapper(this.__wrapped__);\n\n      result.__actions__ = actions ? arrayCopy(actions) : null;\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = iteratees ? arrayCopy(iteratees) : null;\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = views ? arrayCopy(views) : null;\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value();\n      if (!isArray(array)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var dir = this.__dir__,\n          isRight = dir < 0,\n          view = getView(0, array.length, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          takeCount = nativeMin(length, this.__takeCount__),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees ? iteratees.length : 0,\n          resIndex = 0,\n          result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type;\n\n          if (type == LAZY_DROP_WHILE_FLAG) {\n            if (data.done && (isRight ? (index > data.index) : (index < data.index))) {\n              data.count = 0;\n              data.done = false;\n            }\n            data.index = index;\n            if (!data.done) {\n              var limit = data.limit;\n              if (!(data.done = limit > -1 ? (data.count++ >= limit) : !iteratee(value))) {\n                continue outer;\n              }\n            }\n          } else {\n            var computed = iteratee(value);\n            if (type == LAZY_MAP_FLAG) {\n              value = computed;\n            } else if (!computed) {\n              if (type == LAZY_FILTER_FLAG) {\n                continue outer;\n              } else {\n                break outer;\n              }\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a cache object to store key/value pairs.\n     *\n     * @private\n     * @static\n     * @name Cache\n     * @memberOf _.memoize\n     */\n    function MapCache() {\n      this.__data__ = {};\n    }\n\n    /**\n     * Removes `key` and its value from the cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n     */\n    function mapDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n\n    /**\n     * Gets the cached value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the cached value.\n     */\n    function mapGet(key) {\n      return key == '__proto__' ? undefined : this.__data__[key];\n    }\n\n    /**\n     * Checks if a cached value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapHas(key) {\n      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n    }\n\n    /**\n     * Sets `value` to `key` of the cache.\n     *\n     * @private\n     * @name set\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to cache.\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache object.\n     */\n    function mapSet(key, value) {\n      if (key != '__proto__') {\n        this.__data__[key] = value;\n      }\n      return this;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates a cache object to store unique values.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var length = values ? values.length : 0;\n\n      this.data = { 'hash': nativeCreate(null), 'set': new Set };\n      while (length--) {\n        this.push(values[length]);\n      }\n    }\n\n    /**\n     * Checks if `value` is in `cache` mimicking the return signature of\n     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n     *\n     * @private\n     * @param {Object} cache The cache to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `0` if `value` is found, else `-1`.\n     */\n    function cacheIndexOf(cache, value) {\n      var data = cache.data,\n          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\n\n      return result ? 0 : -1;\n    }\n\n    /**\n     * Adds `value` to the cache.\n     *\n     * @private\n     * @name push\n     * @memberOf SetCache\n     * @param {*} value The value to cache.\n     */\n    function cachePush(value) {\n      var data = this.data;\n      if (typeof value == 'string' || isObject(value)) {\n        data.set.add(value);\n      } else {\n        data.hash[value] = true;\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayCopy(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEach` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEach(array, iteratee) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (iteratee(array[index], index, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEachRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEachRight(array, iteratee) {\n      var length = array.length;\n\n      while (length--) {\n        if (iteratee(array[length], length, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.every` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     */\n    function arrayEvery(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (!predicate(array[index], index, array)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `_.filter` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function arrayFilter(array, predicate) {\n      var index = -1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.map` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function arrayMap(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = iteratee(array[index], index, array);\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.max` for arrays without support for iteratees.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     */\n    function arrayMax(array) {\n      var index = -1,\n          length = array.length,\n          result = NEGATIVE_INFINITY;\n\n      while (++index < length) {\n        var value = array[index];\n        if (value > result) {\n          result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.min` for arrays without support for iteratees.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     */\n    function arrayMin(array) {\n      var index = -1,\n          length = array.length,\n          result = POSITIVE_INFINITY;\n\n      while (++index < length) {\n        var value = array[index];\n        if (value < result) {\n          result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.reduce` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the first element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n      var index = -1,\n          length = array.length;\n\n      if (initFromArray && length) {\n        accumulator = array[++index];\n      }\n      while (++index < length) {\n        accumulator = iteratee(accumulator, array[index], index, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.reduceRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the last element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n      var length = array.length;\n      if (initFromArray && length) {\n        accumulator = array[--length];\n      }\n      while (length--) {\n        accumulator = iteratee(accumulator, array[length], length, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.some` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function arraySome(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (predicate(array[index], index, array)) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `_.sum` for arrays without support for iteratees.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     */\n    function arraySum(array) {\n      var length = array.length,\n          result = 0;\n\n      while (length--) {\n        result += +array[length] || 0;\n      }\n      return result;\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assign` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : objectValue;\n    }\n\n    /**\n     * Used by `_.template` to customize its `_.assign` use.\n     *\n     * **Note:** This function is like `assignDefaults` except that it ignores\n     * inherited property values when checking if a property is `undefined`.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @param {string} key The key associated with the object and source values.\n     * @param {Object} object The destination object.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n      return (objectValue === undefined || !hasOwnProperty.call(object, key))\n        ? sourceValue\n        : objectValue;\n    }\n\n    /**\n     * A specialized version of `_.assign` for customizing assigned values without\n     * support for argument juggling, multiple sources, and `this` binding `customizer`\n     * functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     */\n    function assignWith(object, source, customizer) {\n      var props = keys(source);\n      push.apply(props, getSymbols(source));\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key],\n            result = customizer(value, source[key], key, object, source);\n\n        if ((result === result ? (result !== value) : (value === value)) ||\n            (value === undefined && !(key in object))) {\n          object[key] = result;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for argument juggling,\n     * multiple sources, and `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    var baseAssign = nativeAssign || function(object, source) {\n      return source == null\n        ? object\n        : baseCopy(source, getSymbols(source), baseCopy(source, keys(source), object));\n    };\n\n    /**\n     * The base implementation of `_.at` without support for string collections\n     * and individual key arguments.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {number[]|string[]} props The property names or indexes of elements to pick.\n     * @returns {Array} Returns the new array of picked elements.\n     */\n    function baseAt(collection, props) {\n      var index = -1,\n          length = collection.length,\n          isArr = isLength(length),\n          propsLength = props.length,\n          result = Array(propsLength);\n\n      while(++index < propsLength) {\n        var key = props[index];\n        if (isArr) {\n          result[index] = isIndex(key, length) ? collection[key] : undefined;\n        } else {\n          result[index] = collection[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property names to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @returns {Object} Returns `object`.\n     */\n    function baseCopy(source, props, object) {\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n        object[key] = source[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.callback` which supports specifying the\n     * number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function baseCallback(func, thisArg, argCount) {\n      var type = typeof func;\n      if (type == 'function') {\n        return thisArg === undefined\n          ? func\n          : bindCallback(func, thisArg, argCount);\n      }\n      if (func == null) {\n        return identity;\n      }\n      if (type == 'object') {\n        return baseMatches(func);\n      }\n      return thisArg === undefined\n        ? property(func)\n        : baseMatchesProperty(func, thisArg);\n    }\n\n    /**\n     * The base implementation of `_.clone` without support for argument juggling\n     * and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The object `value` belongs to.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return arrayCopy(value, result);\n        }\n      } else {\n        var tag = objToString.call(value),\n            isFunc = tag == funcTag;\n\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return baseAssign(result, value);\n          }\n        } else {\n          return cloneableTags[tag]\n            ? initCloneByTag(value, tag, isDeep)\n            : (object ? value : {});\n        }\n      }\n      // Check for circular references and return corresponding clone.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == value) {\n          return stackB[length];\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate it with its clone.\n      stackA.push(value);\n      stackB.push(result);\n\n      // Recursively populate clone (susceptible to call stack limits).\n      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function Object() {}\n      return function(prototype) {\n        if (isObject(prototype)) {\n          Object.prototype = prototype;\n          var result = new Object;\n          Object.prototype = null;\n        }\n        return result || context.Object();\n      };\n    }());\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts an index\n     * of where to slice the arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Object} args The arguments provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of `_.difference` which accepts a single array\n     * of values to exclude.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values) {\n      var length = array ? array.length : 0,\n          result = [];\n\n      if (!length) {\n        return result;\n      }\n      var index = -1,\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          cache = (isCommon && values.length >= 200) ? createCache(values) : null,\n          valuesLength = values.length;\n\n      if (cache) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n        values = cache;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index];\n\n        if (isCommon && value === value) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === value) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (indexOf(values, value, 0) < 0) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : (end >>> 0);\n      start >>>= 0;\n\n      while (start < length) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n     * without support for callback shorthands and `this` binding, which iterates\n     * over `collection` using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @param {boolean} [retKey] Specify returning the key of the found element\n     *  instead of the element itself.\n     * @returns {*} Returns the found element or its key, else `undefined`.\n     */\n    function baseFind(collection, predicate, eachFunc, retKey) {\n      var result;\n      eachFunc(collection, function(value, key, collection) {\n        if (predicate(value, key, collection)) {\n          result = retKey ? key : value;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with added support for restricting\n     * flattening and specifying the start index.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {boolean} isDeep Specify a deep flatten.\n     * @param {boolean} isStrict Restrict flattening to arrays and `arguments` objects.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, isDeep, isStrict) {\n      var index = -1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n\n        if (isObjectLike(value) && isLength(value.length) && (isArray(value) || isArguments(value))) {\n          if (isDeep) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            value = baseFlatten(value, isDeep, isStrict);\n          }\n          var valIndex = -1,\n              valLength = value.length;\n\n          result.length += valLength;\n          while (++valIndex < valLength) {\n            result[++resIndex] = value[valIndex];\n          }\n        } else if (!isStrict) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n     * each property. Iteratee functions may exit iteration early by explicitly\n     * returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forIn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForIn(object, iteratee) {\n      return baseFor(object, iteratee, keysIn);\n    }\n\n    /**\n     * The base implementation of `_.forOwn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from those provided.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the new array of filtered property names.\n     */\n    function baseFunctions(object, props) {\n      var index = -1,\n          length = props.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var key = props[index];\n        if (isFunction(object[key])) {\n          result[++resIndex] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `get` without support for string paths\n     * and default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path of the property to get.\n     * @param {string} [pathKey] The key representation of path.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path, pathKey) {\n      if (object == null) {\n        return;\n      }\n      if (pathKey !== undefined && pathKey in toObject(object)) {\n        path = [pathKey];\n      }\n      var index = -1,\n          length = path.length;\n\n      while (object != null && ++index < length) {\n        var result = object = object[path[index]];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` without support for `this` binding\n     * `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n      // Exit early for identical values.\n      if (value === other) {\n        // Treat `+0` vs. `-0` as not equal.\n        return value !== 0 || (1 / value == 1 / other);\n      }\n      var valType = typeof value,\n          othType = typeof other;\n\n      // Exit early for unlike primitive values.\n      if ((valType != 'function' && valType != 'object' && othType != 'function' && othType != 'object') ||\n          value == null || other == null) {\n        // Return `false` unless both values are `NaN`.\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = objToString.call(object);\n        if (objTag == argsTag) {\n          objTag = objectTag;\n        } else if (objTag != objectTag) {\n          objIsArr = isTypedArray(object);\n        }\n      }\n      if (!othIsArr) {\n        othTag = objToString.call(other);\n        if (othTag == argsTag) {\n          othTag = objectTag;\n        } else if (othTag != objectTag) {\n          othIsArr = isTypedArray(other);\n        }\n      }\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !(objIsArr || objIsObj)) {\n        return equalByTag(object, other, objTag);\n      }\n      if (!isLoose) {\n        var valWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (valWrapped || othWrapped) {\n          return equalFunc(valWrapped ? object.value() : object, othWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      // For more information on detecting circular references see https://es5.github.io/#JO.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == object) {\n          return stackB[length] == other;\n        }\n      }\n      // Add `object` and `other` to the stack of traversed objects.\n      stackA.push(object);\n      stackB.push(other);\n\n      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\n      stackA.pop();\n      stackB.pop();\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The source property names to match.\n     * @param {Array} values The source values to match.\n     * @param {Array} strictCompareFlags Strict comparison flags for source values.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, props, values, strictCompareFlags, customizer) {\n      var index = -1,\n          length = props.length,\n          noCustomizer = !customizer;\n\n      while (++index < length) {\n        if ((noCustomizer && strictCompareFlags[index])\n              ? values[index] !== object[props[index]]\n              : !(props[index] in object)\n            ) {\n          return false;\n        }\n      }\n      index = -1;\n      while (++index < length) {\n        var key = props[index],\n            objValue = object[key],\n            srcValue = values[index];\n\n        if (noCustomizer && strictCompareFlags[index]) {\n          var result = objValue !== undefined || (key in object);\n        } else {\n          result = customizer ? customizer(objValue, srcValue, key) : undefined;\n          if (result === undefined) {\n            result = baseIsEqual(srcValue, objValue, customizer, true);\n          }\n        }\n        if (!result) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          length = getLength(collection),\n          result = isLength(length) ? Array(length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which does not clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatches(source) {\n      var props = keys(source),\n          length = props.length;\n\n      if (!length) {\n        return constant(true);\n      }\n      if (length == 1) {\n        var key = props[0],\n            value = source[key];\n\n        if (isStrictComparable(value)) {\n          return function(object) {\n            if (object == null) {\n              return false;\n            }\n            return object[key] === value && (value !== undefined || (key in toObject(object)));\n          };\n        }\n      }\n      var values = Array(length),\n          strictCompareFlags = Array(length);\n\n      while (length--) {\n        value = source[props[length]];\n        values[length] = value;\n        strictCompareFlags[length] = isStrictComparable(value);\n      }\n      return function(object) {\n        return object != null && baseIsMatch(toObject(object), props, values, strictCompareFlags);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which does not which does\n     * not clone `value`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} value The value to compare.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatchesProperty(path, value) {\n      var isArr = isArray(path),\n          isCommon = isKey(path) && isStrictComparable(value),\n          pathKey = (path + '');\n\n      path = toPath(path);\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        var key = pathKey;\n        object = toObject(object);\n        if ((isArr || !isCommon) && !(key in object)) {\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          if (object == null) {\n            return false;\n          }\n          key = last(path);\n          object = toObject(object);\n        }\n        return object[key] === value\n          ? (value !== undefined || (key in object))\n          : baseIsEqual(value, object[key], null, true);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for argument juggling,\n     * multiple sources, and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [customizer] The function to customize merging properties.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {Object} Returns `object`.\n     */\n    function baseMerge(object, source, customizer, stackA, stackB) {\n      if (!isObject(object)) {\n        return object;\n      }\n      var isSrcArr = isLength(source.length) && (isArray(source) || isTypedArray(source));\n      if (!isSrcArr) {\n        var props = keys(source);\n        push.apply(props, getSymbols(source));\n      }\n      arrayEach(props || source, function(srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n        if (isObjectLike(srcValue)) {\n          stackA || (stackA = []);\n          stackB || (stackB = []);\n          baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n        }\n        else {\n          var value = object[key],\n              result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n              isCommon = result === undefined;\n\n          if (isCommon) {\n            result = srcValue;\n          }\n          if ((isSrcArr || result !== undefined) &&\n              (isCommon || (result === result ? (result !== value) : (value === value)))) {\n            object[key] = result;\n          }\n        }\n      });\n      return object;\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize merging properties.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n      var length = stackA.length,\n          srcValue = source[key];\n\n      while (length--) {\n        if (stackA[length] == srcValue) {\n          object[key] = stackB[length];\n          return;\n        }\n      }\n      var value = object[key],\n          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n          isCommon = result === undefined;\n\n      if (isCommon) {\n        result = srcValue;\n        if (isLength(srcValue.length) && (isArray(srcValue) || isTypedArray(srcValue))) {\n          result = isArray(value)\n            ? value\n            : (getLength(value) ? arrayCopy(value) : []);\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          result = isArguments(value)\n            ? toPlainObject(value)\n            : (isPlainObject(value) ? value : {});\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate\n      // it with its merged value.\n      stackA.push(srcValue);\n      stackB.push(result);\n\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n      } else if (result === result ? (result !== value) : (value === value)) {\n        object[key] = result;\n      }\n    }\n\n    /**\n     * The base implementation of `_.property` without support for deep paths.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function baseProperty(key) {\n      return function(object) {\n        return object == null ? undefined : object[key];\n      };\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function basePropertyDeep(path) {\n      var pathKey = (path + '');\n      path = toPath(path);\n      return function(object) {\n        return baseGet(object, path, pathKey);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * index arguments and capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = indexes.length;\n      while (length--) {\n        var index = parseFloat(indexes[length]);\n        if (index != previous && isIndex(index)) {\n          var previous = index;\n          splice.call(array, index, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for argument juggling\n     * and returning floating-point numbers.\n     *\n     * @private\n     * @param {number} min The minimum possible value.\n     * @param {number} max The maximum possible value.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(min, max) {\n      return min + floor(nativeRandom() * (max - min + 1));\n    }\n\n    /**\n     * The base implementation of `_.reduce` and `_.reduceRight` without support\n     * for callback shorthands and `this` binding, which iterates over `collection`\n     * using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} accumulator The initial value.\n     * @param {boolean} initFromCollection Specify using the first or last element\n     *  of `collection` as the initial value.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @returns {*} Returns the accumulated value.\n     */\n    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n      eachFunc(collection, function(value, index, collection) {\n        accumulator = initFromCollection\n          ? (initFromCollection = false, value)\n          : iteratee(accumulator, value, index, collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortBy` which uses `comparer` to define\n     * the sort order of `array` and replaces criteria objects with their\n     * corresponding values.\n     *\n     * @private\n     * @param {Array} array The array to sort.\n     * @param {Function} comparer The function to define sort order.\n     * @returns {Array} Returns `array`.\n     */\n    function baseSortBy(array, comparer) {\n      var length = array.length;\n\n      array.sort(comparer);\n      while (length--) {\n        array[length] = array[length].value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.sortByOrder` without param guards.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseSortByOrder(collection, iteratees, orders) {\n      var callback = getCallback(),\n          index = -1;\n\n      iteratees = arrayMap(iteratees, function(iteratee) { return callback(iteratee); });\n\n      var result = baseMap(collection, function(value) {\n        var criteria = arrayMap(iteratees, function(iteratee) { return iteratee(value); });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.sum` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function baseSum(collection, iteratee) {\n      var result = 0;\n      baseEach(collection, function(value, index, collection) {\n        result += +iteratee(value, index, collection) || 0;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.uniq` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The function invoked per iteration.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     */\n    function baseUniq(array, iteratee) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array.length,\n          isCommon = indexOf == baseIndexOf,\n          isLarge = isCommon && length >= 200,\n          seen = isLarge ? createCache() : null,\n          result = [];\n\n      if (seen) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n      } else {\n        isLarge = false;\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value, index, array) : value;\n\n        if (isCommon && value === value) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (indexOf(seen, computed, 0) < 0) {\n          if (iteratee || isLarge) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.values` and `_.valuesIn` which creates an\n     * array of `object` property values corresponding to the property names\n     * of `props`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} props The property names to get values for.\n     * @returns {Object} Returns the array of property values.\n     */\n    function baseValues(object, props) {\n      var index = -1,\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = object[props[index]];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,\n     * and `_.takeWhile` without support for callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      var index = -1,\n          length = actions.length;\n\n      while (++index < length) {\n        var args = [result],\n            action = actions[index];\n\n        push.apply(args, action.args);\n        result = action.func.apply(action.thisArg, args);\n      }\n      return result;\n    }\n\n    /**\n     * Performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (retHighest ? (computed <= value) : (computed < value)) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return binaryIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * This function is like `binaryIndex` except that it invokes `iteratee` for\n     * `value` and each element of `array` to compute their sort ranking. The\n     * iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsUndef = value === undefined;\n\n      while (low < high) {\n        var mid = floor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            isReflexive = computed === computed;\n\n        if (valIsNaN) {\n          var setLow = isReflexive || retHighest;\n        } else if (valIsUndef) {\n          setLow = isReflexive && (retHighest || computed !== undefined);\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * A specialized version of `baseCallback` which only supports `this` binding\n     * and specifying the number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function bindCallback(func, thisArg, argCount) {\n      if (typeof func != 'function') {\n        return identity;\n      }\n      if (thisArg === undefined) {\n        return func;\n      }\n      switch (argCount) {\n        case 1: return function(value) {\n          return func.call(thisArg, value);\n        };\n        case 3: return function(value, index, collection) {\n          return func.call(thisArg, value, index, collection);\n        };\n        case 4: return function(accumulator, value, index, collection) {\n          return func.call(thisArg, accumulator, value, index, collection);\n        };\n        case 5: return function(value, other, key, object, source) {\n          return func.call(thisArg, value, other, key, object, source);\n        };\n      }\n      return function() {\n        return func.apply(thisArg, arguments);\n      };\n    }\n\n    /**\n     * Creates a clone of the given array buffer.\n     *\n     * @private\n     * @param {ArrayBuffer} buffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function bufferClone(buffer) {\n      return bufferSlice.call(buffer, 0);\n    }\n    if (!bufferSlice) {\n      // PhantomJS has `ArrayBuffer` and `Uint8Array` but not `Float64Array`.\n      bufferClone = !(ArrayBuffer && Uint8Array) ? constant(null) : function(buffer) {\n        var byteLength = buffer.byteLength,\n            floatLength = Float64Array ? floor(byteLength / FLOAT64_BYTES_PER_ELEMENT) : 0,\n            offset = floatLength * FLOAT64_BYTES_PER_ELEMENT,\n            result = new ArrayBuffer(byteLength);\n\n        if (floatLength) {\n          var view = new Float64Array(result, 0, floatLength);\n          view.set(new Float64Array(buffer, 0, floatLength));\n        }\n        if (byteLength != offset) {\n          view = new Uint8Array(result, offset);\n          view.set(new Uint8Array(buffer, offset));\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders) {\n      var holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          leftIndex = -1,\n          leftLength = partials.length,\n          result = Array(argsLength + leftLength);\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        result[holders[argsIndex]] = args[argsIndex];\n      }\n      while (argsLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders) {\n      var holdersIndex = -1,\n          holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          rightIndex = -1,\n          rightLength = partials.length,\n          result = Array(argsLength + rightLength);\n\n      while (++argsIndex < argsLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var pad = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[pad + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        result[pad + holders[holdersIndex]] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * Creates a function that aggregates a collection, creating an accumulator\n     * object composed from the results of running each element in the collection\n     * through an iteratee.\n     *\n     * **Note:** This function is used to create `_.countBy`, `_.groupBy`, `_.indexBy`,\n     * and `_.partition`.\n     *\n     * @private\n     * @param {Function} setter The function to set keys and values of the accumulator object.\n     * @param {Function} [initializer] The function to initialize the accumulator object.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee, thisArg) {\n        var result = initializer ? initializer() : {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        if (isArray(collection)) {\n          var index = -1,\n              length = collection.length;\n\n          while (++index < length) {\n            var value = collection[index];\n            setter(result, value, iteratee(value, index, collection), collection);\n          }\n        } else {\n          baseEach(collection, function(value, key, collection) {\n            setter(result, value, iteratee(value, key, collection), collection);\n          });\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that assigns properties of source object(s) to a given\n     * destination object.\n     *\n     * **Note:** This function is used to create `_.assign`, `_.defaults`, and `_.merge`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return restParam(function(object, sources) {\n        var index = -1,\n            length = object == null ? 0 : sources.length,\n            customizer = length > 2 && sources[length - 2],\n            guard = length > 2 && sources[2],\n            thisArg = length > 1 && sources[length - 1];\n\n        if (typeof customizer == 'function') {\n          customizer = bindCallback(customizer, thisArg, 5);\n          length -= 2;\n        } else {\n          customizer = typeof thisArg == 'function' ? thisArg : null;\n          length -= (customizer ? 1 : 0);\n        }\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? null : customizer;\n          length = 1;\n        }\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        var length = collection ? getLength(collection) : 0;\n        if (!isLength(length)) {\n          return eachFunc(collection, iteratee);\n        }\n        var index = fromRight ? length : -1,\n            iterable = toObject(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var iterable = toObject(object),\n            props = keysFunc(object),\n            length = props.length,\n            index = fromRight ? length : -1;\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var key = props[index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createBindWrapper(func, thisArg) {\n      var Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(thisArg, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `Set` cache object to optimize linear searches of large arrays.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n     */\n    var createCache = !(nativeCreate && Set) ? constant(null) : function(values) {\n      return new SetCache(values);\n    };\n\n    /**\n     * Creates a function that produces compound words out of the words in a\n     * given string.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        var index = -1,\n            array = words(deburr(string)),\n            length = array.length,\n            result = '';\n\n        while (++index < length) {\n          result = callback(result, array[index], index);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtorWrapper(Ctor) {\n      return function() {\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, arguments);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a `_.curry` or `_.curryRight` function.\n     *\n     * @private\n     * @param {boolean} flag The curry bit flag.\n     * @returns {Function} Returns the new curry function.\n     */\n    function createCurry(flag) {\n      function curryFunc(func, arity, guard) {\n        if (guard && isIterateeCall(func, arity, guard)) {\n          arity = null;\n        }\n        var result = createWrapper(func, flag, null, null, null, null, null, arity);\n        result.placeholder = curryFunc.placeholder;\n        return result;\n      }\n      return curryFunc;\n    }\n\n    /**\n     * Creates a `_.max` or `_.min` function.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to get the extremum value from an array.\n     * @param {boolean} [isMin] Specify returning the minimum, instead of the maximum,\n     *  extremum value.\n     * @returns {Function} Returns the new extremum function.\n     */\n    function createExtremum(arrayFunc, isMin) {\n      return function(collection, iteratee, thisArg) {\n        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n          iteratee = null;\n        }\n        var func = getCallback(),\n            noIteratee = iteratee == null;\n\n        if (!(func === baseCallback && noIteratee)) {\n          noIteratee = false;\n          iteratee = func(iteratee, thisArg, 3);\n        }\n        if (noIteratee) {\n          var isArr = isArray(collection);\n          if (!isArr && isString(collection)) {\n            iteratee = charAtCallback;\n          } else {\n            return arrayFunc(isArr ? collection : toIterable(collection));\n          }\n        }\n        return extremumBy(collection, iteratee, isMin);\n      };\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(eachFunc, fromRight) {\n      return function(collection, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        if (isArray(collection)) {\n          var index = baseFindIndex(collection, predicate, fromRight);\n          return index > -1 ? collection[index] : undefined;\n        }\n        return baseFind(collection, predicate, eachFunc);\n      }\n    }\n\n    /**\n     * Creates a `_.findIndex` or `_.findLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindIndex(fromRight) {\n      return function(array, predicate, thisArg) {\n        if (!(array && array.length)) {\n          return -1;\n        }\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFindIndex(array, predicate, fromRight);\n      };\n    }\n\n    /**\n     * Creates a `_.findKey` or `_.findLastKey` function.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindKey(objectFunc) {\n      return function(object, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFind(object, predicate, objectFunc, true);\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return function() {\n        var length = arguments.length;\n        if (!length) {\n          return function() { return arguments[0]; };\n        }\n        var wrapper,\n            index = fromRight ? length : -1,\n            leftIndex = 0,\n            funcs = Array(length);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var func = funcs[leftIndex++] = arguments[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          var funcName = wrapper ? '' : getFuncName(func);\n          wrapper = funcName == 'wrapper' ? new LodashWrapper([]) : wrapper;\n        }\n        index = wrapper ? -1 : length;\n        while (++index < length) {\n          func = funcs[index];\n          funcName = getFuncName(func);\n\n          var data = funcName == 'wrapper' ? getData(func) : null;\n          if (data && isLaziable(data[0])) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments;\n          if (wrapper && args.length == 1 && isArray(args[0])) {\n            return wrapper.plant(args[0]).value();\n          }\n          var index = 0,\n              result = funcs[index].apply(this, args);\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      };\n    }\n\n    /**\n     * Creates a function for `_.forEach` or `_.forEachRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForEach(arrayFunc, eachFunc) {\n      return function(collection, iteratee, thisArg) {\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee)\n          : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\n      };\n    }\n\n    /**\n     * Creates a function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForIn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee, keysIn);\n      };\n    }\n\n    /**\n     * Creates a function for `_.forOwn` or `_.forOwnRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForOwn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee);\n      };\n    }\n\n    /**\n     * Creates a function for `_.padLeft` or `_.padRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify padding from the right.\n     * @returns {Function} Returns the new pad function.\n     */\n    function createPadDir(fromRight) {\n      return function(string, length, chars) {\n        string = baseToString(string);\n        return string && ((fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string));\n      };\n    }\n\n    /**\n     * Creates a `_.partial` or `_.partialRight` function.\n     *\n     * @private\n     * @param {boolean} flag The partial bit flag.\n     * @returns {Function} Returns the new partial function.\n     */\n    function createPartial(flag) {\n      var partialFunc = restParam(function(func, partials) {\n        var holders = replaceHolders(partials, partialFunc.placeholder);\n        return createWrapper(func, flag, null, partials, holders);\n      });\n      return partialFunc;\n    }\n\n    /**\n     * Creates a function for `_.reduce` or `_.reduceRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createReduce(arrayFunc, eachFunc) {\n      return function(collection, iteratee, accumulator, thisArg) {\n        var initFromArray = arguments.length < 3;\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee, accumulator, initFromArray)\n          : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with optional `this`\n     * binding of, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurry = bitmask & CURRY_FLAG,\n          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n          isCurryRight = bitmask & CURRY_RIGHT_FLAG;\n\n      var Ctor = !isBindKey && createCtorWrapper(func),\n          key = func;\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it to other functions.\n        var length = arguments.length,\n            index = length,\n            args = Array(length);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight);\n        }\n        if (isCurry || isCurryRight) {\n          var placeholder = wrapper.placeholder,\n              argsHolders = replaceHolders(args, placeholder);\n\n          length -= argsHolders.length;\n          if (length < arity) {\n            var newArgPos = argPos ? arrayCopy(argPos) : null,\n                newArity = nativeMax(arity - length, 0),\n                newsHolders = isCurry ? argsHolders : null,\n                newHoldersRight = isCurry ? null : argsHolders,\n                newPartials = isCurry ? args : null,\n                newPartialsRight = isCurry ? null : args;\n\n            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n            if (!isCurryBound) {\n              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n            }\n            var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n                result = createHybridWrapper.apply(undefined, newData);\n\n            if (isLaziable(func)) {\n              setData(result, newData);\n            }\n            result.placeholder = placeholder;\n            return result;\n          }\n        }\n        var thisBinding = isBind ? thisArg : this;\n        if (isBindKey) {\n          func = thisBinding[key];\n        }\n        if (argPos) {\n          args = reorder(args, argPos);\n        }\n        if (isAry && ary < args.length) {\n          args.length = ary;\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? (Ctor || createCtorWrapper(func)) : func;\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates the padding required for `string` based on the given `length`.\n     * The `chars` string is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {string} string The string to create padding for.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the pad for `string`.\n     */\n    function createPadding(string, length, chars) {\n      var strLength = string.length;\n      length = +length;\n\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return '';\n      }\n      var padLength = length - strLength;\n      chars = chars == null ? ' ' : (chars + '');\n      return repeat(chars, ceil(padLength / chars.length)).slice(0, padLength);\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the optional `this`\n     * binding of `thisArg` and the `partials` prepended to those provided to\n     * the wrapper.\n     *\n     * @private\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to the new function.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createPartialWrapper(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it `func`.\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(argsLength + leftLength);\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.sortedIndex` or `_.sortedLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {Function} Returns the new index function.\n     */\n    function createSortedIndex(retHighest) {\n      return function(array, value, iteratee, thisArg) {\n        var func = getCallback(iteratee);\n        return (func === baseCallback && iteratee == null)\n          ? binaryIndex(array, value, retHighest)\n          : binaryIndexBy(array, value, func(iteratee, thisArg, 1), retHighest);\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = null;\n      }\n      length -= (holders ? holders.length : 0);\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = null;\n      }\n      var data = isBindKey ? null : getData(func),\n          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\n      if (data) {\n        mergeData(newData, data);\n        bitmask = newData[1];\n        arity = newData[9];\n      }\n      newData[9] = arity == null\n        ? (isBindKey ? 0 : func.length)\n        : (nativeMax(arity - length, 0) || 0);\n\n      if (bitmask == BIND_FLAG) {\n        var result = createBindWrapper(newData[0], newData[2]);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n        result = createPartialWrapper.apply(undefined, newData);\n      } else {\n        result = createHybridWrapper.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setter(result, newData);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing arrays.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var index = -1,\n          arrLength = array.length,\n          othLength = other.length,\n          result = true;\n\n      if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n        return false;\n      }\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (result && ++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        result = undefined;\n        if (customizer) {\n          result = isLoose\n            ? customizer(othValue, arrValue, index)\n            : customizer(arrValue, othValue, index);\n        }\n        if (result === undefined) {\n          // Recursively compare arrays (susceptible to call stack limits).\n          if (isLoose) {\n            var othIndex = othLength;\n            while (othIndex--) {\n              othValue = other[othIndex];\n              result = (arrValue && arrValue === othValue) || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n              if (result) {\n                break;\n              }\n            }\n          } else {\n            result = (arrValue && arrValue === othValue) || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n          }\n        }\n      }\n      return !!result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} value The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag) {\n      switch (tag) {\n        case boolTag:\n        case dateTag:\n          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n          return +object == +other;\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case numberTag:\n          // Treat `NaN` vs. `NaN` as equal.\n          return (object != +object)\n            ? other != +other\n            // But, treat `-0` vs. `+0` as not equal.\n            : (object == 0 ? ((1 / object) == (1 / other)) : object == +other);\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings primitives and string\n          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n          return object == (other + '');\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isLoose) {\n        return false;\n      }\n      var skipCtor = isLoose,\n          index = -1;\n\n      while (++index < objLength) {\n        var key = objProps[index],\n            result = isLoose ? key in other : hasOwnProperty.call(other, key);\n\n        if (result) {\n          var objValue = object[key],\n              othValue = other[key];\n\n          result = undefined;\n          if (customizer) {\n            result = isLoose\n              ? customizer(othValue, objValue, key)\n              : customizer(objValue, othValue, key);\n          }\n          if (result === undefined) {\n            // Recursively compare objects (susceptible to call stack limits).\n            result = (objValue && objValue === othValue) || equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB);\n          }\n        }\n        if (!result) {\n          return false;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (!skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Gets the extremum value of `collection` invoking `iteratee` for each value\n     * in `collection` to generate the criterion by which the value is ranked.\n     * The `iteratee` is invoked with three arguments: (value, index, collection).\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {boolean} [isMin] Specify returning the minimum, instead of the\n     *  maximum, extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function extremumBy(collection, iteratee, isMin) {\n      var exValue = isMin ? POSITIVE_INFINITY : NEGATIVE_INFINITY,\n          computed = exValue,\n          result = computed;\n\n      baseEach(collection, function(value, index, collection) {\n        var current = iteratee(value, index, collection);\n        if ((isMin ? (current < computed) : (current > computed)) ||\n            (current === exValue && current === result)) {\n          computed = current;\n          result = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseCallback` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getCallback(func, thisArg, argCount) {\n      var result = lodash.callback || callback;\n      result = result === callback ? baseCallback : result;\n      return argCount ? result(func, thisArg, argCount) : result;\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    var getFuncName = (function() {\n      if (!support.funcNames) {\n        return constant('');\n      }\n      if (constant.name == 'constant') {\n        return baseProperty('name');\n      }\n      return function(func) {\n        var result = func.name,\n            array = realNames[result],\n            length = array ? array.length : 0;\n\n        while (length--) {\n          var data = array[length],\n              otherFunc = data.func;\n\n          if (otherFunc == null || otherFunc == func) {\n            return data.name;\n          }\n        }\n        return result;\n      };\n    }());\n\n    /**\n     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseIndexOf` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function|number} Returns the chosen function or its result.\n     */\n    function getIndexOf(collection, target, fromIndex) {\n      var result = lodash.indexOf || indexOf;\n      result = result === indexOf ? baseIndexOf : result;\n      return collection ? result(collection, target, fromIndex) : result;\n    }\n\n    /**\n     * Gets the \"length\" property value of `object`.\n     *\n     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n     * in Safari on iOS 8.1 ARM64.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {*} Returns the \"length\" value.\n     */\n    var getLength = baseProperty('length');\n\n    /**\n     * Creates an array of the own symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !getOwnPropertySymbols ? constant([]) : function(object) {\n      return getOwnPropertySymbols(toObject(object));\n    };\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} [transforms] The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms ? transforms.length : 0;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add array properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      var Ctor = object.constructor;\n      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n        Ctor = Object;\n      }\n      return new Ctor;\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return bufferClone(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          var buffer = object.buffer;\n          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          var result = new Ctor(object.source, reFlags.exec(object));\n          result.lastIndex = object.lastIndex;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the method at `path` on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function invokePath(object, path, args) {\n      if (object != null && !isKey(path, object)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        path = last(path);\n      }\n      var func = object == null ? object : object[path];\n      return func == null ? undefined : func.apply(object, args);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      value = +value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return value > -1 && value % 1 == 0 && value < length;\n    }\n\n    /**\n     * Checks if the provided arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number') {\n        var length = getLength(object),\n            prereq = isLength(length) && isIndex(index, length);\n      } else {\n        prereq = type == 'string' && index in object;\n      }\n      if (prereq) {\n        var other = object[index];\n        return value === value ? (value === other) : (other !== other);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      var type = typeof value;\n      if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n        return true;\n      }\n      if (isArray(value)) {\n        return false;\n      }\n      var result = !reIsDeepProp.test(value);\n      return result || (object != null && value in toObject(object));\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func);\n      return !!funcName && func === lodash[funcName] && funcName in LazyWrapper.prototype;\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     */\n    function isLength(value) {\n      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && (value === 0 ? ((1 / value) > 0) : !isObject(value));\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers required to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n     * augment function arguments, making the order in which they are executed important,\n     * preventing the merging of metadata. However, we make an exception for a safe\n     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < ARY_FLAG;\n\n      var isCombo =\n        (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) ||\n        (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) ||\n        (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = arrayCopy(value);\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * A specialized version of `_.pick` that picks `object` properties specified\n     * by `props`.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property names to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByArray(object, props) {\n      object = toObject(object);\n\n      var index = -1,\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index];\n        if (key in object) {\n          result[key] = object[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.pick` that picks `object` properties `predicate`\n     * returns truthy for.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByCallback(object, predicate) {\n      var result = {};\n      baseForIn(object, function(value, key, object) {\n        if (predicate(value, key, object)) {\n          result[key] = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = arrayCopy(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity function\n     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = (function() {\n      var count = 0,\n          lastCalled = 0;\n\n      return function(key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n        return baseSetData(key, value);\n      };\n    }());\n\n    /**\n     * A fallback implementation of `_.isPlainObject` which checks if `value`\n     * is an object created by the `Object` constructor or has a `[[Prototype]]`\n     * of `null`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     */\n    function shimIsPlainObject(value) {\n      var Ctor,\n          support = lodash.support;\n\n      // Exit early for non `Object` objects.\n      if (!(isObjectLike(value) && objToString.call(value) == objectTag) ||\n          (!hasOwnProperty.call(value, 'constructor') &&\n            (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n        return false;\n      }\n      // IE < 9 iterates inherited properties before own properties. If the first\n      // iterated property is an object's own property then there are no inherited\n      // enumerable properties.\n      var result;\n      // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n      baseForIn(value, function(subValue, key) {\n        result = key;\n      });\n      return result === undefined || hasOwnProperty.call(value, result);\n    }\n\n    /**\n     * A fallback implementation of `Object.keys` which creates an array of the\n     * own enumerable property names of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function shimKeys(object) {\n      var props = keysIn(object),\n          propsLength = props.length,\n          length = propsLength && object.length,\n          support = lodash.support;\n\n      var allowIndexes = length && isLength(length) &&\n        (isArray(object) || (support.nonEnumArgs && isArguments(object)));\n\n      var index = -1,\n          result = [];\n\n      while (++index < propsLength) {\n        var key = props[index];\n        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to an array-like object if it is not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array|Object} Returns the array-like object.\n     */\n    function toIterable(value) {\n      if (value == null) {\n        return [];\n      }\n      if (!isLength(getLength(value))) {\n        return values(value);\n      }\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to an object if it is not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Object} Returns the object.\n     */\n    function toObject(value) {\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to property path array if it is not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array} Returns the property path array.\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return value;\n      }\n      var result = [];\n      baseToString(value).replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      return wrapper instanceof LazyWrapper\n        ? wrapper.clone()\n        : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `collection` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new array containing chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n        size = 1;\n      } else {\n        size = nativeMax(+size || 1, 1);\n      }\n      var index = 0,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = Array(ceil(length / size));\n\n      while (index < length) {\n        result[++resIndex] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array excluding all values of the provided arrays using\n     * `SameValueZero` for equality comparisons.\n     *\n     * **Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * comparisons are like strict equality comparisons, e.g. `===`, except that\n     * `NaN` matches `NaN`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The arrays of values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.difference([1, 2, 3], [4, 2]);\n     * // => [1, 3]\n     */\n    var difference = restParam(function(array, values) {\n      return (isArray(array) || isArguments(array))\n        ? baseDifference(array, baseFlatten(values, false, true))\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that match the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [1]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active', false), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8], '*', 1, 2);\n     * // => [4, '*', 8]\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(chr) {\n     *   return chr.user == 'barney';\n     * });\n     * // => 0\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findIndex(users, 'active', false);\n     * // => 0\n     *\n     * // using the `_.property` callback shorthand\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    var findIndex = createFindIndex();\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(chr) {\n     *   return chr.user == 'pebbles';\n     * });\n     * // => 2\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastIndex(users, 'active', false);\n     * // => 2\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    var findLastIndex = createFindIndex(true);\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias head\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.first([1, 2, 3]);\n     * // => 1\n     *\n     * _.first([]);\n     * // => undefined\n     */\n    function first(array) {\n      return array ? array[0] : undefined;\n    }\n\n    /**\n     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n     * flattened, otherwise it is only flattened a single level.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, [4]]\n     *\n     * // using `isDeep`\n     * _.flatten([1, [2, 3, [4]]], true);\n     * // => [1, 2, 3, 4]\n     */\n    function flatten(array, isDeep, guard) {\n      var length = array ? array.length : 0;\n      if (guard && isIterateeCall(array, isDeep, guard)) {\n        isDeep = false;\n      }\n      return length ? baseFlatten(array, isDeep) : [];\n    }\n\n    /**\n     * Recursively flattens a nested array.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to recursively flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, 4]\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, true) : [];\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using `SameValueZero` for equality comparisons. If `fromIndex` is negative,\n     * it is used as the offset from the end of `array`. If `array` is sorted\n     * providing `true` for `fromIndex` performs a faster binary search.\n     *\n     * **Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * comparisons are like strict equality comparisons, e.g. `===`, except that\n     * `NaN` matches `NaN`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n     *  to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // using `fromIndex`\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     *\n     * // performing a binary search\n     * _.indexOf([1, 1, 2, 2], 2, true);\n     * // => 2\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      if (typeof fromIndex == 'number') {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n      } else if (fromIndex) {\n        var index = binaryIndex(array, value),\n            other = array[index];\n\n        if (value === value ? (value === other) : (other !== other)) {\n          return index;\n        }\n        return -1;\n      }\n      return baseIndexOf(array, value, fromIndex || 0);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n\n    /**\n     * Creates an array of unique values in all provided arrays using `SameValueZero`\n     * for equality comparisons.\n     *\n     * **Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * comparisons are like strict equality comparisons, e.g. `===`, except that\n     * `NaN` matches `NaN`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of shared values.\n     * @example\n     * _.intersection([1, 2], [4, 2], [2, 1]);\n     * // => [2]\n     */\n    function intersection() {\n      var args = [],\n          argsIndex = -1,\n          argsLength = arguments.length,\n          caches = [],\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          result = [];\n\n      while (++argsIndex < argsLength) {\n        var value = arguments[argsIndex];\n        if (isArray(value) || isArguments(value)) {\n          args.push(value);\n          caches.push((isCommon && value.length >= 120) ? createCache(argsIndex && value) : null);\n        }\n      }\n      argsLength = args.length;\n      if (argsLength < 2) {\n        return result;\n      }\n      var array = args[0],\n          index = -1,\n          length = array ? array.length : 0,\n          seen = caches[0];\n\n      outer:\n      while (++index < length) {\n        value = array[index];\n        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {\n          argsIndex = argsLength;\n          while (--argsIndex) {\n            var cache = caches[argsIndex];\n            if ((cache ? cacheIndexOf(cache, value) : indexOf(args[argsIndex], value, 0)) < 0) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(value);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n     *  or `true` to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // using `fromIndex`\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     *\n     * // performing a binary search\n     * _.lastIndexOf([1, 1, 2, 2], 2, true);\n     * // => 3\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (typeof fromIndex == 'number') {\n        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n      } else if (fromIndex) {\n        index = binaryIndex(array, value, true) - 1;\n        var other = array[index];\n        if (value === value ? (value === other) : (other !== other)) {\n          return index;\n        }\n        return -1;\n      }\n      if (value !== value) {\n        return indexOfNaN(array, index, true);\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Removes all provided values from `array` using `SameValueZero` for equality\n     * comparisons.\n     *\n     * **Notes:**\n     *  - Unlike `_.without`, this method mutates `array`\n     *  - [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     *    comparisons are like strict equality comparisons, e.g. `===`, except\n     *    that `NaN` matches `NaN`\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     *\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    function pull() {\n      var args = arguments,\n          array = args[0];\n\n      if (!(array && array.length)) {\n        return array;\n      }\n      var index = 0,\n          indexOf = getIndexOf(),\n          length = args.length;\n\n      while (++index < length) {\n        var fromIndex = 0,\n            value = args[index];\n\n        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to the given indexes and returns\n     * an array of the removed elements. Indexes may be specified as an array of\n     * indexes or as individual arguments.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [5, 10, 15, 20];\n     * var evens = _.pullAt(array, 1, 3);\n     *\n     * console.log(array);\n     * // => [5, 15]\n     *\n     * console.log(evens);\n     * // => [10, 20]\n     */\n    var pullAt = restParam(function(array, indexes) {\n      array || (array = []);\n      indexes = baseFlatten(indexes);\n\n      var result = baseAt(array, indexes);\n      basePullAt(array, indexes.sort(baseCompareAscending));\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate, thisArg) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getCallback(predicate, thisArg, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias tail\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.rest([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function rest(array) {\n      return drop(array, 1);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of `Array#slice` to support node\n     * lists in IE < 9 and to ensure dense arrays are returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value` should\n     * be inserted into `array` in order to maintain its sort order. If an iteratee\n     * function is provided it is invoked for `value` and each element of `array`\n     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n     * invoked with one argument; (value).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     *\n     * _.sortedIndex([4, 4, 5, 5], 5);\n     * // => 2\n     *\n     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n     *\n     * // using an iteratee function\n     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n     *   return this.data[word];\n     * }, dict);\n     * // => 1\n     *\n     * // using the `_.property` callback shorthand\n     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n     * // => 1\n     */\n    var sortedIndex = createSortedIndex();\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 4, 5, 5], 5);\n     * // => 4\n     */\n    var sortedLastIndex = createSortedIndex(true);\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n     * and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [2, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [1, 2]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active', false), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, of the provided arrays using\n     * `SameValueZero` for equality comparisons.\n     *\n     * **Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * comparisons are like strict equality comparisons, e.g. `===`, except that\n     * `NaN` matches `NaN`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([1, 2], [4, 2], [2, 1]);\n     * // => [1, 2, 4]\n     */\n    var union = restParam(function(arrays) {\n      return baseUniq(baseFlatten(arrays, false, true));\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using `SameValueZero` for\n     * equality comparisons, in which only the first occurence of each element\n     * is kept. Providing `true` for `isSorted` performs a faster search algorithm\n     * for sorted arrays. If an iteratee function is provided it is invoked for\n     * each element in the array to generate the criterion by which uniqueness\n     * is computed. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, array).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * **Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * comparisons are like strict equality comparisons, e.g. `===`, except that\n     * `NaN` matches `NaN`.\n     *\n     * @static\n     * @memberOf _\n     * @alias unique\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {boolean} [isSorted] Specify the array is sorted.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     *\n     * // using `isSorted`\n     * _.uniq([1, 1, 2], true);\n     * // => [1, 2]\n     *\n     * // using an iteratee function\n     * _.uniq([1, 2.5, 1.5, 2], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => [1, 2.5]\n     *\n     * // using the `_.property` callback shorthand\n     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniq(array, isSorted, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (isSorted != null && typeof isSorted != 'boolean') {\n        thisArg = iteratee;\n        iteratee = isIterateeCall(array, isSorted, thisArg) ? null : isSorted;\n        isSorted = false;\n      }\n      var func = getCallback();\n      if (!(func === baseCallback && iteratee == null)) {\n        iteratee = func(iteratee, thisArg, 3);\n      }\n      return (isSorted && getIndexOf() == baseIndexOf)\n        ? sortedUniq(array, iteratee)\n        : baseUniq(array, iteratee);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-`_.zip`\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['fred', 'barney'], [30, 40], [true, false]]\n     */\n    function unzip(array) {\n      var index = -1,\n          length = (array && array.length && arrayMax(arrayMap(array, getLength))) >>> 0,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = arrayMap(array, baseProperty(index));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array excluding all provided values using `SameValueZero` for\n     * equality comparisons.\n     *\n     * **Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * comparisons are like strict equality comparisons, e.g. `===`, except that\n     * `NaN` matches `NaN`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to filter.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 3], 1, 2);\n     * // => [3]\n     */\n    var without = restParam(function(array, values) {\n      return (isArray(array) || isArguments(array))\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the provided arrays.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of values.\n     * @example\n     *\n     * _.xor([1, 2], [4, 2]);\n     * // => [1, 4]\n     */\n    function xor() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var array = arguments[index];\n        if (isArray(array) || isArguments(array)) {\n          var result = result\n            ? baseDifference(result, array).concat(baseDifference(array, result))\n            : array;\n        }\n      }\n      return result ? baseUniq(result) : [];\n    }\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second elements\n     * of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    var zip = restParam(unzip);\n\n    /**\n     * The inverse of `_.pairs`; this method returns an object composed from arrays\n     * of property names and values. Provide either a single two dimensional array,\n     * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\n     * and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @alias object\n     * @category Array\n     * @param {Array} props The property names.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject([['fred', 30], ['barney', 40]]);\n     * // => { 'fred': 30, 'barney': 40 }\n     *\n     * _.zipObject(['fred', 'barney'], [30, 40]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function zipObject(props, values) {\n      var index = -1,\n          length = props ? props.length : 0,\n          result = {};\n\n      if (length && !values && !isArray(props[0])) {\n        values = [];\n      }\n      while (++index < length) {\n        var key = props[index];\n        if (values) {\n          result[key] = values[index];\n        } else if (key) {\n          result[key[0]] = key[1];\n        }\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps `value` with explicit method\n     * chaining enabled.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _.chain(users)\n     *   .sortBy('age')\n     *   .map(function(chr) {\n     *     return chr.user + ' is ' + chr.age;\n     *   })\n     *   .first()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor is\n     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n     * this method is to \"tap into\" a method chain in order to perform operations\n     * on intermediate results within the chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor, thisArg) {\n      interceptor.call(thisArg, value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor, thisArg) {\n      return interceptor.call(thisArg, value);\n    }\n\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // without explicit chaining\n     * _(users).first();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // with explicit chaining\n     * _(users).chain()\n     *   .first()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chained sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapper = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapper = wrapper.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapper.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapper = _(array).map(function(value) {\n     *   return Math.pow(value, 2);\n     * });\n     *\n     * var other = [3, 4];\n     * var otherWrapper = wrapper.plant(other);\n     *\n     * otherWrapper.value();\n     * // => [9, 16]\n     *\n     * wrapper.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * Reverses the wrapped array so the first element becomes the last, the\n     * second element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new reversed `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        if (this.__actions__.length) {\n          value = new LazyWrapper(this);\n        }\n        return new LodashWrapper(value.reverse(), this.__chain__);\n      }\n      return this.thru(function(value) {\n        return value.reverse();\n      });\n    }\n\n    /**\n     * Produces the result of coercing the unwrapped value to a string.\n     *\n     * @name toString\n     * @memberOf _\n     * @category Chain\n     * @returns {string} Returns the coerced string value.\n     * @example\n     *\n     * _([1, 2, 3]).toString();\n     * // => '1,2,3'\n     */\n    function wrapperToString() {\n      return (this.value() + '');\n    }\n\n    /**\n     * Executes the chained sequence to extract the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @alias run, toJSON, valueOf\n     * @category Chain\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements corresponding to the given keys, or indexes,\n     * of `collection`. Keys may be specified as individual arguments or as arrays\n     * of keys.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(number|number[]|string|string[])} [props] The property names\n     *  or indexes of elements to pick, specified individually or in arrays.\n     * @returns {Array} Returns the new array of picked elements.\n     * @example\n     *\n     * _.at(['a', 'b', 'c'], [0, 2]);\n     * // => ['a', 'c']\n     *\n     * _.at(['barney', 'fred', 'pebbles'], 0, 2);\n     * // => ['barney', 'pebbles']\n     */\n    var at = restParam(function(collection, props) {\n      var length = collection ? getLength(collection) : 0;\n      if (isLength(length)) {\n        collection = toIterable(collection);\n      }\n      return baseAt(collection, baseFlatten(props));\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the number of times the key was returned by `iteratee`.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * The predicate is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias all\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': false },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.every(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = null;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias select\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.filter([4, 5, 6], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 6]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.filter(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.filter(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function filter(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias detect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.result(_.find(users, function(chr) {\n     *   return chr.age < 40;\n     * }), 'user');\n     * // => 'barney'\n     *\n     * // using the `_.matches` callback shorthand\n     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.result(_.find(users, 'active', false), 'user');\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.result(_.find(users, 'active'), 'user');\n     * // => 'barney'\n     */\n    var find = createFind(baseEach);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(baseEachRight, true);\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning the first element that has equivalent property\n     * values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\n     * // => 'barney'\n     *\n     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\n     * // => 'fred'\n     */\n    function findWhere(collection, source) {\n      return find(collection, baseMatches(source));\n    }\n\n    /**\n     * Iterates over elements of `collection` invoking `iteratee` for each element.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection). Iteratee functions may exit iteration early\n     * by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n     * may be used for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEach(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from left to right and returns the array\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n     *   console.log(n, key);\n     * });\n     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n     */\n    var forEach = createForEach(arrayEach, baseEach);\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEachRight(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from right to left and returns the array\n     */\n    var forEachRight = createForEach(arrayEachRight, baseEachRight);\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is an array of the elements responsible for generating the key.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * // using the `_.property` callback shorthand\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection` using `SameValueZero` for equality\n     * comparisons. If `fromIndex` is negative, it is used as the offset from\n     * the end of `collection`.\n     *\n     * **Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * comparisons are like strict equality comparisons, e.g. `===`, except that\n     * `NaN` matches `NaN`.\n     *\n     * @static\n     * @memberOf _\n     * @alias contains, include\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} target The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.includes('pebbles', 'eb');\n     * // => true\n     */\n    function includes(collection, target, fromIndex, guard) {\n      var length = collection ? getLength(collection) : 0;\n      if (!isLength(length)) {\n        collection = values(collection);\n        length = collection.length;\n      }\n      if (!length) {\n        return false;\n      }\n      if (typeof fromIndex != 'number' || (guard && isIterateeCall(target, fromIndex, guard))) {\n        fromIndex = 0;\n      } else {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n      }\n      return (typeof collection == 'string' || !isArray(collection) && isString(collection))\n        ? (fromIndex < length && collection.indexOf(target, fromIndex) > -1)\n        : (getIndexOf(collection, target, fromIndex) > -1);\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the last element responsible for generating the key. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var keyData = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.indexBy(keyData, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return String.fromCharCode(object.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return this.fromCharCode(object.code);\n     * }, String);\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     */\n    var indexBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Invokes the method at `path` on each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `methodName` is a function it is\n     * invoked for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invoke([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invoke = restParam(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          length = getLength(collection),\n          result = isLength(length) ? Array(length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? path : (isProp && value != null && value[path]);\n        result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` through\n     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * Many lodash methods are guarded to work as interatees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`, `drop`,\n     * `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`, `parseInt`,\n     * `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`, `trimLeft`,\n     * `trimRight`, `trunc`, `random`, `range`, `sample`, `some`, `uniq`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @alias collect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function timesThree(n) {\n     *   return n * 3;\n     * }\n     *\n     * _.map([1, 2], timesThree);\n     * // => [3, 6]\n     *\n     * _.map({ 'a': 1, 'b': 2 }, timesThree);\n     * // => [3, 6] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee, thisArg) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return func(collection, iteratee);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, while the second of which\n     * contains elements `predicate` returns falsey for. The predicate is bound\n     * to `thisArg` and invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * _.partition([1, 2, 3], function(n) {\n     *   return n % 2;\n     * });\n     * // => [[1, 3], [2]]\n     *\n     * _.partition([1.2, 2.3, 3.4], function(n) {\n     *   return this.floor(n) % 2;\n     * }, Math);\n     * // => [[1.2, 3.4], [2.3]]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * var mapper = function(array) {\n     *   return _.pluck(array, 'user');\n     * };\n     *\n     * // using the `_.matches` callback shorthand\n     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\n     * // => [['pebbles'], ['barney', 'fred']]\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.map(_.partition(users, 'active', false), mapper);\n     * // => [['barney', 'pebbles'], ['fred']]\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(_.partition(users, 'active'), mapper);\n     * // => [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Gets the property value of `path` from all elements in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|string} path The path of the property to pluck.\n     * @returns {Array} Returns the property values.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.pluck(users, 'user');\n     * // => ['barney', 'fred']\n     *\n     * var userIndex = _.indexBy(users, 'user');\n     * _.pluck(userIndex, 'age');\n     * // => [36, 40] (iteration order is not guaranteed)\n     */\n    function pluck(collection, path) {\n      return map(collection, property(path));\n    }\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` through `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not provided the first element of `collection` is used as the initial\n     * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as interatees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `includes`, `merge`, `sortByAll`, and `sortByOrder`\n     *\n     * @static\n     * @memberOf _\n     * @alias foldl, inject\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.reduce([1, 2], function(total, n) {\n     *   return total + n;\n     * });\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     *   return result;\n     * }, {});\n     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\n     */\n    var reduce = createReduce(arrayReduce, baseEach);\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias foldr\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    var reduceRight =  createReduce(arrayReduceRight, baseEachRight);\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.reject([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [1, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.reject(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.reject(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function reject(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, function(value, index, collection) {\n        return !predicate(value, index, collection);\n      });\n    }\n\n    /**\n     * Gets a random element or `n` random elements from a collection.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to sample.\n     * @param {number} [n] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {*} Returns the random sample(s).\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     *\n     * _.sample([1, 2, 3, 4], 2);\n     * // => [3, 1]\n     */\n    function sample(collection, n, guard) {\n      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n        collection = toIterable(collection);\n        var length = collection.length;\n        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n      }\n      var result = shuffle(collection);\n      result.length = nativeMin(n < 0 ? 0 : (+n || 0), result.length);\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      collection = toIterable(collection);\n\n      var index = -1,\n          length = collection.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var rand = baseRandom(0, index);\n        if (index != rand) {\n          result[index] = result[rand];\n        }\n        result[rand] = collection[index];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the size of `collection`.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      var length = collection ? getLength(collection) : 0;\n      return isLength(length) ? length : keys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * The function returns as soon as it finds a passing value and does not iterate\n     * over the entire collection. The predicate is bound to `thisArg` and invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias any\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.some(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = null;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through `iteratee`. This method performs\n     * a stable sort, that is, it preserves the original sort order of equal elements.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return Math.sin(n);\n     * });\n     * // => [3, 1, 2]\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return this.sin(n);\n     * }, Math);\n     * // => [3, 1, 2]\n     *\n     * var users = [\n     *   { 'user': 'fred' },\n     *   { 'user': 'pebbles' },\n     *   { 'user': 'barney' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.sortBy(users, 'user'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function sortBy(collection, iteratee, thisArg) {\n      if (collection == null) {\n        return [];\n      }\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = null;\n      }\n      var index = -1;\n      iteratee = getCallback(iteratee, thisArg, 3);\n\n      var result = baseMap(collection, function(value, key, collection) {\n        return { 'criteria': iteratee(value, key, collection), 'index': ++index, 'value': value };\n      });\n      return baseSortBy(result, compareAscending);\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it can sort by multiple iteratees\n     * or property names.\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(Function|Function[]|Object|Object[]|string|string[])} iteratees\n     *  The iteratees to sort by, specified as individual values or arrays of values.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n     * // => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n     *\n     * _.map(_.sortByAll(users, 'user', function(chr) {\n     *   return Math.floor(chr.age / 10);\n     * }), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    var sortByAll = restParam(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var guard = iteratees[2];\n      if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) {\n        iteratees.length = 1;\n      }\n      return baseSortByOrder(collection, baseFlatten(iteratees), []);\n    });\n\n    /**\n     * This method is like `_.sortByAll` except that it allows specifying the\n     * sort orders of the iteratees to sort by. A truthy value in `orders` will\n     * sort the corresponding property name in ascending order while a falsey\n     * value will sort it in descending order.\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} orders The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // sort by `user` in ascending order and by `age` in descending order\n     * _.map(_.sortByOrder(users, ['user', 'age'], [true, false]), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    function sortByOrder(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (guard && isIterateeCall(iteratees, orders, guard)) {\n        orders = null;\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseSortByOrder(collection, iteratees, orders);\n    }\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning an array of all elements that have equivalent\n     * property values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n     * // => ['fred']\n     */\n    function where(collection, source) {\n      return filter(collection, baseMatches(source));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the number of milliseconds that have elapsed since the Unix epoch\n     * (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @category Date\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => logs the number of milliseconds it took for the deferred function to be invoked\n     */\n    var now = nativeNow || function() {\n      return new Date().getTime();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it is called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'done saving!' after the two async saves have completed\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      n = nativeIsFinite(n = +n) ? n : 0;\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that accepts up to `n` arguments ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      if (guard && isIterateeCall(func, n, guard)) {\n        n = null;\n      }\n      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);\n      return createWrapper(func, ARY_FLAG, null, null, null, null, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it is called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery('#add').on('click', _.before(5, addContactToList));\n     * // => allows adding up to 4 contacts to the list\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = null;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and prepends any additional `_.bind` arguments to those provided to the\n     * bound function.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind` this method does not set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var greet = function(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * };\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // using placeholders\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = restParam(function(func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bind.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method. Method names may be specified as individual arguments or as arrays\n     * of method names. If no method names are provided all enumerable function\n     * properties, own and inherited, of `object` are bound.\n     *\n     * **Note:** This method does not set the \"length\" property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} [methodNames] The object method names to bind,\n     *  specified as individual method names or arrays of method names.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view);\n     * jQuery('#docs').on('click', view.onClick);\n     * // => logs 'clicked docs' when the element is clicked\n     */\n    var bindAll = restParam(function(object, methodNames) {\n      methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);\n\n      var index = -1,\n          length = methodNames.length;\n\n      while (++index < length) {\n        var key = methodNames[index];\n        object[key] = createWrapper(object[key], BIND_FLAG, object);\n      }\n      return object;\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` and prepends\n     * any additional `_.bindKey` arguments to those provided to the bound function.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist.\n     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object the method belongs to.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // using placeholders\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = restParam(function(object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bindKey.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts one or more arguments of `func` that when\n     * called either invokes `func` returning its result, if all `func` arguments\n     * have been provided, or returns a function that accepts one or more of the\n     * remaining `func` arguments, and so on. The arity of `func` may be specified\n     * if `func.length` is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    var curry = createCurry(CURRY_FLAG);\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    var curryRight = createCurry(CURRY_RIGHT_FLAG);\n\n    /**\n     * Creates a function that delays invoking `func` until after `wait` milliseconds\n     * have elapsed since the last time it was invoked. The created function comes\n     * with a `cancel` method to cancel delayed invocations. Provide an options\n     * object to indicate that `func` should be invoked on the leading and/or\n     * trailing edge of the `wait` timeout. Subsequent calls to the debounced\n     * function return the result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n     *  delayed before it is invoked.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // avoid costly calculations while the window size is in flux\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n     *   'maxWait': 1000\n     * }));\n     *\n     * // cancel a debounced call\n     * var todoChanges = _.debounce(batchLog, 1000);\n     * Object.observe(models.todo, todoChanges);\n     *\n     * Object.observe(models, function(changes) {\n     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n     *     todoChanges.cancel();\n     *   }\n     * }, ['delete']);\n     *\n     * // ...at some point `models.todo` is changed\n     * models.todo.completed = true;\n     *\n     * // ...before 1 second has passed `models.todo` is deleted\n     * // which cancels the debounced `todoChanges` call\n     * delete models.todo;\n     */\n    function debounce(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          maxWait = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = wait < 0 ? 0 : (+wait || 0);\n      if (options === true) {\n        var leading = true;\n        trailing = false;\n      } else if (isObject(options)) {\n        leading = options.leading;\n        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n        trailing = 'trailing' in options ? options.trailing : trailing;\n      }\n\n      function cancel() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        if (maxTimeoutId) {\n          clearTimeout(maxTimeoutId);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n      }\n\n      function delayed() {\n        var remaining = wait - (now() - stamp);\n        if (remaining <= 0 || remaining > wait) {\n          if (maxTimeoutId) {\n            clearTimeout(maxTimeoutId);\n          }\n          var isCalled = trailingCall;\n          maxTimeoutId = timeoutId = trailingCall = undefined;\n          if (isCalled) {\n            lastCalled = now();\n            result = func.apply(thisArg, args);\n            if (!timeoutId && !maxTimeoutId) {\n              args = thisArg = null;\n            }\n          }\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      }\n\n      function maxDelayed() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (trailing || (maxWait !== wait)) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = null;\n          }\n        }\n      }\n\n      function debounced() {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n          var remaining = maxWait - (stamp - lastCalled),\n              isCalled = remaining <= 0 || remaining > maxWait;\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          }\n          else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        }\n        else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = null;\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // logs 'deferred' after one or more milliseconds\n     */\n    var defer = restParam(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n    var delay = restParam(function(func, wait, args) {\n      return baseDelay(func, wait, args);\n    });\n\n    /**\n     * Creates a function that returns the result of invoking the provided\n     * functions with the `this` binding of the created function, where each\n     * successive invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow(_.add, square);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the provided functions from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias backflow, compose\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight(square, _.add);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is coerced to a string and used as the\n     * cache key. The `func` is invoked with the `this` binding of the memoized\n     * function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the [`Map`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-properties-of-the-map-prototype-object)\n     * method interface of `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var upperCase = _.memoize(function(string) {\n     *   return string.toUpperCase();\n     * });\n     *\n     * upperCase('fred');\n     * // => 'FRED'\n     *\n     * // modifying the result cache\n     * upperCase.cache.set('fred', 'BARNEY');\n     * upperCase('fred');\n     * // => 'BARNEY'\n     *\n     * // replacing `_.memoize.Cache`\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'barney' };\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'fred' }\n     *\n     * _.memoize.Cache = WeakMap;\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'barney' }\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            cache = memoized.cache,\n            key = resolver ? resolver.apply(this, args) : args[0];\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        cache.set(key, result);\n        return result;\n      };\n      memoized.cache = new memoize.Cache;\n      return memoized;\n    }\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        return !predicate.apply(this, arguments);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first call. The `func` is invoked\n     * with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` invokes `createApplication` once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with `partial` arguments prepended\n     * to those provided to the new function. This method is like `_.bind` except\n     * it does **not** alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // using placeholders\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = createPartial(PARTIAL_FLAG);\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to those provided to the new function.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // using placeholders\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = createPartial(PARTIAL_RIGHT_FLAG);\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified indexes where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, 2, 0, 1);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     *\n     * var map = _.rearg(_.map, [1, 0]);\n     * map(function(n) {\n     *   return n * 3;\n     * }, [1, 2, 3]);\n     * // => [3, 6, 9]\n     */\n    var rearg = restParam(function(func, indexes) {\n      return createWrapper(func, REARG_FLAG, null, null, null, baseFlatten(indexes));\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as an array.\n     *\n     * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.restParam(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function restParam(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            rest = Array(length);\n\n        while (++index < length) {\n          rest[index] = args[start + index];\n        }\n        switch (start) {\n          case 0: return func.call(this, rest);\n          case 1: return func.call(this, args[0], rest);\n          case 2: return func.call(this, args[0], args[1], rest);\n        }\n        var otherArgs = Array(start + 1);\n        index = -1;\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = rest;\n        return func.apply(this, otherArgs);\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the created\n     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n     *\n     * **Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * // with a Promise\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function(array) {\n        return func.apply(this, array);\n      };\n    }\n\n    /**\n     * Creates a function that only invokes `func` at most once per every `wait`\n     * milliseconds. The created function comes with a `cancel` method to cancel\n     * delayed invocations. Provide an options object to indicate that `func`\n     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n     * Subsequent calls to the throttled function return the result of the last\n     * `func` call.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // avoid excessively updating the position while scrolling\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n     *   'trailing': false\n     * }));\n     *\n     * // cancel a trailing throttled call\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (options === false) {\n        leading = false;\n      } else if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      debounceOptions.leading = leading;\n      debounceOptions.maxWait = +wait;\n      debounceOptions.trailing = trailing;\n      return debounce(func, wait, debounceOptions);\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Any additional arguments provided to the function are\n     * appended to those provided to the wrapper function. The wrapper is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return createWrapper(wrapper, PARTIAL_FLAG, null, [value], []);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n     * otherwise they are assigned by reference. If `customizer` is provided it is\n     * invoked to produce the cloned values. If `customizer` returns `undefined`\n     * cloning is handled by the method instead. The `customizer` is bound to\n     * `thisArg` and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var shallow = _.clone(users);\n     * shallow[0] === users[0];\n     * // => true\n     *\n     * var deep = _.clone(users, true);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.clone(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 0\n     */\n    function clone(value, isDeep, customizer, thisArg) {\n      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n        isDeep = false;\n      }\n      else if (typeof isDeep == 'function') {\n        thisArg = customizer;\n        customizer = isDeep;\n        isDeep = false;\n      }\n      customizer = typeof customizer == 'function' && bindCallback(customizer, thisArg, 1);\n      return baseClone(value, isDeep, customizer);\n    }\n\n    /**\n     * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n     * to produce the cloned values. If `customizer` returns `undefined` cloning\n     * is handled by the method instead. The `customizer` is bound to `thisArg`\n     * and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var deep = _.cloneDeep(users);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.cloneDeep(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 20\n     */\n    function cloneDeep(value, customizer, thisArg) {\n      customizer = typeof customizer == 'function' && bindCallback(customizer, thisArg, 1);\n      return baseClone(value, true, customizer);\n    }\n\n    /**\n     * Checks if `value` is classified as an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      var length = isObjectLike(value) ? value.length : undefined;\n      return isLength(length) && objToString.call(value) == argsTag;\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(function() { return arguments; }());\n     * // => false\n     */\n    var isArray = nativeIsArray || function(value) {\n      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n    };\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false || (isObjectLike(value) && objToString.call(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    function isDate(value) {\n      return isObjectLike(value) && objToString.call(value) == dateTag;\n    }\n\n    /**\n     * Checks if `value` is a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return !!value && value.nodeType === 1 && isObjectLike(value) &&\n        (objToString.call(value).indexOf('Element') > -1);\n    }\n    // Fallback for environments without DOM support.\n    if (!support.dom) {\n      isElement = function(value) {\n        return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n      };\n    }\n\n    /**\n     * Checks if `value` is empty. A value is considered empty unless it is an\n     * `arguments` object, array, string, or jQuery-like collection with a length\n     * greater than `0` or an object with own enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Array|Object|string} value The value to inspect.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      var length = getLength(value);\n      if (isLength(length) && (isArray(value) || isString(value) || isArguments(value) ||\n          (isObjectLike(value) && isFunction(value.splice)))) {\n        return !length;\n      }\n      return !keys(value).length;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent. If `customizer` is provided it is invoked to compare values.\n     * If `customizer` returns `undefined` comparisons are handled by the method\n     * instead. The `customizer` is bound to `thisArg` and invoked with three\n     * arguments: (value, other [, index|key]).\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. Functions and DOM nodes\n     * are **not** supported. Provide a customizer function to extend support\n     * for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * object == other;\n     * // => false\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * // using a customizer callback\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqual(array, other, function(value, other) {\n     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n     *     return true;\n     *   }\n     * });\n     * // => true\n     */\n    function isEqual(value, other, customizer, thisArg) {\n      customizer = typeof customizer == 'function' && bindCallback(customizer, thisArg, 3);\n      if (!customizer && isStrictComparable(value) && isStrictComparable(other)) {\n        return value === other;\n      }\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on [`Number.isFinite`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isfinite).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(10);\n     * // => true\n     *\n     * _.isFinite('10');\n     * // => false\n     *\n     * _.isFinite(true);\n     * // => false\n     *\n     * _.isFinite(Object(10));\n     * // => false\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n    var isFinite = nativeNumIsFinite || function(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    };\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    var isFunction = !(baseIsFunction(/x/) || (Uint8Array && !baseIsFunction(Uint8Array))) ? baseIsFunction : function(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in older versions of Chrome and Safari which return 'function' for regexes\n      // and Safari 8 equivalents which return 'object' for typed array constructors.\n      return objToString.call(value) == funcTag;\n    };\n\n    /**\n     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(1);\n     * // => false\n     */\n    function isObject(value) {\n      // Avoid a V8 JIT bug in Chrome 19-20.\n      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n      var type = typeof value;\n      return type == 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * Performs a deep comparison between `object` and `source` to determine if\n     * `object` contains equivalent property values. If `customizer` is provided\n     * it is invoked to compare values. If `customizer` returns `undefined`\n     * comparisons are handled by the method instead. The `customizer` is bound\n     * to `thisArg` and invoked with three arguments: (value, other, index|key).\n     *\n     * **Note:** This method supports comparing properties of arrays, booleans,\n     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n     * and DOM nodes are **not** supported. Provide a customizer function to extend\n     * support for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.isMatch(object, { 'age': 40 });\n     * // => true\n     *\n     * _.isMatch(object, { 'age': 36 });\n     * // => false\n     *\n     * // using a customizer callback\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatch(object, source, function(value, other) {\n     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n     * });\n     * // => true\n     */\n    function isMatch(object, source, customizer, thisArg) {\n      var props = keys(source),\n          length = props.length;\n\n      if (!length) {\n        return true;\n      }\n      if (object == null) {\n        return false;\n      }\n      customizer = typeof customizer == 'function' && bindCallback(customizer, thisArg, 3);\n      object = toObject(object);\n      if (!customizer && length == 1) {\n        var key = props[0],\n            value = source[key];\n\n        if (isStrictComparable(value)) {\n          return value === object[key] && (value !== undefined || (key in object));\n        }\n      }\n      var values = Array(length),\n          strictCompareFlags = Array(length);\n\n      while (length--) {\n        value = values[length] = source[props[length]];\n        strictCompareFlags[length] = isStrictComparable(value);\n      }\n      return baseIsMatch(object, props, values, strictCompareFlags, customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n     * which returns `true` for `undefined` and other non-numeric values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (value == null) {\n        return false;\n      }\n      if (objToString.call(value) == funcTag) {\n        return reIsNative.test(fnToString.call(value));\n      }\n      return isObjectLike(value) && reIsHostCtor.test(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n     * as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isNumber(8.4);\n     * // => true\n     *\n     * _.isNumber(NaN);\n     * // => true\n     *\n     * _.isNumber('8.4');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * **Note:** This method assumes objects created by the `Object` constructor\n     * have no inherited enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    var isPlainObject = !getPrototypeOf ? shimIsPlainObject : function(value) {\n      if (!(value && objToString.call(value) == objectTag)) {\n        return false;\n      }\n      var valueOf = value.valueOf,\n          objProto = isNative(valueOf) && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);\n\n      return objProto\n        ? (value == objProto || getPrototypeOf(value) == objProto)\n        : shimIsPlainObject(value);\n    };\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    function isRegExp(value) {\n      return (isObjectLike(value) && objToString.call(value) == regexpTag) || false;\n    }\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    function isTypedArray(value) {\n      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * (function() {\n     *   return _.toArray(arguments).slice(1);\n     * }(1, 2, 3));\n     * // => [2, 3]\n     */\n    function toArray(value) {\n      var length = value ? getLength(value) : 0;\n      if (!isLength(length)) {\n        return values(value);\n      }\n      if (!length) {\n        return [];\n      }\n      return arrayCopy(value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable\n     * properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return baseCopy(value, keysIn(value));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object. Subsequent sources overwrite property assignments of previous sources.\n     * If `customizer` is provided it is invoked to produce the assigned values.\n     * The `customizer` is bound to `thisArg` and invoked with five arguments:\n     * (objectValue, sourceValue, key, object, source).\n     *\n     * **Note:** This method mutates `object` and is based on\n     * [`Object.assign`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign).\n     *\n     *\n     * @static\n     * @memberOf _\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using a customizer callback\n     * var defaults = _.partialRight(_.assign, function(value, other) {\n     *   return _.isUndefined(value) ? other : value;\n     * });\n     *\n     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var assign = createAssigner(function(object, source, customizer) {\n      return customizer\n        ? assignWith(object, source, customizer)\n        : baseAssign(object, source);\n    });\n\n    /**\n     * Creates an object that inherits from the given `prototype` object. If a\n     * `properties` object is provided its own enumerable properties are assigned\n     * to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties, guard) {\n      var result = baseCreate(prototype);\n      if (guard && isIterateeCall(prototype, properties, guard)) {\n        properties = null;\n      }\n      return properties ? baseAssign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object for all destination properties that resolve to `undefined`. Once a\n     * property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var defaults = restParam(function(args) {\n      var object = args[0];\n      if (object == null) {\n        return object;\n      }\n      args.push(assignDefaults);\n      return assign.apply(undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    var findKey = createFindKey(baseForOwn);\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    var findLastKey = createFindKey(baseForOwnRight);\n\n    /**\n     * Iterates over own and inherited enumerable properties of an object invoking\n     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n     */\n    var forIn = createForIn(baseFor);\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n     */\n    var forInRight = createForIn(baseForRight);\n\n    /**\n     * Iterates over own enumerable properties of an object invoking `iteratee`\n     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n     * three arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a' and 'b' (iteration order is not guaranteed)\n     */\n    var forOwn = createForOwn(baseForOwn);\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'\n     */\n    var forOwnRight = createForOwn(baseForOwnRight);\n\n    /**\n     * Creates an array of function property names from all enumerable properties,\n     * own and inherited, of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @alias methods\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of property names.\n     * @example\n     *\n     * _.functions(_);\n     * // => ['after', 'ary', 'assign', ...]\n     */\n    function functions(object) {\n      return baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the property value of `path` on `object`. If the resolved value is\n     * `undefined` the `defaultValue` is used in its place.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, toPath(path), path + '');\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` is a direct property, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': { 'c': 3 } } };\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b.c');\n     * // => true\n     *\n     * _.has(object, ['a', 'b', 'c']);\n     * // => true\n     */\n    function has(object, path) {\n      if (object == null) {\n        return false;\n      }\n      var result = hasOwnProperty.call(object, path);\n      if (!result && !isKey(path)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        path = last(path);\n        result = object != null && hasOwnProperty.call(object, path);\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite property\n     * assignments of previous values unless `multiValue` is `true`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {boolean} [multiValue] Allow multiple values per key.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     *\n     * // with `multiValue`\n     * _.invert(object, true);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function invert(object, multiValue, guard) {\n      if (guard && isIterateeCall(object, multiValue, guard)) {\n        multiValue = null;\n      }\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (multiValue) {\n          if (hasOwnProperty.call(result, value)) {\n            result[value].push(key);\n          } else {\n            result[value] = [key];\n          }\n        }\n        else {\n          result[value] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    var keys = !nativeKeys ? shimKeys : function(object) {\n      if (object) {\n        var Ctor = object.constructor,\n            length = object.length;\n      }\n      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n          (typeof object != 'function' && isLength(length))) {\n        return shimKeys(object);\n      }\n      return isObject(object) ? nativeKeys(object) : [];\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      if (object == null) {\n        return [];\n      }\n      if (!isObject(object)) {\n        object = Object(object);\n      }\n      var length = object.length;\n      length = (length && isLength(length) &&\n        (isArray(object) || (support.nonEnumArgs && isArguments(object))) && length) || 0;\n\n      var Ctor = object.constructor,\n          index = -1,\n          isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n          result = Array(length),\n          skipIndexes = length > 0;\n\n      while (++index < length) {\n        result[index] = (index + '');\n      }\n      for (var key in object) {\n        if (!(skipIndexes && isIndex(key, length)) &&\n            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through `iteratee`. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, key, object).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {\n     *   return n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // using the `_.property` callback shorthand\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee, thisArg) {\n      var result = {};\n      iteratee = getCallback(iteratee, thisArg, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        result[key] = iteratee(value, key, object);\n      });\n      return result;\n    }\n\n    /**\n     * Recursively merges own enumerable properties of the source object(s), that\n     * don't resolve to `undefined` into the destination object. Subsequent sources\n     * overwrite property assignments of previous sources. If `customizer` is\n     * provided it is invoked to produce the merged values of the destination and\n     * source properties. If `customizer` returns `undefined` merging is handled\n     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n     * with five arguments: (objectValue, sourceValue, key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var users = {\n     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n     * };\n     *\n     * var ages = {\n     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n     * };\n     *\n     * _.merge(users, ages);\n     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n     *\n     * // using a customizer callback\n     * var object = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var other = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.merge(object, other, function(a, b) {\n     *   if (_.isArray(a)) {\n     *     return a.concat(b);\n     *   }\n     * });\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n     */\n    var merge = createAssigner(baseMerge);\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable properties of `object` that are not omitted.\n     * Property names may be specified as individual arguments or as arrays of\n     * property names. If `predicate` is provided it is invoked for each property\n     * of `object` omitting the properties `predicate` returns truthy for. The\n     * predicate is bound to `thisArg` and invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to omit, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.omit(object, 'age');\n     * // => { 'user': 'fred' }\n     *\n     * _.omit(object, _.isNumber);\n     * // => { 'user': 'fred' }\n     */\n    var omit = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      if (typeof props[0] != 'function') {\n        var props = arrayMap(baseFlatten(props), String);\n        return pickByArray(object, baseDifference(keysIn(object), props));\n      }\n      var predicate = bindCallback(props[0], props[1], 3);\n      return pickByCallback(object, function(value, key, object) {\n        return !predicate(value, key, object);\n      });\n    });\n\n    /**\n     * Creates a two dimensional array of the key-value pairs for `object`,\n     * e.g. `[[key1, value1], [key2, value2]]`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the new array of key-value pairs.\n     * @example\n     *\n     * _.pairs({ 'barney': 36, 'fred': 40 });\n     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n     */\n    function pairs(object) {\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var key = props[index];\n        result[index] = [key, object[key]];\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties. Property\n     * names may be specified as individual arguments or as arrays of property\n     * names. If `predicate` is provided it is invoked for each property of `object`\n     * picking the properties `predicate` returns truthy for. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to pick, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.pick(object, 'user');\n     * // => { 'user': 'fred' }\n     *\n     * _.pick(object, _.isString);\n     * // => { 'user': 'fred' }\n     */\n    var pick = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      return typeof props[0] == 'function'\n        ? pickByCallback(object, bindCallback(props[0], props[1], 3))\n        : pickByArray(object, baseFlatten(props));\n    });\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a function\n     * it is invoked with the `this` binding of its parent object and its result\n     * is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a.b.c', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a.b.c', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      var result = object == null ? undefined : object[path];\n      if (result === undefined) {\n        if (object != null && !isKey(path, object)) {\n          path = toPath(path);\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          result = object == null ? undefined : object[last(path)];\n        }\n        result = result === undefined ? defaultValue : result;\n      }\n      return isFunction(result) ? result.call(object) : result;\n    }\n\n    /**\n     * Sets the property value of `path` on `object`. If a portion of `path`\n     * does not exist it is created.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to augment.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, 'x[0].y.z', 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      if (object == null) {\n        return object;\n      }\n      var pathKey = (path + '');\n      path = (object[pathKey] != null || isKey(path, object)) ? [pathKey] : toPath(path);\n\n      var index = -1,\n          length = path.length,\n          endIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = path[index];\n        if (isObject(nested)) {\n          if (index == endIndex) {\n            nested[key] = value;\n          } else if (nested[key] == null) {\n            nested[key] = isIndex(path[index + 1]) ? [] : {};\n          }\n        }\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own enumerable\n     * properties through `iteratee`, with each invocation potentially mutating\n     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n     * with four arguments: (accumulator, value, key, object). Iteratee functions\n     * may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     */\n    function transform(object, iteratee, accumulator, thisArg) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getCallback(iteratee, thisArg, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = baseCreate(isFunction(Ctor) && Ctor.prototype);\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Creates an array of the own enumerable property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property values\n     * of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Checks if `n` is between `start` and up to but not including, `end`. If\n     * `end` is not specified it is set to `start` with `start` then set to `0`.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} n The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     */\n    function inRange(value, start, end) {\n      start = +start || 0;\n      if (typeof end === 'undefined') {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      return value >= nativeMin(start, end) && value < nativeMax(start, end);\n    }\n\n    /**\n     * Produces a random number between `min` and `max` (inclusive). If only one\n     * argument is provided a number between `0` and the given number is returned.\n     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n     * number is returned instead of an integer.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} [min=0] The minimum possible value.\n     * @param {number} [max=1] The maximum possible value.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(min, max, floating) {\n      if (floating && isIterateeCall(min, max, floating)) {\n        max = floating = null;\n      }\n      var noMin = min == null,\n          noMax = max == null;\n\n      if (floating == null) {\n        if (noMax && typeof min == 'boolean') {\n          floating = min;\n          min = 1;\n        }\n        else if (typeof max == 'boolean') {\n          floating = max;\n          noMax = true;\n        }\n      }\n      if (noMin && noMax) {\n        max = 1;\n        noMax = false;\n      }\n      min = +min || 0;\n      if (noMax) {\n        max = min;\n        min = 0;\n      } else {\n        max = +max || 0;\n      }\n      if (floating || min % 1 || max % 1) {\n        var rand = nativeRandom();\n        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);\n      }\n      return baseRandom(min, max);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__foo_bar__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);\n    });\n\n    /**\n     * Capitalizes the first character of `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('fred');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      string = baseToString(string);\n      return string && (string.charAt(0).toUpperCase() + string.slice(1));\n    }\n\n    /**\n     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = baseToString(string);\n      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search from.\n     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = baseToString(string);\n      target = (target + '');\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : nativeMin(position < 0 ? 0 : (+position || 0), length);\n\n      position -= target.length;\n      return position >= 0 && string.indexOf(target, position) == position;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\", in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional characters\n     * use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't require escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value.\n     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in Internet Explorer < 9, they can break out\n     * of attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n     * for more details.\n     *\n     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n     * to reduce XSS vectors.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n      string = baseToString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n     * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n     */\n    function escapeRegExp(string) {\n      string = baseToString(string);\n      return (string && reHasRegExpChars.test(string))\n        ? string.replace(reRegExpChars, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__foo_bar__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Pads `string` on the left and right sides if it is shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = baseToString(string);\n      length = +length;\n\n      var strLength = string.length;\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return string;\n      }\n      var mid = (length - strLength) / 2,\n          leftLength = floor(mid),\n          rightLength = ceil(mid);\n\n      chars = createPadding('', rightLength, chars);\n      return chars.slice(0, leftLength) + string + chars;\n    }\n\n    /**\n     * Pads `string` on the left side if it is shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padLeft('abc', 6);\n     * // => '   abc'\n     *\n     * _.padLeft('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padLeft('abc', 3);\n     * // => 'abc'\n     */\n    var padLeft = createPadDir();\n\n    /**\n     * Pads `string` on the right side if it is shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padRight('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padRight('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padRight('abc', 3);\n     * // => 'abc'\n     */\n    var padRight = createPadDir(true);\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n     * in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)\n     * of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard && isIterateeCall(string, radix, guard)) {\n        radix = 0;\n      }\n      return nativeParseInt(string, radix);\n    }\n    // Fallback for environments with pre-ES5 implementations.\n    if (nativeParseInt(whitespace + '08') != 8) {\n      parseInt = function(string, radix, guard) {\n        // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n        // Chrome fails to trim leading <BOM> whitespace characters.\n        // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n        if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n          radix = 0;\n        } else if (radix) {\n          radix = +radix;\n        }\n        string = trim(string);\n        return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n      };\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=0] The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n) {\n      var result = '';\n      string = baseToString(string);\n      n = +n;\n      if (n < 1 || !string || !nativeIsFinite(n)) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = floor(n / 2);\n        string += string;\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--foo-bar');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__foo_bar__');\n     * // => 'Foo Bar'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = baseToString(string);\n      position = position == null\n        ? 0\n        : nativeMin(position < 0 ? 0 : (+position || 0), string.length);\n\n      return string.lastIndexOf(target, position) == position;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is provided it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [options.variable] The data object variable name.\n     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // using the \"interpolate\" delimiter to create a compiled template\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // using the HTML \"escape\" delimiter to escape data property values\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the internal `print` function in \"evaluate\" delimiters\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // using custom template delimiters\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // using backslashes to treat delimiters as plain text\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // using the `imports` option to import `jQuery` as `jq`\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the `sourceURL` option to specify a custom sourceURL for the template\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // using the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and a stack trace\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, otherOptions) {\n      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n        options = otherOptions = null;\n      }\n      string = baseToString(string);\n      options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n\n      var imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products requires returning the `match`\n        // string in order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n      }\n      chars = (chars + '');\n      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimLeft('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimLeft('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimLeft(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string));\n      }\n      return string.slice(charsLeftIndex(string, (chars + '')));\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimRight('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimRight('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimRight(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(0, trimmedRightIndex(string) + 1);\n      }\n      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n    }\n\n    /**\n     * Truncates `string` if it is longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object|number} [options] The options object or maximum string length.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.trunc('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', 24);\n     * // => 'hi-diddly-ho there, n...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function trunc(string, options, guard) {\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = null;\n      }\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (options != null) {\n        if (isObject(options)) {\n          var separator = 'separator' in options ? options.separator : separator;\n          length = 'length' in options ? (+options.length || 0) : length;\n          omission = 'omission' in options ? baseToString(options.omission) : omission;\n        } else {\n          length = +options || 0;\n        }\n      }\n      string = baseToString(string);\n      if (length >= string.length) {\n        return string;\n      }\n      var end = length - omission.length;\n      if (end < 1) {\n        return omission;\n      }\n      var result = string.slice(0, end);\n      if (separator == null) {\n        return result + omission;\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              newEnd,\n              substring = string.slice(0, end);\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            newEnd = match.index;\n          }\n          result = result.slice(0, newEnd == null ? end : newEnd);\n        }\n      } else if (string.indexOf(separator, end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n     * corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n     * entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = baseToString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      if (guard && isIterateeCall(string, pattern, guard)) {\n        pattern = null;\n      }\n      string = baseToString(string);\n      return string.match(pattern || reWords) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function} func The function to attempt.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // avoid throwing errors for invalid selectors\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = restParam(function(func, args) {\n      try {\n        return func.apply(undefined, args);\n      } catch(e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and arguments of the created function. If `func` is a property name the\n     * created callback returns the property value for a given element. If `func`\n     * is an object the created callback returns `true` for elements that contain\n     * the equivalent object properties, otherwise it returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias iteratee\n     * @category Utility\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // wrap to create custom callback shorthands\n     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n     *   if (!match) {\n     *     return callback(func, thisArg);\n     *   }\n     *   return function(object) {\n     *     return match[2] == 'gt'\n     *       ? object[match[1]] > match[3]\n     *       : object[match[1]] < match[3];\n     *   };\n     * });\n     *\n     * _.filter(users, 'age__gt36');\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n    function callback(func, thisArg, guard) {\n      if (guard && isIterateeCall(func, thisArg, guard)) {\n        thisArg = null;\n      }\n      return baseCallback(func, thisArg);\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var getter = _.constant(object);\n     *\n     * getter() === object;\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * This method returns the first argument provided to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.identity(object) === object;\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function which performs a deep comparison between a given object\n     * and `source`, returning `true` if the given object has equivalent property\n     * values, else `false`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function which compares the property value of `path` on a given\n     * object to `value`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} value The value to compare.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * _.find(users, _.matchesProperty('user', 'fred'));\n     * // => { 'user': 'fred' }\n     */\n    function matchesProperty(path, value) {\n      return baseMatchesProperty(path, baseClone(value, true));\n    }\n\n    /**\n     * Creates a function which invokes the method at `path` on a given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the method to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    var method = restParam(function(path, args) {\n      return function(object) {\n        return invokePath(object, path, args);\n      }\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function which invokes\n     * the method at a given path on `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = restParam(function(object, args) {\n      return function(path) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable function properties of a source object to the\n     * destination object. If `object` is a function then methods are added to\n     * its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added\n     *  are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * // use `_.runInContext` to avoid conflicts (esp. in Node.js)\n     * var _ = require('lodash').runInContext();\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      if (options == null) {\n        var isObj = isObject(source),\n            props = isObj && keys(source),\n            methodNames = props && props.length && baseFunctions(source, props);\n\n        if (!(methodNames ? methodNames.length : isObj)) {\n          methodNames = false;\n          options = source;\n          source = object;\n          object = this;\n        }\n      }\n      if (!methodNames) {\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = true,\n          index = -1,\n          isFunc = isFunction(object),\n          length = methodNames.length;\n\n      if (options === false) {\n        chain = false;\n      } else if (isObject(options) && 'chain' in options) {\n        chain = options.chain;\n      }\n      while (++index < length) {\n        var methodName = methodNames[index],\n            func = source[methodName];\n\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = (function(func) {\n            return function() {\n              var chainAll = this.__chain__;\n              if (chain || chainAll) {\n                var result = object(this.__wrapped__),\n                    actions = result.__actions__ = arrayCopy(this.__actions__);\n\n                actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n                result.__chain__ = chainAll;\n                return result;\n              }\n              var args = [this.value()];\n              push.apply(args, arguments);\n              return func.apply(object, args);\n            };\n          }(func));\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      context._ = oldDash;\n      return this;\n    }\n\n    /**\n     * A no-operation function which returns `undefined` regardless of the\n     * arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.noop(object) === undefined;\n     * // => true\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function which returns the property value at `path` on a\n     * given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': 2 } } },\n     *   { 'a': { 'b': { 'c': 1 } } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function which returns\n     * the property value at a given path on `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return baseGet(object, toPath(path), path + '');\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. If `end` is not specified it is\n     * set to `start` with `start` then set to `0`. If `end` is less than `start`\n     * a zero-length range is created unless a negative `step` is specified.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the new array of numbers.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    function range(start, end, step) {\n      if (step && isIterateeCall(start, end, step)) {\n        end = step = null;\n      }\n      start = +start || 0;\n      step = step == null ? 1 : (+step || 0);\n\n      if (end == null) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n      var index = -1,\n          length = nativeMax(ceil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the iteratee function `n` times, returning an array of the results\n     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n     * one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n     * // => [3, 6, 4]\n     *\n     * _.times(3, function(n) {\n     *   mage.castSpell(n);\n     * });\n     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`\n     *\n     * _.times(3, function(n) {\n     *   this.cast(n);\n     * }, mage);\n     * // => also invokes `mage.castSpell(n)` three times\n     */\n    function times(n, iteratee, thisArg) {\n      n = floor(n);\n\n      // Exit early to avoid a JSC JIT bug in Safari 8\n      // where `Array(0)` is treated as `Array(1)`.\n      if (n < 1 || !nativeIsFinite(n)) {\n        return [];\n      }\n      var index = -1,\n          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n\n      iteratee = bindCallback(iteratee, thisArg, 1);\n      while (++index < n) {\n        if (index < MAX_ARRAY_LENGTH) {\n          result[index] = iteratee(index);\n        } else {\n          iteratee(index);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {string} [prefix] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return baseToString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} augend The first number to add.\n     * @param {number} addend The second number to add.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    function add(augend, addend) {\n      return (+augend || 0) + (+addend || 0);\n    }\n\n    /**\n     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n     * `-Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => -Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.max(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.max(users, 'age');\n     * // => { 'user': 'fred', 'age': 40 }\n     */\n    var max = createExtremum(arrayMax);\n\n    /**\n     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n     * `Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.min(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.min(users, 'age');\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var min = createExtremum(arrayMin, true);\n\n    /**\n     * Gets the sum of the values in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 6]);\n     * // => 10\n     *\n     * _.sum({ 'a': 4, 'b': 6 });\n     * // => 10\n     *\n     * var objects = [\n     *   { 'n': 4 },\n     *   { 'n': 6 }\n     * ];\n     *\n     * _.sum(objects, function(object) {\n     *   return object.n;\n     * });\n     * // => 10\n     *\n     * // using the `_.property` callback shorthand\n     * _.sum(objects, 'n');\n     * // => 10\n     */\n    function sum(collection, iteratee, thisArg) {\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = null;\n      }\n      var func = getCallback(),\n          noIteratee = iteratee == null;\n\n      if (!(func === baseCallback && noIteratee)) {\n        noIteratee = false;\n        iteratee = func(iteratee, thisArg, 3);\n      }\n      return noIteratee\n        ? arraySum(isArray(collection) ? collection : toIterable(collection))\n        : baseSum(collection, iteratee);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    // Add functions to the `Map` cache.\n    MapCache.prototype['delete'] = mapDelete;\n    MapCache.prototype.get = mapGet;\n    MapCache.prototype.has = mapHas;\n    MapCache.prototype.set = mapSet;\n\n    // Add functions to the `Set` cache.\n    SetCache.prototype.push = cachePush;\n\n    // Assign cache to `_.memoize`.\n    memoize.Cache = MapCache;\n\n    // Add functions that return wrapped values when chaining.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.callback = callback;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.functions = functions;\n    lodash.groupBy = groupBy;\n    lodash.indexBy = indexBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.invert = invert;\n    lodash.invoke = invoke;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.omit = omit;\n    lodash.once = once;\n    lodash.pairs = pairs;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pluck = pluck;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.restParam = restParam;\n    lodash.set = set;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortByAll = sortByAll;\n    lodash.sortByOrder = sortByOrder;\n    lodash.spread = spread;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.times = times;\n    lodash.toArray = toArray;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.union = union;\n    lodash.uniq = uniq;\n    lodash.unzip = unzip;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.where = where;\n    lodash.without = without;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n\n    // Add aliases.\n    lodash.backflow = flowRight;\n    lodash.collect = map;\n    lodash.compose = flowRight;\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.extend = assign;\n    lodash.iteratee = callback;\n    lodash.methods = functions;\n    lodash.object = zipObject;\n    lodash.select = filter;\n    lodash.tail = rest;\n    lodash.unique = uniq;\n\n    // Add functions to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions that return unwrapped values when chaining.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.deburr = deburr;\n    lodash.endsWith = endsWith;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.findWhere = findWhere;\n    lodash.first = first;\n    lodash.get = get;\n    lodash.has = has;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isBoolean = isBoolean;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isMatch = isMatch;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isString = isString;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.max = max;\n    lodash.min = min;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padLeft = padLeft;\n    lodash.padRight = padRight;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.result = result;\n    lodash.runInContext = runInContext;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.sum = sum;\n    lodash.template = template;\n    lodash.trim = trim;\n    lodash.trimLeft = trimLeft;\n    lodash.trimRight = trimRight;\n    lodash.trunc = trunc;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.words = words;\n\n    // Add aliases.\n    lodash.all = every;\n    lodash.any = some;\n    lodash.contains = includes;\n    lodash.detect = find;\n    lodash.foldl = reduce;\n    lodash.foldr = reduceRight;\n    lodash.head = first;\n    lodash.include = includes;\n    lodash.inject = reduce;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!lodash.prototype[methodName]) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), false);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions capable of returning wrapped and unwrapped values when chaining.\n    lodash.sample = sample;\n\n    lodash.prototype.sample = function(n) {\n      if (!this.__chain__ && n == null) {\n        return sample(this.value());\n      }\n      return this.thru(function(value) {\n        return sample(value, n);\n      });\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type string\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['dropWhile', 'filter', 'map', 'takeWhile'], function(methodName, type) {\n      var isFilter = type != LAZY_MAP_FLAG,\n          isDropWhile = type == LAZY_DROP_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {\n        var filtered = this.__filtered__,\n            result = (filtered && isDropWhile) ? new LazyWrapper(this) : this.clone(),\n            iteratees = result.__iteratees__ || (result.__iteratees__ = []);\n\n        iteratees.push({\n          'done': false,\n          'count': 0,\n          'index': 0,\n          'iteratee': getCallback(iteratee, thisArg, 1),\n          'limit': -1,\n          'type': type\n        });\n\n        result.__filtered__ = filtered || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      var whileName = methodName + 'While';\n\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__,\n            result = (filtered && !index) ? this.dropWhile() : this.clone();\n\n        n = n == null ? 1 : nativeMax(floor(n) || 0, 0);\n        if (filtered) {\n          if (index) {\n            result.__takeCount__ = nativeMin(result.__takeCount__, n);\n          } else {\n            last(result.__iteratees__).limit = n;\n          }\n        } else {\n          var views = result.__views__ || (result.__views__ = []);\n          views.push({ 'size': n, 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n\n      LazyWrapper.prototype[methodName + 'RightWhile'] = function(predicate, thisArg) {\n        return this.reverse()[whileName](predicate, thisArg).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.first` and `_.last`.\n    arrayEach(['first', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n    arrayEach(['initial', 'rest'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[dropName](1);\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n    arrayEach(['pluck', 'where'], function(methodName, index) {\n      var operationName = index ? 'filter' : 'map',\n          createCallback = index ? baseMatches : property;\n\n      LazyWrapper.prototype[methodName] = function(value) {\n        return this[operationName](createCallback(value));\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.reject = function(predicate, thisArg) {\n      predicate = getCallback(predicate, thisArg, 1);\n      return this.filter(function(value) {\n        return !predicate(value);\n      });\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = start == null ? 0 : (+start || 0);\n      var result = start < 0 ? this.takeRight(-start) : this.drop(start);\n\n      if (end !== undefined) {\n        end = (+end || 0);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.drop(0);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (!lodashFunc) {\n        return;\n      }\n      var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName),\n          retUnwrapped = /^(?:first|last)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments,\n            length = args.length,\n            chainAll = this.__chain__,\n            value = this.__wrapped__,\n            isHybrid = !!this.__actions__.length,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // avoid lazy use if the iteratee has a \"length\" value other than `1`\n          isLazy = useLazy = false;\n        }\n        var onlyLazy = isLazy && !isHybrid;\n        if (retUnwrapped && !chainAll) {\n          return onlyLazy\n            ? func.call(value)\n            : lodashFunc.call(lodash, this.value());\n        }\n        var interceptor = function(value) {\n          var otherArgs = [value];\n          push.apply(otherArgs, args);\n          return lodashFunc.apply(lodash, otherArgs);\n        };\n        if (useLazy) {\n          var wrapper = onlyLazy ? value : new LazyWrapper(this),\n              result = func.apply(wrapper, args);\n\n          if (!retUnwrapped && (isHybrid || result.__actions__)) {\n            var actions = result.__actions__ || (result.__actions__ = []);\n            actions.push({ 'func': thru, 'args': [interceptor], 'thisArg': lodash });\n          }\n          return new LodashWrapper(result, chainAll);\n        }\n        return this.thru(interceptor);\n      };\n    });\n\n    // Add `Array` and `String` methods to `lodash.prototype`.\n    arrayEach(['concat', 'join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function(methodName) {\n      var func = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          return func.apply(this.value(), args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(value, args);\n        });\n      };\n    });\n\n    // Map minified function names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name,\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybridWrapper(null, BIND_KEY_FLAG).name] = [{ 'name': 'wrapper', 'func': null }];\n\n    // Add functions to the lazy wrapper.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chaining functions to the `lodash` wrapper.\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toString = wrapperToString;\n    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add function aliases to the `lodash` wrapper.\n    lodash.prototype.collect = lodash.prototype.map;\n    lodash.prototype.head = lodash.prototype.first;\n    lodash.prototype.select = lodash.prototype.filter;\n    lodash.prototype.tail = lodash.prototype.rest;\n\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose lodash to the global object when an AMD loader is present to avoid\n    // errors in cases where lodash is loaded by a script tag and not intended\n    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n    // more details.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n    // Export for Node.js or RingoJS.\n    if (moduleExports) {\n      (freeModule.exports = _)._ = _;\n    }\n    // Export for Narwhal or Rhino -require.\n    else {\n      freeExports._ = _;\n    }\n  }\n  else {\n    // Export for a browser or Rhino.\n    root._ = _;\n  }\n}.call(this));\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/lodash/index.js\n **/","/*!\n * numeral.js\n * version : 1.5.3\n * author : Adam Draper\n * license : MIT\n * http://adamwdraper.github.com/Numeral-js/\n */\n\n(function () {\n\n    /************************************\n        Constants\n    ************************************/\n\n    var numeral,\n        VERSION = '1.5.3',\n        // internal storage for language config files\n        languages = {},\n        currentLanguage = 'en',\n        zeroFormat = null,\n        defaultFormat = '0,0',\n        // check for nodeJS\n        hasModule = (typeof module !== 'undefined' && module.exports);\n\n\n    /************************************\n        Constructors\n    ************************************/\n\n\n    // Numeral prototype object\n    function Numeral (number) {\n        this._value = number;\n    }\n\n    /**\n     * Implementation of toFixed() that treats floats more like decimals\n     *\n     * Fixes binary rounding issues (eg. (0.615).toFixed(2) === '0.61') that present\n     * problems for accounting- and finance-related software.\n     */\n    function toFixed (value, precision, roundingFunction, optionals) {\n        var power = Math.pow(10, precision),\n            optionalsRegExp,\n            output;\n            \n        //roundingFunction = (roundingFunction !== undefined ? roundingFunction : Math.round);\n        // Multiply up by precision, round accurately, then divide and use native toFixed():\n        output = (roundingFunction(value * power) / power).toFixed(precision);\n\n        if (optionals) {\n            optionalsRegExp = new RegExp('0{1,' + optionals + '}$');\n            output = output.replace(optionalsRegExp, '');\n        }\n\n        return output;\n    }\n\n    /************************************\n        Formatting\n    ************************************/\n\n    // determine what type of formatting we need to do\n    function formatNumeral (n, format, roundingFunction) {\n        var output;\n\n        // figure out what kind of format we are dealing with\n        if (format.indexOf('$') > -1) { // currency!!!!!\n            output = formatCurrency(n, format, roundingFunction);\n        } else if (format.indexOf('%') > -1) { // percentage\n            output = formatPercentage(n, format, roundingFunction);\n        } else if (format.indexOf(':') > -1) { // time\n            output = formatTime(n, format);\n        } else { // plain ol' numbers or bytes\n            output = formatNumber(n._value, format, roundingFunction);\n        }\n\n        // return string\n        return output;\n    }\n\n    // revert to number\n    function unformatNumeral (n, string) {\n        var stringOriginal = string,\n            thousandRegExp,\n            millionRegExp,\n            billionRegExp,\n            trillionRegExp,\n            suffixes = ['KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n            bytesMultiplier = false,\n            power;\n\n        if (string.indexOf(':') > -1) {\n            n._value = unformatTime(string);\n        } else {\n            if (string === zeroFormat) {\n                n._value = 0;\n            } else {\n                if (languages[currentLanguage].delimiters.decimal !== '.') {\n                    string = string.replace(/\\./g,'').replace(languages[currentLanguage].delimiters.decimal, '.');\n                }\n\n                // see if abbreviations are there so that we can multiply to the correct number\n                thousandRegExp = new RegExp('[^a-zA-Z]' + languages[currentLanguage].abbreviations.thousand + '(?:\\\\)|(\\\\' + languages[currentLanguage].currency.symbol + ')?(?:\\\\))?)?$');\n                millionRegExp = new RegExp('[^a-zA-Z]' + languages[currentLanguage].abbreviations.million + '(?:\\\\)|(\\\\' + languages[currentLanguage].currency.symbol + ')?(?:\\\\))?)?$');\n                billionRegExp = new RegExp('[^a-zA-Z]' + languages[currentLanguage].abbreviations.billion + '(?:\\\\)|(\\\\' + languages[currentLanguage].currency.symbol + ')?(?:\\\\))?)?$');\n                trillionRegExp = new RegExp('[^a-zA-Z]' + languages[currentLanguage].abbreviations.trillion + '(?:\\\\)|(\\\\' + languages[currentLanguage].currency.symbol + ')?(?:\\\\))?)?$');\n\n                // see if bytes are there so that we can multiply to the correct number\n                for (power = 0; power <= suffixes.length; power++) {\n                    bytesMultiplier = (string.indexOf(suffixes[power]) > -1) ? Math.pow(1024, power + 1) : false;\n\n                    if (bytesMultiplier) {\n                        break;\n                    }\n                }\n\n                // do some math to create our number\n                n._value = ((bytesMultiplier) ? bytesMultiplier : 1) * ((stringOriginal.match(thousandRegExp)) ? Math.pow(10, 3) : 1) * ((stringOriginal.match(millionRegExp)) ? Math.pow(10, 6) : 1) * ((stringOriginal.match(billionRegExp)) ? Math.pow(10, 9) : 1) * ((stringOriginal.match(trillionRegExp)) ? Math.pow(10, 12) : 1) * ((string.indexOf('%') > -1) ? 0.01 : 1) * (((string.split('-').length + Math.min(string.split('(').length-1, string.split(')').length-1)) % 2)? 1: -1) * Number(string.replace(/[^0-9\\.]+/g, ''));\n\n                // round if we are talking about bytes\n                n._value = (bytesMultiplier) ? Math.ceil(n._value) : n._value;\n            }\n        }\n        return n._value;\n    }\n\n    function formatCurrency (n, format, roundingFunction) {\n        var symbolIndex = format.indexOf('$'),\n            openParenIndex = format.indexOf('('),\n            minusSignIndex = format.indexOf('-'),\n            space = '',\n            spliceIndex,\n            output;\n\n        // check for space before or after currency\n        if (format.indexOf(' $') > -1) {\n            space = ' ';\n            format = format.replace(' $', '');\n        } else if (format.indexOf('$ ') > -1) {\n            space = ' ';\n            format = format.replace('$ ', '');\n        } else {\n            format = format.replace('$', '');\n        }\n\n        // format the number\n        output = formatNumber(n._value, format, roundingFunction);\n\n        // position the symbol\n        if (symbolIndex <= 1) {\n            if (output.indexOf('(') > -1 || output.indexOf('-') > -1) {\n                output = output.split('');\n                spliceIndex = 1;\n                if (symbolIndex < openParenIndex || symbolIndex < minusSignIndex){\n                    // the symbol appears before the \"(\" or \"-\"\n                    spliceIndex = 0;\n                }\n                output.splice(spliceIndex, 0, languages[currentLanguage].currency.symbol + space);\n                output = output.join('');\n            } else {\n                output = languages[currentLanguage].currency.symbol + space + output;\n            }\n        } else {\n            if (output.indexOf(')') > -1) {\n                output = output.split('');\n                output.splice(-1, 0, space + languages[currentLanguage].currency.symbol);\n                output = output.join('');\n            } else {\n                output = output + space + languages[currentLanguage].currency.symbol;\n            }\n        }\n\n        return output;\n    }\n\n    function formatPercentage (n, format, roundingFunction) {\n        var space = '',\n            output,\n            value = n._value * 100;\n\n        // check for space before %\n        if (format.indexOf(' %') > -1) {\n            space = ' ';\n            format = format.replace(' %', '');\n        } else {\n            format = format.replace('%', '');\n        }\n\n        output = formatNumber(value, format, roundingFunction);\n        \n        if (output.indexOf(')') > -1 ) {\n            output = output.split('');\n            output.splice(-1, 0, space + '%');\n            output = output.join('');\n        } else {\n            output = output + space + '%';\n        }\n\n        return output;\n    }\n\n    function formatTime (n) {\n        var hours = Math.floor(n._value/60/60),\n            minutes = Math.floor((n._value - (hours * 60 * 60))/60),\n            seconds = Math.round(n._value - (hours * 60 * 60) - (minutes * 60));\n        return hours + ':' + ((minutes < 10) ? '0' + minutes : minutes) + ':' + ((seconds < 10) ? '0' + seconds : seconds);\n    }\n\n    function unformatTime (string) {\n        var timeArray = string.split(':'),\n            seconds = 0;\n        // turn hours and minutes into seconds and add them all up\n        if (timeArray.length === 3) {\n            // hours\n            seconds = seconds + (Number(timeArray[0]) * 60 * 60);\n            // minutes\n            seconds = seconds + (Number(timeArray[1]) * 60);\n            // seconds\n            seconds = seconds + Number(timeArray[2]);\n        } else if (timeArray.length === 2) {\n            // minutes\n            seconds = seconds + (Number(timeArray[0]) * 60);\n            // seconds\n            seconds = seconds + Number(timeArray[1]);\n        }\n        return Number(seconds);\n    }\n\n    function formatNumber (value, format, roundingFunction) {\n        var negP = false,\n            signed = false,\n            optDec = false,\n            abbr = '',\n            abbrK = false, // force abbreviation to thousands\n            abbrM = false, // force abbreviation to millions\n            abbrB = false, // force abbreviation to billions\n            abbrT = false, // force abbreviation to trillions\n            abbrForce = false, // force abbreviation\n            bytes = '',\n            ord = '',\n            abs = Math.abs(value),\n            suffixes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n            min,\n            max,\n            power,\n            w,\n            precision,\n            thousands,\n            d = '',\n            neg = false;\n\n        // check if number is zero and a custom zero format has been set\n        if (value === 0 && zeroFormat !== null) {\n            return zeroFormat;\n        } else {\n            // see if we should use parentheses for negative number or if we should prefix with a sign\n            // if both are present we default to parentheses\n            if (format.indexOf('(') > -1) {\n                negP = true;\n                format = format.slice(1, -1);\n            } else if (format.indexOf('+') > -1) {\n                signed = true;\n                format = format.replace(/\\+/g, '');\n            }\n\n            // see if abbreviation is wanted\n            if (format.indexOf('a') > -1) {\n                // check if abbreviation is specified\n                abbrK = format.indexOf('aK') >= 0;\n                abbrM = format.indexOf('aM') >= 0;\n                abbrB = format.indexOf('aB') >= 0;\n                abbrT = format.indexOf('aT') >= 0;\n                abbrForce = abbrK || abbrM || abbrB || abbrT;\n\n                // check for space before abbreviation\n                if (format.indexOf(' a') > -1) {\n                    abbr = ' ';\n                    format = format.replace(' a', '');\n                } else {\n                    format = format.replace('a', '');\n                }\n\n                if (abs >= Math.pow(10, 12) && !abbrForce || abbrT) {\n                    // trillion\n                    abbr = abbr + languages[currentLanguage].abbreviations.trillion;\n                    value = value / Math.pow(10, 12);\n                } else if (abs < Math.pow(10, 12) && abs >= Math.pow(10, 9) && !abbrForce || abbrB) {\n                    // billion\n                    abbr = abbr + languages[currentLanguage].abbreviations.billion;\n                    value = value / Math.pow(10, 9);\n                } else if (abs < Math.pow(10, 9) && abs >= Math.pow(10, 6) && !abbrForce || abbrM) {\n                    // million\n                    abbr = abbr + languages[currentLanguage].abbreviations.million;\n                    value = value / Math.pow(10, 6);\n                } else if (abs < Math.pow(10, 6) && abs >= Math.pow(10, 3) && !abbrForce || abbrK) {\n                    // thousand\n                    abbr = abbr + languages[currentLanguage].abbreviations.thousand;\n                    value = value / Math.pow(10, 3);\n                }\n            }\n\n            // see if we are formatting bytes\n            if (format.indexOf('b') > -1) {\n                // check for space before\n                if (format.indexOf(' b') > -1) {\n                    bytes = ' ';\n                    format = format.replace(' b', '');\n                } else {\n                    format = format.replace('b', '');\n                }\n\n                for (power = 0; power <= suffixes.length; power++) {\n                    min = Math.pow(1024, power);\n                    max = Math.pow(1024, power+1);\n\n                    if (value >= min && value < max) {\n                        bytes = bytes + suffixes[power];\n                        if (min > 0) {\n                            value = value / min;\n                        }\n                        break;\n                    }\n                }\n            }\n\n            // see if ordinal is wanted\n            if (format.indexOf('o') > -1) {\n                // check for space before\n                if (format.indexOf(' o') > -1) {\n                    ord = ' ';\n                    format = format.replace(' o', '');\n                } else {\n                    format = format.replace('o', '');\n                }\n\n                ord = ord + languages[currentLanguage].ordinal(value);\n            }\n\n            if (format.indexOf('[.]') > -1) {\n                optDec = true;\n                format = format.replace('[.]', '.');\n            }\n\n            w = value.toString().split('.')[0];\n            precision = format.split('.')[1];\n            thousands = format.indexOf(',');\n\n            if (precision) {\n                if (precision.indexOf('[') > -1) {\n                    precision = precision.replace(']', '');\n                    precision = precision.split('[');\n                    d = toFixed(value, (precision[0].length + precision[1].length), roundingFunction, precision[1].length);\n                } else {\n                    d = toFixed(value, precision.length, roundingFunction);\n                }\n\n                w = d.split('.')[0];\n\n                if (d.split('.')[1].length) {\n                    d = languages[currentLanguage].delimiters.decimal + d.split('.')[1];\n                } else {\n                    d = '';\n                }\n\n                if (optDec && Number(d.slice(1)) === 0) {\n                    d = '';\n                }\n            } else {\n                w = toFixed(value, null, roundingFunction);\n            }\n\n            // format number\n            if (w.indexOf('-') > -1) {\n                w = w.slice(1);\n                neg = true;\n            }\n\n            if (thousands > -1) {\n                w = w.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1' + languages[currentLanguage].delimiters.thousands);\n            }\n\n            if (format.indexOf('.') === 0) {\n                w = '';\n            }\n\n            return ((negP && neg) ? '(' : '') + ((!negP && neg) ? '-' : '') + ((!neg && signed) ? '+' : '') + w + d + ((ord) ? ord : '') + ((abbr) ? abbr : '') + ((bytes) ? bytes : '') + ((negP && neg) ? ')' : '');\n        }\n    }\n\n    /************************************\n        Top Level Functions\n    ************************************/\n\n    numeral = function (input) {\n        if (numeral.isNumeral(input)) {\n            input = input.value();\n        } else if (input === 0 || typeof input === 'undefined') {\n            input = 0;\n        } else if (!Number(input)) {\n            input = numeral.fn.unformat(input);\n        }\n\n        return new Numeral(Number(input));\n    };\n\n    // version number\n    numeral.version = VERSION;\n\n    // compare numeral object\n    numeral.isNumeral = function (obj) {\n        return obj instanceof Numeral;\n    };\n\n    // This function will load languages and then set the global language.  If\n    // no arguments are passed in, it will simply return the current global\n    // language key.\n    numeral.language = function (key, values) {\n        if (!key) {\n            return currentLanguage;\n        }\n\n        if (key && !values) {\n            if(!languages[key]) {\n                throw new Error('Unknown language : ' + key);\n            }\n            currentLanguage = key;\n        }\n\n        if (values || !languages[key]) {\n            loadLanguage(key, values);\n        }\n\n        return numeral;\n    };\n    \n    // This function provides access to the loaded language data.  If\n    // no arguments are passed in, it will simply return the current\n    // global language object.\n    numeral.languageData = function (key) {\n        if (!key) {\n            return languages[currentLanguage];\n        }\n        \n        if (!languages[key]) {\n            throw new Error('Unknown language : ' + key);\n        }\n        \n        return languages[key];\n    };\n\n    numeral.language('en', {\n        delimiters: {\n            thousands: ',',\n            decimal: '.'\n        },\n        abbreviations: {\n            thousand: 'k',\n            million: 'm',\n            billion: 'b',\n            trillion: 't'\n        },\n        ordinal: function (number) {\n            var b = number % 10;\n            return (~~ (number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n        },\n        currency: {\n            symbol: '$'\n        }\n    });\n\n    numeral.zeroFormat = function (format) {\n        zeroFormat = typeof(format) === 'string' ? format : null;\n    };\n\n    numeral.defaultFormat = function (format) {\n        defaultFormat = typeof(format) === 'string' ? format : '0.0';\n    };\n\n    /************************************\n        Helpers\n    ************************************/\n\n    function loadLanguage(key, values) {\n        languages[key] = values;\n    }\n\n    /************************************\n        Floating-point helpers\n    ************************************/\n\n    // The floating-point helper functions and implementation\n    // borrows heavily from sinful.js: http://guipn.github.io/sinful.js/\n\n    /**\n     * Array.prototype.reduce for browsers that don't support it\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce#Compatibility\n     */\n    if ('function' !== typeof Array.prototype.reduce) {\n        Array.prototype.reduce = function (callback, opt_initialValue) {\n            'use strict';\n            \n            if (null === this || 'undefined' === typeof this) {\n                // At the moment all modern browsers, that support strict mode, have\n                // native implementation of Array.prototype.reduce. For instance, IE8\n                // does not support strict mode, so this check is actually useless.\n                throw new TypeError('Array.prototype.reduce called on null or undefined');\n            }\n            \n            if ('function' !== typeof callback) {\n                throw new TypeError(callback + ' is not a function');\n            }\n\n            var index,\n                value,\n                length = this.length >>> 0,\n                isValueSet = false;\n\n            if (1 < arguments.length) {\n                value = opt_initialValue;\n                isValueSet = true;\n            }\n\n            for (index = 0; length > index; ++index) {\n                if (this.hasOwnProperty(index)) {\n                    if (isValueSet) {\n                        value = callback(value, this[index], index, this);\n                    } else {\n                        value = this[index];\n                        isValueSet = true;\n                    }\n                }\n            }\n\n            if (!isValueSet) {\n                throw new TypeError('Reduce of empty array with no initial value');\n            }\n\n            return value;\n        };\n    }\n\n    \n    /**\n     * Computes the multiplier necessary to make x >= 1,\n     * effectively eliminating miscalculations caused by\n     * finite precision.\n     */\n    function multiplier(x) {\n        var parts = x.toString().split('.');\n        if (parts.length < 2) {\n            return 1;\n        }\n        return Math.pow(10, parts[1].length);\n    }\n\n    /**\n     * Given a variable number of arguments, returns the maximum\n     * multiplier that must be used to normalize an operation involving\n     * all of them.\n     */\n    function correctionFactor() {\n        var args = Array.prototype.slice.call(arguments);\n        return args.reduce(function (prev, next) {\n            var mp = multiplier(prev),\n                mn = multiplier(next);\n        return mp > mn ? mp : mn;\n        }, -Infinity);\n    }        \n\n\n    /************************************\n        Numeral Prototype\n    ************************************/\n\n\n    numeral.fn = Numeral.prototype = {\n\n        clone : function () {\n            return numeral(this);\n        },\n\n        format : function (inputString, roundingFunction) {\n            return formatNumeral(this, \n                  inputString ? inputString : defaultFormat, \n                  (roundingFunction !== undefined) ? roundingFunction : Math.round\n              );\n        },\n\n        unformat : function (inputString) {\n            if (Object.prototype.toString.call(inputString) === '[object Number]') { \n                return inputString; \n            }\n            return unformatNumeral(this, inputString ? inputString : defaultFormat);\n        },\n\n        value : function () {\n            return this._value;\n        },\n\n        valueOf : function () {\n            return this._value;\n        },\n\n        set : function (value) {\n            this._value = Number(value);\n            return this;\n        },\n\n        add : function (value) {\n            var corrFactor = correctionFactor.call(null, this._value, value);\n            function cback(accum, curr, currI, O) {\n                return accum + corrFactor * curr;\n            }\n            this._value = [this._value, value].reduce(cback, 0) / corrFactor;\n            return this;\n        },\n\n        subtract : function (value) {\n            var corrFactor = correctionFactor.call(null, this._value, value);\n            function cback(accum, curr, currI, O) {\n                return accum - corrFactor * curr;\n            }\n            this._value = [value].reduce(cback, this._value * corrFactor) / corrFactor;            \n            return this;\n        },\n\n        multiply : function (value) {\n            function cback(accum, curr, currI, O) {\n                var corrFactor = correctionFactor(accum, curr);\n                return (accum * corrFactor) * (curr * corrFactor) /\n                    (corrFactor * corrFactor);\n            }\n            this._value = [this._value, value].reduce(cback, 1);\n            return this;\n        },\n\n        divide : function (value) {\n            function cback(accum, curr, currI, O) {\n                var corrFactor = correctionFactor(accum, curr);\n                return (accum * corrFactor) / (curr * corrFactor);\n            }\n            this._value = [this._value, value].reduce(cback);            \n            return this;\n        },\n\n        difference : function (value) {\n            return Math.abs(numeral(this._value).subtract(value).value());\n        }\n\n    };\n\n    /************************************\n        Exposing Numeral\n    ************************************/\n\n    // CommonJS module is defined\n    if (hasModule) {\n        module.exports = numeral;\n    }\n\n    /*global ender:false */\n    if (typeof ender === 'undefined') {\n        // here, `this` means `window` in the browser, or `global` on the server\n        // add `numeral` as a global object via a string identifier,\n        // for Closure Compiler 'advanced' mode\n        this['numeral'] = numeral;\n    }\n\n    /*global define:false */\n    if (typeof define === 'function' && define.amd) {\n        define([], function () {\n            return numeral;\n        });\n    }\n}).call(this);\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/numeral/numeral.js\n **/","/**\n * Module dependencies.\n */\n\nvar Emitter = require('emitter');\nvar reduce = require('reduce');\n\n/**\n * Root reference for iframes.\n */\n\nvar root = 'undefined' == typeof window\n  ? (this || self)\n  : window;\n\n/**\n * Noop.\n */\n\nfunction noop(){};\n\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * TODO: future proof, move to compoent land\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isHost(obj) {\n  var str = {}.toString.call(obj);\n\n  switch (str) {\n    case '[object File]':\n    case '[object Blob]':\n    case '[object FormData]':\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = function () {\n  if (root.XMLHttpRequest\n      && (!root.location || 'file:' != root.location.protocol\n          || !root.ActiveXObject)) {\n    return new XMLHttpRequest;\n  } else {\n    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n  }\n  return false;\n};\n\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\nvar trim = ''.trim\n  ? function(s) { return s.trim(); }\n  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\n/**\n * Check if `obj` is an object.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(obj) {\n  return obj === Object(obj);\n}\n\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(obj) {\n  if (!isObject(obj)) return obj;\n  var pairs = [];\n  for (var key in obj) {\n    if (null != obj[key]) {\n      pairs.push(encodeURIComponent(key)\n        + '=' + encodeURIComponent(obj[key]));\n    }\n  }\n  return pairs.join('&');\n}\n\n/**\n * Expose serialization method.\n */\n\n request.serializeObject = serialize;\n\n /**\n  * Parse the given x-www-form-urlencoded `str`.\n  *\n  * @param {String} str\n  * @return {Object}\n  * @api private\n  */\n\nfunction parseString(str) {\n  var obj = {};\n  var pairs = str.split('&');\n  var parts;\n  var pair;\n\n  for (var i = 0, len = pairs.length; i < len; ++i) {\n    pair = pairs[i];\n    parts = pair.split('=');\n    obj[decodeURIComponent(parts[0])] = decodeURIComponent(parts[1]);\n  }\n\n  return obj;\n}\n\n/**\n * Expose parser.\n */\n\nrequest.parseString = parseString;\n\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'application/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  'form': 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\n request.serialize = {\n   'application/x-www-form-urlencoded': serialize,\n   'application/json': JSON.stringify\n };\n\n /**\n  * Default parsers.\n  *\n  *     superagent.parse['application/xml'] = function(str){\n  *       return { object parsed from str };\n  *     };\n  *\n  */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(str) {\n  var lines = str.split(/\\r?\\n/);\n  var fields = {};\n  var index;\n  var line;\n  var field;\n  var val;\n\n  lines.pop(); // trailing CRLF\n\n  for (var i = 0, len = lines.length; i < len; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n    field = line.slice(0, index).toLowerCase();\n    val = trim(line.slice(index + 1));\n    fields[field] = val;\n  }\n\n  return fields;\n}\n\n/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nfunction type(str){\n  return str.split(/ *; */).shift();\n};\n\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction params(str){\n  return reduce(str.split(/ *; */), function(obj, str){\n    var parts = str.split(/ *= */)\n      , key = parts.shift()\n      , val = parts.shift();\n\n    if (key && val) obj[key] = val;\n    return obj;\n  }, {});\n};\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\nfunction Response(req, options) {\n  options = options || {};\n  this.req = req;\n  this.xhr = this.req.xhr;\n  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n  this.text = ((this.req.method !='HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text')) || typeof this.xhr.responseType === 'undefined')\n     ? this.xhr.responseText\n     : null;\n  this.statusText = this.req.xhr.statusText;\n  this.setStatusProperties(this.xhr.status);\n  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n  this.setHeaderProperties(this.header);\n  this.body = this.req.method != 'HEAD'\n    ? this.parseBody(this.text ? this.text : this.xhr.response)\n    : null;\n}\n\n/**\n * Get case-insensitive `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nResponse.prototype.get = function(field){\n  return this.header[field.toLowerCase()];\n};\n\n/**\n * Set header related properties:\n *\n *   - `.type` the content type without params\n *\n * A response of \"Content-Type: text/plain; charset=utf-8\"\n * will provide you with a `.type` of \"text/plain\".\n *\n * @param {Object} header\n * @api private\n */\n\nResponse.prototype.setHeaderProperties = function(header){\n  // content-type\n  var ct = this.header['content-type'] || '';\n  this.type = type(ct);\n\n  // params\n  var obj = params(ct);\n  for (var key in obj) this[key] = obj[key];\n};\n\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype.parseBody = function(str){\n  var parse = request.parse[this.type];\n  return parse && str && (str.length || str instanceof Object)\n    ? parse(str)\n    : null;\n};\n\n/**\n * Set flags such as `.ok` based on `status`.\n *\n * For example a 2xx response will give you a `.ok` of __true__\n * whereas 5xx will be __false__ and `.error` will be __true__. The\n * `.clientError` and `.serverError` are also available to be more\n * specific, and `.statusType` is the class of error ranging from 1..5\n * sometimes useful for mapping respond colors etc.\n *\n * \"sugar\" properties are also defined for common cases. Currently providing:\n *\n *   - .noContent\n *   - .badRequest\n *   - .unauthorized\n *   - .notAcceptable\n *   - .notFound\n *\n * @param {Number} status\n * @api private\n */\n\nResponse.prototype.setStatusProperties = function(status){\n  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n  if (status === 1223) {\n    status = 204;\n  }\n\n  var type = status / 100 | 0;\n\n  // status / class\n  this.status = status;\n  this.statusType = type;\n\n  // basics\n  this.info = 1 == type;\n  this.ok = 2 == type;\n  this.clientError = 4 == type;\n  this.serverError = 5 == type;\n  this.error = (4 == type || 5 == type)\n    ? this.toError()\n    : false;\n\n  // sugar\n  this.accepted = 202 == status;\n  this.noContent = 204 == status;\n  this.badRequest = 400 == status;\n  this.unauthorized = 401 == status;\n  this.notAcceptable = 406 == status;\n  this.notFound = 404 == status;\n  this.forbidden = 403 == status;\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function(){\n  var req = this.req;\n  var method = req.method;\n  var url = req.url;\n\n  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';\n  var err = new Error(msg);\n  err.status = this.status;\n  err.method = method;\n  err.url = url;\n\n  return err;\n};\n\n/**\n * Expose `Response`.\n */\n\nrequest.Response = Response;\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  var self = this;\n  Emitter.call(this);\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {};\n  this._header = {};\n  this.on('end', function(){\n    var err = null;\n    var res = null;\n\n    try {\n      res = new Response(self);\n    } catch(e) {\n      err = new Error('Parser is unable to parse the response');\n      err.parse = true;\n      err.original = e;\n      return self.callback(err);\n    }\n\n    self.emit('response', res);\n\n    if (err) {\n      return self.callback(err, res);\n    }\n\n    if (res.status >= 200 && res.status < 300) {\n      return self.callback(err, res);\n    }\n\n    var new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n    new_err.original = err;\n    new_err.response = res;\n    new_err.status = res.status;\n\n    self.callback(err || new_err, res);\n  });\n}\n\n/**\n * Mixin `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Allow for extension\n */\n\nRequest.prototype.use = function(fn) {\n  fn(this);\n  return this;\n}\n\n/**\n * Set timeout to `ms`.\n *\n * @param {Number} ms\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.timeout = function(ms){\n  this._timeout = ms;\n  return this;\n};\n\n/**\n * Clear previous timeout.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.clearTimeout = function(){\n  this._timeout = 0;\n  clearTimeout(this._timer);\n  return this;\n};\n\n/**\n * Abort the request, and clear potential timeout.\n *\n * @return {Request}\n * @api public\n */\n\nRequest.prototype.abort = function(){\n  if (this.aborted) return;\n  this.aborted = true;\n  this.xhr.abort();\n  this.clearTimeout();\n  this.emit('abort');\n  return this;\n};\n\n/**\n * Set header `field` to `val`, or multiple fields with one object.\n *\n * Examples:\n *\n *      req.get('/')\n *        .set('Accept', 'application/json')\n *        .set('X-API-Key', 'foobar')\n *        .end(callback);\n *\n *      req.get('/')\n *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n *        .end(callback);\n *\n * @param {String|Object} field\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.set = function(field, val){\n  if (isObject(field)) {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n    return this;\n  }\n  this._header[field.toLowerCase()] = val;\n  this.header[field] = val;\n  return this;\n};\n\n/**\n * Remove header `field`.\n *\n * Example:\n *\n *      req.get('/')\n *        .unset('User-Agent')\n *        .end(callback);\n *\n * @param {String} field\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.unset = function(field){\n  delete this._header[field.toLowerCase()];\n  delete this.header[field];\n  return this;\n};\n\n/**\n * Get case-insensitive header `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api private\n */\n\nRequest.prototype.getHeader = function(field){\n  return this._header[field.toLowerCase()];\n};\n\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function(type){\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function(type){\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} pass\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function(user, pass){\n  var str = btoa(user + ':' + pass);\n  this.set('Authorization', 'Basic ' + str);\n  return this;\n};\n\n/**\n* Add query-string `val`.\n*\n* Examples:\n*\n*   request.get('/shoes')\n*     .query('size=10')\n*     .query({ color: 'blue' })\n*\n* @param {Object|String} val\n* @return {Request} for chaining\n* @api public\n*/\n\nRequest.prototype.query = function(val){\n  if ('string' != typeof val) val = serialize(val);\n  if (val) this._query.push(val);\n  return this;\n};\n\n/**\n * Write the field `name` and `val` for \"multipart/form-data\"\n * request bodies.\n *\n * ``` js\n * request.post('/upload')\n *   .field('foo', 'bar')\n *   .end(callback);\n * ```\n *\n * @param {String} name\n * @param {String|Blob|File} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.field = function(name, val){\n  if (!this._formData) this._formData = new root.FormData();\n  this._formData.append(name, val);\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `filename`.\n *\n * ``` js\n * request.post('/upload')\n *   .attach(new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String} filename\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function(field, file, filename){\n  if (!this._formData) this._formData = new root.FormData();\n  this._formData.append(field, file, filename);\n  return this;\n};\n\n/**\n * Send `data`, defaulting the `.type()` to \"json\" when\n * an object is given.\n *\n * Examples:\n *\n *       // querystring\n *       request.get('/search')\n *         .end(callback)\n *\n *       // multiple data \"writes\"\n *       request.get('/search')\n *         .send({ search: 'query' })\n *         .send({ range: '1..5' })\n *         .send({ order: 'desc' })\n *         .end(callback)\n *\n *       // manual json\n *       request.post('/user')\n *         .type('json')\n *         .send('{\"name\":\"tj\"})\n *         .end(callback)\n *\n *       // auto json\n *       request.post('/user')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // manual x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send('name=tj')\n *         .end(callback)\n *\n *       // auto x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // defaults to x-www-form-urlencoded\n  *      request.post('/user')\n  *        .send('name=tobi')\n  *        .send('species=ferret')\n  *        .end(callback)\n *\n * @param {String|Object} data\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.send = function(data){\n  var obj = isObject(data);\n  var type = this.getHeader('Content-Type');\n\n  // merge\n  if (obj && isObject(this._data)) {\n    for (var key in data) {\n      this._data[key] = data[key];\n    }\n  } else if ('string' == typeof data) {\n    if (!type) this.type('form');\n    type = this.getHeader('Content-Type');\n    if ('application/x-www-form-urlencoded' == type) {\n      this._data = this._data\n        ? this._data + '&' + data\n        : data;\n    } else {\n      this._data = (this._data || '') + data;\n    }\n  } else {\n    this._data = data;\n  }\n\n  if (!obj || isHost(data)) return this;\n  if (!type) this.type('json');\n  return this;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function(err, res){\n  var fn = this._callback;\n  this.clearTimeout();\n  fn(err, res);\n};\n\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\nRequest.prototype.crossDomainError = function(){\n  var err = new Error('Origin is not allowed by Access-Control-Allow-Origin');\n  err.crossDomain = true;\n  this.callback(err);\n};\n\n/**\n * Invoke callback with timeout error.\n *\n * @api private\n */\n\nRequest.prototype.timeoutError = function(){\n  var timeout = this._timeout;\n  var err = new Error('timeout of ' + timeout + 'ms exceeded');\n  err.timeout = timeout;\n  this.callback(err);\n};\n\n/**\n * Enable transmission of cookies with x-domain requests.\n *\n * Note that for this to work the origin must not be\n * using \"Access-Control-Allow-Origin\" with a wildcard,\n * and also must set \"Access-Control-Allow-Credentials\"\n * to \"true\".\n *\n * @api public\n */\n\nRequest.prototype.withCredentials = function(){\n  this._withCredentials = true;\n  return this;\n};\n\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.end = function(fn){\n  var self = this;\n  var xhr = this.xhr = request.getXHR();\n  var query = this._query.join('&');\n  var timeout = this._timeout;\n  var data = this._formData || this._data;\n\n  // store callback\n  this._callback = fn || noop;\n\n  // state change\n  xhr.onreadystatechange = function(){\n    if (4 != xhr.readyState) return;\n\n    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n    var status;\n    try { status = xhr.status } catch(e) { status = 0; }\n\n    if (0 == status) {\n      if (self.timedout) return self.timeoutError();\n      if (self.aborted) return;\n      return self.crossDomainError();\n    }\n    self.emit('end');\n  };\n\n  // progress\n  var handleProgress = function(e){\n    if (e.total > 0) {\n      e.percent = e.loaded / e.total * 100;\n    }\n    self.emit('progress', e);\n  };\n  if (this.hasListeners('progress')) {\n    xhr.onprogress = handleProgress;\n  }\n  try {\n    if (xhr.upload && this.hasListeners('progress')) {\n      xhr.upload.onprogress = handleProgress;\n    }\n  } catch(e) {\n    // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n    // Reported here:\n    // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n  }\n\n  // timeout\n  if (timeout && !this._timer) {\n    this._timer = setTimeout(function(){\n      self.timedout = true;\n      self.abort();\n    }, timeout);\n  }\n\n  // querystring\n  if (query) {\n    query = request.serializeObject(query);\n    this.url += ~this.url.indexOf('?')\n      ? '&' + query\n      : '?' + query;\n  }\n\n  // initiate request\n  xhr.open(this.method, this.url, true);\n\n  // CORS\n  if (this._withCredentials) xhr.withCredentials = true;\n\n  // body\n  if ('GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !isHost(data)) {\n    // serialize stuff\n    var serialize = request.serialize[this.getHeader('Content-Type')];\n    if (serialize) data = serialize(data);\n  }\n\n  // set header fields\n  for (var field in this.header) {\n    if (null == this.header[field]) continue;\n    xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  // send stuff\n  this.emit('request', this);\n  xhr.send(data);\n  return this;\n};\n\n/**\n * Expose `Request`.\n */\n\nrequest.Request = Request;\n\n/**\n * Issue a request:\n *\n * Examples:\n *\n *    request('GET', '/users').end(callback)\n *    request('/users').end(callback)\n *    request('/users', callback)\n *\n * @param {String} method\n * @param {String|Function} url or callback\n * @return {Request}\n * @api public\n */\n\nfunction request(method, url) {\n  // callback\n  if ('function' == typeof url) {\n    return new Request('GET', method).end(url);\n  }\n\n  // url first\n  if (1 == arguments.length) {\n    return new Request('GET', method);\n  }\n\n  return new Request(method, url);\n}\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} data or fn\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.get = function(url, data, fn){\n  var req = request('GET', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} data or fn\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.head = function(url, data, fn){\n  var req = request('HEAD', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * DELETE `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.del = function(url, fn){\n  var req = request('DELETE', url);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} data\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.patch = function(url, data, fn){\n  var req = request('PATCH', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} data\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.post = function(url, data, fn){\n  var req = request('POST', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} data or fn\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.put = function(url, data, fn){\n  var req = request('PUT', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * Expose `request`.\n */\n\nmodule.exports = request;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/superagent/lib/client.js\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** (webpack)/buildin/module.js\n **/","\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks[event] = this._callbacks[event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  var self = this;\n  this._callbacks = this._callbacks || {};\n\n  function on() {\n    self.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks[event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks[event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks[event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks[event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/superagent/~/component-emitter/index.js\n **/","\n/**\n * Reduce `arr` with `fn`.\n *\n * @param {Array} arr\n * @param {Function} fn\n * @param {Mixed} initial\n *\n * TODO: combatible error handling?\n */\n\nmodule.exports = function(arr, fn, initial){  \n  var idx = 0;\n  var len = arr.length;\n  var curr = arguments.length == 3\n    ? initial\n    : arr[idx++];\n\n  while (idx < len) {\n    curr = fn.call(null, curr, arr[idx], ++idx, arr);\n  }\n  \n  return curr;\n};\n\n\n/** WEBPACK FOOTER **\n ** ./~/superagent/~/reduce-component/index.js\n **/"],"sourceRoot":""}